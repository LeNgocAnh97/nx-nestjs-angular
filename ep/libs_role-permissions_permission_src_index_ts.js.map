{"version":3,"file":"libs_role-permissions_permission_src_index_ts.js","mappings":"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","names":["i0","tag_r4","DetailModalItemsComponent_ng_container_6_nz_tag_1_Template","ctx_r0","filteredTags","DetailModalItemsComponent","constructor","this","productName","nzModalData","inject","NZ_MODAL_DATA","iComLibsServicesProjectIamRoleService","IComLibsServicesProjectIamRoleService","ngOnInit","_this","_asyncToGenerator","result","lastValueFrom","listAccount","data","id","status","tags","items","err","console","log","onSearchChange","filter","tag","toLowerCase","includes","searchTerm","static","t","core","Xpm","selectors","inputs","standalone","features","decls","vars","consts","template","rf","ctx","$event","DetailModalItemsComponent_ng_container_6_Template","DetailModalItemsComponent_ng_template_7_Template","name","length","_r1","NzInputModule","i1","NzTagModule","i2","FormsModule","i3","NgFor","NzEmptyModule","i4","NgIf","encapsulation","_r2","ctx_r1","handlerAdd","ctx_r3","handlerFunctionControl","columns","loadData","fields","model","form","IcomLibRolePermissionListComponent","decimalPipe","FormGroup","productService","IComLibsServicesProductService","IComMessageService","cdr","ChangeDetectorRef","modalService","NzModalService","className","fieldGroupClassName","fieldGroup","key","type","props","placeholder","viewValue","labelProp","label","valueProp","options","router","Router","params","list","pipe","map","res","convertKeysToLowerCase","title","callback","modal","create","nzTitle","nzContent","nzData","nzFooter","onClick","close","actions","editItem","bind","condition","handlerRemove","row","confirm","nzOkText","nzOkType","nzMaskClosable","nzClosable","nzOnOk","processDeleteInventory","nzCancelText","deleteRow","then","showAlertMessageDone","eventFunctionControl","reset","catch","showAlertMessageError","error","error_message","event","navigateByUrl","closeDrawer","drawerRef","resetPassword","removeItem","viewQuery","DecimalPipe","NzDrawerService","IcomLibRolePermissionListComponent_icom_libs_core_components_table_2_Template","IcomLibsCoreTableComponent","NzDrawerModule","NzModalModule","NzButtonModule","NzGridModule","changeDetection"],"sourceRoot":"webpack:///","sources":["./libs/role-permissions/permission/src/items/items.component.html","./libs/role-permissions/permission/src/items/items.component.ts","./libs/role-permissions/permission/src/list/list.component.html","./libs/role-permissions/permission/src/list/list.component.ts"],"sourcesContent":["<div class=\"flex flex-col\">\n  <span class=\"text-sm font-semibold\"> \n    {{ nzModalData.data?.name || '' }}\n  </span>\n  <nz-input-group class=\"mt-4\" nzPrefixIcon=\"search\">\n    <input type=\"text\" nz-input [(ngModel)]=\"searchTerm\" (ngModelChange)=\"onSearchChange()\" placeholder=\"Tìm kiếm theo email\"/>\n  </nz-input-group>\n  <div class=\"tags-list mt-4\">\n    <ng-container *ngIf=\"filteredTags.length; else noDataTemplate\">\n      <nz-tag *ngFor=\"let tag of filteredTags\">{{ tag }}</nz-tag>\n    </ng-container>\n  </div>\n</div>\n\n<ng-template #noDataTemplate>\n  <nz-empty nzNotFoundContent=\"Không có dữ liệu\"></nz-empty>\n</ng-template>\n","import { NgFor, NgIf } from '@angular/common';\nimport { Component, Input, OnInit, inject } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IComLibsServicesProjectIamRoleService } from '@icom/services/projects';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NZ_MODAL_DATA } from 'ng-zorro-antd/modal';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\nimport { lastValueFrom } from 'rxjs';\n\n@Component({\n  selector: 'app-detail-modal',\n  templateUrl: './items.component.html',\n  standalone: true,\n  imports: [\n    NzInputModule,\n    NzTagModule,\n    FormsModule,\n    NgFor,\n    NzEmptyModule,\n    NgIf\n  ]\n})\nexport class DetailModalItemsComponent implements OnInit {\n  protected filteredTags: string[] = [];\n\n  @Input() tags!: string[];\n  @Input() productName: string[] = [];\n\n  protected searchTerm!: string;\n  protected readonly nzModalData = inject(NZ_MODAL_DATA);\n  protected iComLibsServicesProjectIamRoleService = inject(IComLibsServicesProjectIamRoleService);\n\n  async ngOnInit() {\n    try {\n      const result = await lastValueFrom(this.iComLibsServicesProjectIamRoleService.listAccount(this.nzModalData.data.id, {  status: this.nzModalData.data.status }));\n      this.tags =  result?.data?.items;\n      this.filteredTags = this.tags;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  onSearchChange(): void {\n    this.filteredTags = this.tags.filter(tag =>\n      tag.toLowerCase().includes(this.searchTerm.toLowerCase())\n    );\n  }\n}\n","<div class=\"flex w-full h-full flex-col\">\n  <div nz-row class=\" w-full\" style=\"justify-content: end\">\n    <icom-libs-core-components-table\n      *ngIf=\"loadData\"\n      class=\"w-full\"\n      [columns]=\"columns\"\n      [loadFn]=\"loadData\"\n      [fields]=\"fields\"\n      [model]=\"model\"\n      [form]=\"form\"\n      (icomAdd)=\"handlerAdd()\"\n      (icomFunctionControl)=\"handlerFunctionControl($event)\"\n    ></icom-libs-core-components-table>\n  </div>\n</div>","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, TemplateRef, ViewChild, inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { IComLibsServicesInventoryService, IComLibsServicesProductService, IComLibsServicesProjectIamRoleService } from '@icom/services/projects';\nimport { IcomLibsCoreTableComponent } from '@icom/components/table';\nimport { DecimalPipe, NgIf } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { NzModalModule, NzModalService } from 'ng-zorro-antd/modal';\nimport { IComMessageService } from '@icom/services/common';\nimport { NzDrawerModule, NzDrawerService } from 'ng-zorro-antd/drawer';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { lastValueFrom, map, of } from 'rxjs';\nimport { DetailModalItemsComponent } from '../items/items.component';\nimport { IInventory } from '@icom/interfaces';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { convertKeysToLowerCase } from '@icom/defines';\n@Component({\n  selector: 'icom-libs-role-permissions-account',\n  templateUrl: './list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    IcomLibsCoreTableComponent,\n    NgIf,\n    NzDrawerModule,\n    NzModalModule,\n    NzButtonModule,\n    NzGridModule,\n  ],\n  providers: [\n    DecimalPipe,\n    NzDrawerService,\n  ]\n})\nexport class IcomLibRolePermissionListComponent implements OnInit {\n  form = new FormGroup({});\n  model = {};\n  columns: any[];\n\n  private eventFunctionControl: any;\n  private drawerRef!: any;\n\n  protected iComLibsServicesProjectIamRoleService = inject(IComLibsServicesProjectIamRoleService);\n  protected productService = inject(IComLibsServicesProductService);\n  protected IComMessageService = inject(IComMessageService);\n  protected cdr = inject(ChangeDetectorRef);\n  protected modalService = inject(NzModalService);\n  \n  @ViewChild('footerTemplate') footerTemplate!: TemplateRef<any>;\n\n  fields: FormlyFieldConfig[] = [\n    {\n      className: 'flex flex-col',\n      fieldGroupClassName: 'flex w-full justify-center',\n      fieldGroup: [\n        {\n          key: 'status',\n          type: 'select-custom',\n          className: 'mb-4 basis-6/12',\n          props: {\n            placeholder: 'Chọn trạng thái',\n            viewValue: 'name',\n            labelProp: 'name',\n            label: \"Trạng thái\",\n            valueProp: 'id',\n            options: [\n              {\n                name: 'Hoạt động',\n                id: 0,\n              },\n              {\n                name: 'Ngừng hoạt động',\n                id: 1,\n              },\n            ],\n          },\n        }\n        \n      ]\n    }\n  ];\n\n  protected router = inject(Router);\n\n  constructor(\n    private decimalPipe: DecimalPipe,\n  ) {\n    this.columns = [];\n  }\n\n  ngOnInit(): void {\n    this.columns = [\n      {\n        title: \"STT\",\n        type: \"index\",\n      },\n      {\n        title: \"Tên vai trò\",\n        key: \"name\",\n        type: \"text\",\n      },\n      {\n        title: \"Số tài khoản đang kích hoạt\",\n        key: \"active_count\",\n        type: \"text-link\",\n        callback: (data: any) => {\n          const modal: any = this.modalService.create({\n            nzTitle: 'Danh sách tài khoản đang kích hoạt',\n            nzContent: DetailModalItemsComponent,\n            nzData: { data: data },\n            nzFooter: [\n              {\n                label: 'Đóng',\n                onClick: () => modal.close()\n              }\n            ]\n          });\n          \n        }\n      },\n      {\n        title: \"Danh sách tài khoản ngừng kích hoạt\",\n        key: \"inactive_count\",\n        type: \"text-link\",\n        callback: (data: any) => {\n\n          const modal: any = this.modalService.create({\n            nzTitle: 'Danh sách tài khoản ngừng kích hoạt',\n            nzContent: DetailModalItemsComponent,\n            nzData: { data: data },\n            nzFooter: [\n              {\n                label: 'Đóng',\n                onClick: () => modal.close()\n              }\n            ]\n          });\n          \n        }\n      },\n      {\n        title: \"Trạng thái\",\n        key: \"status\",\n        type: \"text\",\n      },\n      {\n        title: \"Thời gian tạo\",\n        key: \"created_at\",\n        type: 'text', pipe: 'time'\n      },\n      {\n        title: \"Tên người tạo\",\n        key: \"created_by_name\",\n        type: \"text\",\n      },\n      {\n        title: \"Thời gian cập nhật cuối\",\n        key: \"updated_at\",\n        type: 'text', \n        pipe: 'time'\n      },\n      {\n        title: \"Người cập nhật cuối\",\n        key: \"updated_by_name\",\n        type: \"text\",\n      },\n      {\n        title: \"Thao tác\",\n        key: \"actions\",\n        type: \"action\",\n        actions: [\n          {\n            name: \"Sửa\",\n            callback: this.editItem.bind(this),\n            condition: () => {\n              return true;\n            },\n          },\n          {\n            name: \"Xóa\",\n            callback: this.handlerRemove.bind(this),\n            condition: () => {\n              return true;\n            },\n          },\n        ],\n      },\n    ];\n  }\n\n  protected handlerRemove(row: IInventory) {\n    this.modalService.confirm({\n      nzTitle: `Bạn có chắc chắn muốn hủy vai trò ${row.name} ?`,\n      nzContent: `Các tài khoản của vai trò này sẽ bị Ngừng kích hoạt`,\n      nzOkText: 'Đồng ý',\n      nzOkType: 'primary',\n      nzMaskClosable: false,\n      nzClosable: false,\n      nzOnOk: this.processDeleteInventory.bind(this, row),\n      nzCancelText: 'Hủy'\n    }, 'error');\n  }\n\n  private processDeleteInventory(row: IInventory) {\n    return lastValueFrom(this.iComLibsServicesProjectIamRoleService.deleteRow(row.id || '')).then(() => {\n      this.IComMessageService.showAlertMessageDone('Delete inventory success');\n      this.eventFunctionControl.reset();\n    }).catch((err) => {\n      this.IComMessageService.showAlertMessageError((err as HttpErrorResponse)?.error?.error_message);\n    });\n  }\n\n  handlerFunctionControl(event: any) {\n    this.eventFunctionControl = event;\n  }\n\n  loadData = (params: any) => {\n    return this.iComLibsServicesProjectIamRoleService.list(params).pipe(\n      map((res) => {\n        return convertKeysToLowerCase(res);\n      })\n    );\n  }\n\n  editItem(data: any): void {\n    this.handlerAdd(data);\n  }\n\n  protected handlerAdd(data?: any) {\n    if(data) {\n      this.router.navigateByUrl(`role-permissions/permission/detail?mode=edit&id=${data?.id}`);\n      return;\n    }\n    this.router.navigateByUrl(`role-permissions/permission/detail`);\n  }\n\n  closeDrawer() {\n    if (this.drawerRef) {\n      this.drawerRef.close();\n    }\n  }\n\n  resetPassword() {\n    console.log('resetPassword clicked');\n  }\n\n  removeItem() {\n    console.log('Save button clicked');\n  }\n}\n"],"x_google_ignoreList":[]}