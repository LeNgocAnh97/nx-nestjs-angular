{"version":3,"file":"default-libs_inventory_items_src_index_ts.js","mappings":"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","names":["i0","ctx_r0","dataProduct","name","gen_code_type","IcomLibInventoryListItemsAddManualComponent","constructor","this","form","FormGroup","model","options","formState","hideQuantity","IComLibsServicesProductService","inject","inventoryService","IComLibsServicesInventoryService","IComMessageService","nzModalData","NZ_MODAL_DATA","icomSave","EventEmitter","fields","ngOnInit","_this","_asyncToGenerator","key","type","className","props","label","placeholder","required","change","_ref","field","$event","product_id","undefined","result","lastValueFrom","getProduct","_x","_x2","apply","arguments","viewValue","labelProp","valueProp","searchInventory","pipe","map","data","items","expressions","hide","productId","handlerSave","callback","_this2","valid","Object","keys","controls","forEach","touched","success","showAlertMessageError","markAsTouched","submitted","processUpload","err","showAlertMessageDone","error","error_message","_this3","id","save","emit","static","t","core","Xpm","selectors","inputs","outputs","standalone","features","decls","vars","consts","template","rf","ctx","IcomLibInventoryListItemsAddManualComponent_ng_container_2_Template","FormlyModule","i1","ReactiveFormsModule","i2","NgIf","encapsulation","ctx_r1","IcomLibInventoryListItemsImportFileComponent_ng_container_11_div_2_Template","IcomLibInventoryListItemsImportFileComponent_ng_container_11_nz_spin_3_Template","isLoadingContent","IcomLibInventoryListItemsImportFileComponent","msg","fileList","beforeUpload","file","_fileList","Observable","observer","isJpgOrPng","complete","isLt2M","size","length","next","parsers","value","isLoading","formData","FormData","append","originFileObj","expirte_time","uploadFile","res","file_id","import","subscribe","IcomLibInventoryListItemsImportFileComponent_ng_container_11_Template","i3","NzUploadModule","i4","NzSpinModule","i5","Page","totalElements","totalPages","pageNumber","IcomLibInventoryListItemsComponent_ng_template_23_span_2_Template","IcomLibInventoryListItemsComponent_ng_template_23_span_3_Template","IcomLibInventoryListItemsComponent_ng_template_23_span_4_Template","IcomLibInventoryListItemsComponent_ng_template_23_span_5_Template","row_r2","status","IcomLibInventoryListItemsComponent","hidden","rows","loadingIndicator","ColumnMode","headerHeight","rowHeight","pageLimit","pagination","productService","modalService","NzModalService","router","Router","route","ActivatedRoute","destroyRef","DestroyRef","viewContainerRef","ViewContainerRef","cdr","ChangeDetectorRef","columns","fieldGroupClassName","fieldGroup","defaultValue","templateOptions","classInclude","ignoreRemoveIcon","code","getOptionType","searchProduct","page","limit","queryParams","takeUntilDestroyed","params","inventoryId","inventory","product","prop","width","sortable","cellTemplate","statusRef","formatDatePipe","hideCheckbox","combineLatest","listInventory","results","dataType","columnType","find","item","pipeParseStatus","loadPage","offset","listStatus","transform","handlerSearch","e","stopPropagation","preventDefault","handlerReset","reset","dataBody","start_time","dayjs","format","end_time","getListProductsInventories","inventory_id","total_rows","console","log","detectChanges","toggleCollapse","showModal","modal","create","nzTitle","nzContent","nzMaskClosable","nzClosable","nzOnOk","Promise","reject","nzViewContainerRef","nzData","nzFooter","onClick","destroy","loading","getContentComponent","containerInstance","handleCancel","isVisible","handlerShowModalImportFile","handlerToggleCollapse","viewQuery","IcomLibInventoryListItemsComponent_ng_template_23_Template","customerInvetory","force","NgxDatatableModule","FormlyNgZorroAntdModule","NzButtonModule","i6","NzFormModule","i7","i8","NgSwitch","NgSwitchCase","NzTypographyModule","i9","NzIconModule","i10","NzModalModule","NzSelectModule","FormsModule","NzDropDownModule","changeDetection"],"sourceRoot":"webpack:///","sources":["./libs/inventory/items/src/list/modals/add-manual/add-manual.component.html","./libs/inventory/items/src/list/modals/add-manual/add-manual.component.ts","./libs/inventory/items/src/list/modals/import-file/import-file.component.html","./libs/inventory/items/src/list/modals/import-file/import-file.component.ts","./libs/inventory/items/src/list/defines/page.model.ts","./libs/inventory/items/src/list/list.component.html","./libs/inventory/items/src/list/list.component.ts"],"sourcesContent":["<form [formGroup]=\"form\" nz-form class=\"!p-4 bg-white border rounded-md\">\n  <formly-form\n    [model]=\"model\"\n    [fields]=\"fields\"\n    [options]=\"options\"\n    [form]=\"form\"\n  ></formly-form>\n</form>\n\n<ng-container *ngIf=\"dataProduct\">\n  <div class=\"mt-4\">\n    <div class=\"form-group\">\n      <label class=\"control-label\"> Name Product: {{ dataProduct.name }}</label>\n    </div>\n  </div>\n  \n  <div class=\"mt-5\">\n    <div class=\"form-group\">\n      <label class=\"control-label\"> Pro Type: {{ dataProduct.gen_code_type }}</label>\n    </div>\n  </div>\n</ng-container>\n","import { NgIf } from '@angular/common';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Component, EventEmitter, Input, OnInit, Output, inject } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { IPaginationData, IProduct, TYPE_FORM_CONTROL } from '@icom/interfaces';\nimport { IComMessageService } from '@icom/services/common';\nimport { IComLibsServicesInventoryService, IComLibsServicesProductService } from '@icom/services/projects';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyModule } from '@ngx-formly/core';\nimport { NZ_MODAL_DATA } from 'ng-zorro-antd/modal';\nimport { lastValueFrom, map } from 'rxjs';\n\n\n@Component({\n  selector: 'icom-libs-inventory-items-list-add_manual',\n  templateUrl: './add-manual.component.html',\n  standalone: true,\n  imports: [\n    FormlyModule,\n    ReactiveFormsModule,\n    NgIf\n  ]\n})\nexport class IcomLibInventoryListItemsAddManualComponent implements OnInit {\n  protected form = new FormGroup({});\n  protected model: any = {};\n  protected pagination!: IPaginationData;\n  protected options: FormlyFormOptions = {\n    formState: {\n      hideQuantity: true\n    },\n  };\n  protected fields: FormlyFieldConfig[];\n  protected dataProduct!: IProduct | undefined;\n\n  protected IComLibsServicesProductService = inject(IComLibsServicesProductService);\n  protected inventoryService = inject(IComLibsServicesInventoryService); \n  protected IComMessageService = inject(IComMessageService);\n  protected readonly nzModalData = inject(NZ_MODAL_DATA);\n\n  @Input() productId: string | undefined;\n  \n  @Output() icomSave: EventEmitter<boolean> = new EventEmitter();\n\n  constructor() {\n    this.fields = [];\n   }\n\n  async ngOnInit() {\n\n    this.fields = [\n      {\n        key: 'product_id',\n        type: 'input',\n        className: 'basis-4/12',\n        props: {\n          label: 'Product ID',\n          placeholder: 'Enter Product ID',\n          type: 'string',\n          required: true,\n          change: async (field, $event)=> {\n            try {\n              this.options.formState.hideQuantity = true;\n              if(!this.model.product_id) {\n                this.dataProduct = undefined;\n                return;\n              }\n              const result = await lastValueFrom(this.IComLibsServicesProductService.getProduct(this.model.product_id));\n              this.dataProduct = result;\n              this.options.formState.hideQuantity = false;\n            } catch (err) {\n              this.dataProduct = undefined;\n            }\n          },\n        },\n      },\n      {\n        key: 'inventory_product_id',\n        type: 'select-custom',\n        className: 'basis-4/12',\n        props: {\n          label: 'Inventory Name',\n          placeholder: 'Select Inventory Name',\n          type: 'string',\n          viewValue: 'name',\n          labelProp: 'name',\n          required: true,\n          valueProp: 'id',\n          options: this.inventoryService.searchInventory().pipe(\n            map(result => {\n              return result?.data?.items;\n            }\n          ))\n        },\n      },\n      {\n        key: 'quantity',\n        type: 'input',\n        className: 'basis-4/12',\n        props: {\n          label: 'Quantity',\n          required: true,\n          placeholder: 'Enter Quantity',\n          type: 'number'\n        },\n        expressions: {\n          hide: 'formState.hideQuantity'\n        }\n      },\n    ];\n    if(!this.nzModalData.productId) {\n      return;\n    }\n    this.model.product_id =  this.nzModalData.productId || '';\n    try {\n      this.options.formState.hideQuantity = true;\n      if(!this.model.product_id) {\n        this.dataProduct = undefined;\n        return;\n      }\n      const result = await lastValueFrom(this.IComLibsServicesProductService.getProduct(this.model.product_id));\n      this.dataProduct = result;\n      this.options.formState.hideQuantity = false;\n    } catch (err) {\n      this.dataProduct = undefined;\n    }\n  }\n\n  public async handlerSave(callback: any) {\n    try {\n      if (!this.form.valid) {\n        Object.keys(this.form.controls as TYPE_FORM_CONTROL).forEach((key) => {\n          (this.form.controls as TYPE_FORM_CONTROL)[key].touched = true;\n        });\n        callback.success && callback.success();\n        return;\n      }\n      if(this.dataProduct && this.dataProduct.gen_code_type !== 'GENCODE_TYPE_PRE_GENERATED') {\n        this.IComMessageService.showAlertMessageError('Only add items for gen code type is Pre Gen');\n        callback.success && callback.success();\n        return;\n      }\n      this.form.markAsTouched();\n      (this.form as TYPE_FORM_CONTROL).submitted = true;\n      this.processUpload(callback);\n\n    } catch (err) {\n      this.IComMessageService.showAlertMessageDone((err as HttpErrorResponse)?.error?.error_message);\n    } finally {\n      // callback.success && callback.success();\n    }\n  }  \n\n  private async processUpload(callback: any) {\n    const model = {\n      ...this.model,\n    }\n    model.product_id = +model.product_id || 0;\n    delete model.id;\n    try  {\n      const result = await lastValueFrom(this.inventoryService.save(model));\n      this.IComMessageService.showAlertMessageDone('Add Inventory Items success');\n      callback.success && callback.success();\n      this.icomSave.emit(true);\n    } catch(err) {\n      this.IComMessageService.showAlertMessageError((err as HttpErrorResponse)?.error?.error_message || 'Add Inventory Items failed');\n    } finally {\n      callback.success && callback.success();\n    }\n  }\n\n}\n","<div class=\"!p-4 bg-white border rounded-md\">\n  <form [formGroup]=\"form\" nz-form>\n    <formly-form\n      [model]=\"model\"\n      [fields]=\"fields\"\n      [options]=\"options\"\n      [form]=\"form\"\n    ></formly-form>\n  </form>\n  <nz-upload\n    class=\"basis-1/2 ml-4 h-full w-full\"\n    nzName=\"avatar\"\n    nzType=\"drag\"\n    [nzMultiple]=\"false\"\n    [(nzFileList)]=\"fileList\"\n    [nzBeforeUpload]=\"beforeUpload\"\n  >\n    <ng-container>\n      <p class=\"ant-upload-drag-icon\"><span nz-icon nzType=\"inbox\"></span></p>\n      <p class=\"ant-upload-text\">Upload file CSV</p>\n      <p class=\"ant-upload-hint\">Size can't exceed 2 MB</p>\n    </ng-container>\n  </nz-upload>\n</div>\n\n<ng-container *ngIf=\"dataProduct\">\n  <div class=\"mt-4\">\n    <div *ngIf=\"!isLoadingContent\" class=\"form-group\">\n      <label class=\"control-label\"> Name Product: {{ dataProduct.name }}</label>\n    </div>\n    <nz-spin\n      *ngIf=\"isLoadingContent\"\n      class=\"w-full h-full flex justify-center items-center\"\n      nzSimple\n      [nzSize]=\"'large'\"\n    ></nz-spin>\n  </div>\n</ng-container>\n","import { NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, EventEmitter, Inject, Input, OnInit, Output, inject } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { IPaginationData, IProduct, TYPE_FORM_CONTROL } from '@icom/interfaces';\nimport { IComLibsServicesInventoryService, IComLibsServicesProductService } from '@icom/services/projects';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyModule } from '@ngx-formly/core';\nimport { debounceTime, delay, lastValueFrom, map, switchMap } from 'rxjs';\nimport { Observable, Observer } from 'rxjs';\n\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { NzUploadFile } from 'ng-zorro-antd/upload';\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\nimport { environment } from 'libs/core/environments/environment';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { IComMessageService } from '@icom/services/common';\nimport { parseDateRangeToTwoKey } from '@icom/defines';\nimport { NZ_MODAL_DATA } from 'ng-zorro-antd/modal';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\n\n@Component({\n  selector: 'icom-libs-inventory-items-list-import_file',\n  templateUrl: './import-file.component.html',\n  standalone: true,\n  imports: [\n    FormlyModule,\n    ReactiveFormsModule,\n    NgIf,\n    NzUploadModule,\n    NzSpinModule\n  ],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class IcomLibInventoryListItemsImportFileComponent implements OnInit {\n  protected form = new FormGroup({});\n  protected model: any = {};\n  protected pagination!: IPaginationData;\n  protected options: FormlyFormOptions = {\n    formState: {\n      hideQuantity: true\n    },\n  };\n  protected fields: FormlyFieldConfig[];\n  protected dataProduct!: IProduct | undefined;\n  protected fileList: NzUploadFile[] = [];\n  protected isLoading!: boolean;\n  protected isLoadingContent!: boolean;\n  protected IComLibsServicesProductService = inject(IComLibsServicesProductService);\n  protected inventoryService = inject(IComLibsServicesInventoryService);\n  protected IComMessageService = inject(IComMessageService);\n  protected readonly nzModalData = inject(NZ_MODAL_DATA);\n\n  @Input() productId: string | undefined;\n\n  @Output() icomSave: EventEmitter<boolean> = new EventEmitter();\n\n  constructor(\n    private msg: NzMessageService,\n  ) {\n    this.fields = [];\n  }\n\n async  ngOnInit() {\n    this.fields = [\n      {\n        key: 'product_id',\n        type: 'input',\n        className: 'basis-4/12',\n        props: {\n          label: 'Product ID',\n          placeholder: 'Enter Product ID',\n          viewValue: 'label',\n          required: true,\n          change: async (field, $event)=> {\n            try {\n              if(!this.model.product_id) {\n                this.dataProduct = undefined;\n                return;\n              }\n              this.isLoadingContent = true;\n              const result = await lastValueFrom(this.IComLibsServicesProductService.getProduct(this.model.product_id));\n              this.dataProduct = result;\n            } catch (err) {\n              this.dataProduct = undefined;\n            } finally {\n              this.isLoadingContent = false;\n            }\n          },\n        },\n      },\n      {\n        key: 'inventory_id',\n        type: 'select-custom',\n        parsers: [(value: string) => +value],\n        className: 'basis-4/12',\n        props: {\n          label: 'Inventory',\n          placeholder: 'Select Inventory',\n          type: 'string',\n          viewValue: 'name',\n          labelProp: 'name',\n          required: true,\n          valueProp: 'id',\n          options: this.inventoryService.searchInventory().pipe(\n            map(result => {\n              return result?.data?.items;\n            }\n            ))\n        },\n      }\n    ]\n    if(!this.nzModalData.productId) {\n      return;\n    }\n    this.model.product_id =  this.nzModalData.productId || '';\n    try {\n      if(!this.model.product_id) {\n        this.dataProduct = undefined;\n        return;\n      }\n      this.isLoadingContent = true;\n      const result = await lastValueFrom(this.IComLibsServicesProductService.getProduct(this.model.product_id));\n      this.dataProduct = result;\n    } catch (err) {\n     \n      this.dataProduct = undefined;\n    } finally {\n      this.isLoadingContent = false;\n    }\n  }\n\n  public async handlerSave(callback?: any) {\n    try {\n      if (!this.form.valid) {\n        Object.keys(this.form.controls as TYPE_FORM_CONTROL).forEach((key) => {\n          (this.form.controls as TYPE_FORM_CONTROL)[key].touched = true;\n        });\n        callback.success && callback.success();\n        return;\n      }\n      this.form.markAsTouched();\n      (this.form as TYPE_FORM_CONTROL).submitted = true;\n      this.processUpload(callback);\n\n    } catch (err) {\n      this.IComMessageService.showAlertMessageError((err as HttpErrorResponse)?.error?.error_message || 'Import fail');\n    } finally {\n      // callback.success && callback.success();\n    }\n  }\n\n  private processUpload(callback: any) {\n    this.isLoading = true;\n    const formData = new FormData();\n    formData.append('file', this.fileList[0].originFileObj as File);\n    const model = {\n      ...this.model,\n      expirte_time: null\n    }\n    this.inventoryService.uploadFile(formData).pipe(\n      map((res) => {\n        model.file_id = res.data?.file_id || ''\n        this.inventoryService.import(model).subscribe({\n          next: () => {\n            this.IComMessageService.showAlertMessageDone('Import success');\n            callback.success && callback.success();\n            this.icomSave.emit(true);\n          },\n          error: (err) => {\n            this.IComMessageService.showAlertMessageError((err as HttpErrorResponse)?.error?.error_message);\n            this.isLoading = false;\n            callback.success && callback.success();\n          },\n        })\n      })\n    ).subscribe({\n      error: (err) => {\n        this.IComMessageService.showAlertMessageError((err as HttpErrorResponse)?.error?.error_message);\n        this.isLoading = false;\n        callback.success && callback.success();\n      },\n    });\n  }\n\n  protected beforeUpload = (file: NzUploadFile, _fileList: NzUploadFile[]): Observable<boolean> =>\n    new Observable((observer: Observer<boolean>) => {\n      const isJpgOrPng = file.type === 'text/csv';\n      if (!isJpgOrPng) {\n        this.msg.error('You can only upload CSV file!');\n        observer.complete();\n        return;\n      }\n      const isLt2M = file.size! / 1024 / 1024 < 2;\n      if (!isLt2M) {\n        this.msg.error('Image must smaller than 2MB!');\n        observer.complete();\n        return;\n      }\n      if (this.fileList && this.fileList.length) {\n        this.msg.error('Only Post One File');\n        observer.complete();\n        return;\n      }\n      observer.next(isJpgOrPng && isLt2M);\n      observer.complete();\n    });\n}\n","export class Page {\n  size = 0;\n  totalElements = 0;\n  totalPages = 0;\n  pageNumber = 0;\n  \n}","<div class=\"flex w-full h-full flex-col\">\n  <form [formGroup]=\"form\" nz-form class=\"!p-4 bg-white border rounded-md\"   (keydown.enter)=\"handlerSearch($event)\">\n    <formly-form\n      [model]=\"model\"\n      [fields]=\"fields\"\n      [options]=\"options\"\n      [form]=\"form\"\n    ></formly-form>\n    <div nz-row class=\"flex justify-between\">\n      <div class=\"flex\">\n        <button  [hidden]=\"customerInvetory\" nz-button class=\"flex items-center\" [nzType]=\"'primary'\" (click)=\"showModal($event)\">\n          <i nz-icon nzType=\"plus\" nzTheme=\"outline\"></i>\n          Add Manual\n        </button>\n        <button\n        [hidden]=\"customerInvetory\"\n          class=\"ml-4\"\n          nz-button\n          [nzType]=\"'primary'\"\n          (click)=\"handlerShowModalImportFile()\"\n        >\n          <i nz-icon nzType=\"file-add\" nzTheme=\"outline\"></i>\n          Import File\n        </button>\n      </div>\n      <div nz-col class=\"search-area flex items-center\">\n        <button\n          class=\"!flex !items-center\"\n          nz-button\n          [nzType]=\"'primary'\"\n          (click)=\"handlerSearch($event)\"\n        >\n          <i nz-icon nzType=\"search\" nzTheme=\"outline\"></i>\n          Search\n        </button>\n        <button\n          class=\"ml-4 !flex !items-center\"\n          nz-button\n          (click)=\"handlerReset()\"\n        >\n          <i nz-icon nzTheme=\"outline\" nzType=\"close-circle\"></i>\n          Reset\n        </button>\n        <a class=\"ml-4 items-center flex\" (click)=\"handlerToggleCollapse()\">\n          {{ !options.formState.hidden ? 'Expand' : 'Collapse' }}\n          <span\n            class=\"ml-2\"\n            nz-icon\n            [nzType]=\"!options.formState.hidden ? 'down' : 'up'\"\n          ></span>\n        </a>\n      </div>\n    </div>\n  </form>\n\n  <div class=\"w-full h-full mt-4 overflow-hidden\">\n    <ngx-datatable\n      class=\"material expandable striped w-full h-full\"\n      [rows]=\"rows\"\n      [columns]=\"columns\"\n      [headerHeight]=\"headerHeight\"\n      [columnMode]=\"ColumnMode.force\"\n      [rowHeight]=\"rowHeight\"\n      [scrollbarH]=\"true\"\n      [footerHeight]=\"50\"\n      [virtualization]=\"false\"\n      [loadingIndicator]=\"loadingIndicator\"\n      [count]=\"pagination.totalElements\"\n      [offset]=\"pagination.pageNumber\"\n      [externalPaging]=\"true\"\n      [limit]=\"model?.limit || 15\"\n      (page)=\"loadPage($event)\"\n    >\n    </ngx-datatable>\n  </div>\n</div>\n<ng-template #statusRef let-row=\"row\" let-value=\"value\">\n  <div class=\"name-container\">\n    <ng-container [ngSwitch]=\"row.status\">\n      <span *ngSwitchCase=\"0\" nz-typography>Ready</span>\n      <span *ngSwitchCase=\"1\" nz-typography nzType=\"success\">Hold</span>\n      <span *ngSwitchCase=\"2\" nz-typography nzType=\"success\">Sold</span>\n      <span *ngSwitchCase=\"3\" nz-typography nzType=\"danger\">Deleted</span>\n    </ng-container>\n  </div>\n</ng-template>\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ComponentRef, DestroyRef, ElementRef, Input, OnInit, PipeTransform, TemplateRef, ViewChild, ViewContainerRef, inject } from '@angular/core';\nimport { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FormlyFormOptions, FormlyFieldConfig, FormlyModule } from '@ngx-formly/core';\nimport { FormlyNgZorroAntdModule } from '@ngx-formly/ng-zorro-antd';\nimport { ColumnMode, NgxDatatableModule, TableColumn } from '@swimlane/ngx-datatable';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { IComLibsServicesInventoryService, IComLibsServicesProductService } from \"@icom/services/projects\";\nimport { Subject, combineLatest, lastValueFrom, map, of } from 'rxjs';\nimport { JsonPipe, NgForOf, NgSwitch, NgSwitchCase } from '@angular/common';\nimport { NzTypographyModule } from 'ng-zorro-antd/typography';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { IInventory, IPaginationData, TYPE_TEMPLATE_REF } from '@icom/interfaces';\nimport * as dayjs from 'dayjs';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { IComMessageService } from '@icom/services/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { IcomLibInventoryListItemsAddManualComponent } from './modals/add-manual/add-manual.component';\nimport { IcomLibInventoryListItemsImportFileComponent } from './modals/import-file/import-file.component';\nimport { formatDatePipe } from '@icom/defines';\nimport { Page } from './defines/page.model';\n\n@Component({\n  selector: 'icom-libs-inventory-items-list',\n  templateUrl: './list.component.html',\n  standalone: true,\n  imports: [\n    NgxDatatableModule,\n    FormlyNgZorroAntdModule,\n    ReactiveFormsModule,\n    FormlyModule,\n    NzButtonModule,\n    NzFormModule,\n    NgForOf,\n    NgSwitch,\n    NgSwitchCase,\n    NzTypographyModule,\n    NzIconModule,\n    NzModalModule,\n    NzSelectModule,\n    FormsModule,\n    NzDropDownModule,\n    JsonPipe,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IcomLibInventoryListItemsComponent implements OnInit {\n  protected form = new FormGroup({});\n  protected model: any = {};\n  protected options: FormlyFormOptions = {\n    formState: {\n      hidden: false\n    }\n  };\n\n  protected fields: FormlyFieldConfig[];\n  protected rows: any[] = [];\n  protected loadingIndicator = true;\n  protected columns: TableColumn[];\n  protected ColumnMode = ColumnMode;\n  protected readonly headerHeight = 50;\n  protected readonly rowHeight = 50;\n  protected readonly pageLimit = 10;\n  protected isVisible!: boolean;\n  protected pagination = new Page();\n\n  protected inventoryService = inject(IComLibsServicesInventoryService)\n  protected productService = inject(IComLibsServicesProductService)\n  protected modalService = inject(NzModalService);\n  protected IComMessageService = inject(IComMessageService);\n  protected router = inject(Router);\n  protected route = inject(ActivatedRoute);\n  protected destroyRef = inject(DestroyRef);\n  protected viewContainerRef = inject(ViewContainerRef);\n  protected componentInstance!: IcomLibInventoryListItemsAddManualComponent;\n  protected cdr = inject(ChangeDetectorRef);\n\n  @Input() inventoryId: number | undefined;\n  @Input() productId: number | undefined;\n  @Input() customerInvetory!: boolean;\n\n  @ViewChild('statusRef', { static: true }) statusRef!: TemplateRef<TYPE_TEMPLATE_REF>;\n  @ViewChild('selectRef', { static: true }) selectRef!: TemplateRef<TYPE_TEMPLATE_REF>;\n\n  constructor() {\n    this.pagination.pageNumber = 0;\n    this.pagination.size = 13;\n    this.columns = [];\n    this.fields = [];\n    this.model = {}\n  }\n  async ngOnInit() {\n    this.fields = [\n      {\n        fieldGroupClassName: 'flex flex-col',\n        className: 'basis-1/2',\n        fieldGroup: [\n          {\n            key: 'buyer_customer_id',\n            type: 'input',\n            className: 'basis-4/12 ',\n            props: {\n              label: 'Buyer Customer Id',\n              placeholder: 'Enter Buyer Customer Id',\n              type: 'string'\n            },\n\n          },\n          {\n            key: 'limit',\n            type: 'select-custom',\n            className: 'w-[250px]',\n            defaultValue: 15,\n            templateOptions: {\n              label: 'Limit',\n              classInclude: 'w-[80px]',\n              placeholder: 'Select Limit',\n              viewValue: 'name',\n              labelProp: 'name',\n              valueProp: 'code',\n              ignoreRemoveIcon: true,\n              options: [\n                {\n                  code: 15,\n                  name: 15\n                },\n                {\n                  code: 30,\n                  name: 30\n                },\n                {\n                  code: 50,\n                  name: 50\n                },\n                {\n                  code: 100,\n                  name: 100\n                }\n              ]\n            },\n          },\n          {\n            key: 'campaign_id',\n            type: 'input',\n            className: 'basis-4/12',\n            props: {\n              label: 'Campaign Id',\n              placeholder: 'Enter Campaign Id',\n              type: 'string'\n            },\n            expressions: {\n              hide: '!formState.hidden'\n            },\n          },\n        ],\n      },\n      {\n        fieldGroupClassName: 'flex flex-col',\n        className: 'basis-1/2',\n        fieldGroup: [\n          {\n            key: 'order_id',\n            type: 'input',\n            className: 'basis-4/12 ',\n            props: {\n              label: 'Order Id',\n              placeholder: 'Enter Order Id',\n              type: 'string'\n            },\n            expressions: {\n              hide: '!formState.hidden'\n            },\n          },\n\n          {\n            key: 'serial',\n            type: 'input',\n            className: 'basis-4/12 ',\n            props: {\n              label: 'Serial',\n              placeholder: 'Enter Serial',\n              type: 'string'\n            },\n            expressions: {\n              hide: '!formState.hidden'\n            },\n          },\n          {\n            key: 'status',\n            type: 'select-custom',\n            className: 'basis-3/12 ',\n            props: {\n              label: 'Status',\n              placeholder: 'Select Status',\n              viewValue: 'name',\n              labelProp: 'name',\n              valueProp: 'int_value',\n              options: this.productService.getOptionType('INVENTORY_ITEM_STATUS').pipe(\n                map(result => {\n                  return result?.data;\n                }\n                ))\n            },\n            expressions: {\n              hide: '!formState.hidden'\n            },\n          },\n        ]\n      },\n      {\n        fieldGroupClassName: 'flex flex-col',\n        className: 'basis-1/2',\n        fieldGroup: [\n\n          {\n            key: 'dtm_id',\n            type: 'input',\n            className: 'basis-3/12',\n            props: {\n              label: 'DTM Id',\n              placeholder: 'Enter DTM Id',\n              type: 'string'\n            },\n            expressions: {\n              hide: '!formState.hidden'\n            },\n          },\n          {\n            key: 'product',\n            type: 'select-custom',\n            className: 'basis-3/12 ',\n            props: {\n              label: 'Product',\n              placeholder: 'Select Product',\n              viewValue: 'name',\n              labelProp: 'name',\n              valueProp: 'id',\n              options: this.productService.searchProduct({ page: 1, limit: 99999 }).pipe(\n                map(result => {\n                  return result?.data?.items;\n                }\n                ))\n            },\n            expressions: {\n              hide: '!formState.hidden'\n            },\n\n          },\n          {\n            key: 'inventory',\n            type: 'select-custom',\n            className: 'basis-3/12 ',\n            props: {\n              label: 'Inventory',\n              placeholder: 'Select Inventory',\n              viewValue: 'name',\n              labelProp: 'name',\n              valueProp: 'id',\n              options: this.inventoryService.searchInventory().pipe(\n                map(result => {\n\n                  return result?.data?.items;\n                }\n                ))\n            },\n            expressions: {\n              hide: '!formState.hidden'\n            },\n          },\n        ]\n      },\n    ];\n    this.route.queryParams.pipe(takeUntilDestroyed(this.destroyRef)).subscribe((params) => {\n      if (params) {\n        this.inventoryId = this.inventoryId || params?.inventory || '';\n        this.productId = this.productId || params?.product || '';\n        this.columns = [\n          { prop: 'id', width: 80, sortable: false },\n          { prop: 'name', width: 400, sortable: false },\n          { prop: 'product_id', width: 200, sortable: false, name: 'Product Id' },\n          { prop: 'inventory_id', width: 200, sortable: false, name: 'Inventory Name' },\n          { prop: 'campaign_id', width: 200, sortable: false, name: 'Campaign Id' },\n          { prop: 'serial', width: 200, sortable: false },\n          { prop: 'order_id', width: 200, sortable: false, name: 'Order Id' },\n          { prop: 'buyer_customer_id', sortable: false, name: 'Buyer Customer Id' },\n          { prop: '', sortable: false, name: 'Status', cellTemplate: this.statusRef },\n          { prop: 'start_time', sortable: false, name: 'Start Time', pipe: formatDatePipe() },\n          { prop: 'end_time', sortable: false, name: 'End Time', pipe: formatDatePipe() }\n        ];\n        if (this.inventoryId !== -1 || this.productId !== -1) {\n          this.options.formState.hideCheckbox = !this.options.formState.hideCheckbox;\n        }\n        combineLatest([\n          this.inventoryService.listInventory({page: 1, limit: 999999})]\n        ).subscribe((results: any) => {\n          const [dataType] = results;\n          const columnType = this.columns?.find(item => item.prop === 'inventory_id');\n          columnType && (columnType.pipe = this.pipeParseStatus(dataType));\n          this.columns = this.columns;\n        });\n        this.loadPage({ offset: 0 });\n      }\n    })\n  }\n\n  private pipeParseStatus(data: any) {\n    const listStatus = data?.data?.items as any[] || [];\n    return {\n      transform: (value: string): string  => {\n        const statusObj = listStatus.find(item => item.id === value);\n        return statusObj.name;\n      }\n    }\n  }\n\n  protected handlerSearch(e: Event) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.loadPage({ offset: 0 });\n  }\n\n  protected handlerReset() {\n    this.form.reset();\n    this.loadPage({ offset: 0 });\n  }\n\n  protected async loadPage(page: any) {\n    try {\n      this.pagination.pageNumber = page.offset;\n      this.loadingIndicator = true;\n      const model = { ...this.model };\n      const dataBody = {\n        ...model,\n        start_time: this.model.start_time ? dayjs(this.model.start_time).format('YYYY-MM-DD') : '',\n        end_time: this.model.end_time ? dayjs(this.model.end_time).format('YYYY-MM-DD') : '',\n      }\n      const result = await lastValueFrom(this.inventoryService.getListProductsInventories({\n        ...dataBody,\n        page: this.pagination.pageNumber + 1,\n        limit: this.model.limit || 15,\n      }, {\n        product_id:  model?.product || this.productId,\n        inventory_id: model?.inventory || this.inventoryId\n      }));\n\n      if (result && result.data && result.data.items) {\n        const rows = result.data.items || [];\n        this.rows = rows;\n        this.pagination.totalElements = result.data.pagination.total_rows;\n        return;\n      }\n      this.rows = [];\n      this.pagination.totalElements = result.data.pagination.total_rows;\n    } catch (err) {\n      console.log(err);\n    } finally {\n      this.loadingIndicator = false;\n      this.cdr.detectChanges();\n    }\n  }\n\n  protected toggleCollapse(): void {\n    this.options.formState.hideCheckbox = !this.options.formState.hideCheckbox;\n  }\n\n\n  protected showModal(e: Event): void {\n    e.stopPropagation();\n    e.preventDefault();\n    const modal: any = this.modalService.create<IcomLibInventoryListItemsAddManualComponent>({\n      nzTitle: 'Add Inventory Items',\n      nzContent: IcomLibInventoryListItemsAddManualComponent,\n      nzMaskClosable: false,\n      nzClosable: false,\n      nzOnOk: () => Promise.reject(),\n      nzViewContainerRef: this.viewContainerRef,\n      nzData: {\n        productId: this.productId === -1 ? '' : this.productId\n      },\n      nzFooter: [\n        {\n          label: 'Close',\n          onClick: () => modal.destroy()\n        },\n        {\n          label: 'Save',\n          type: 'primary',\n          loading: false,\n          onClick(): void {\n            this.loading = true;\n            modal.getContentComponent().handlerSave({\n              success: () => {\n                this.loading = false;\n                modal.containerInstance.cdr.detectChanges();\n              }\n            });\n          }\n        },\n      ]\n    });\n    const instance = modal.getContentComponent();\n    instance.icomSave.subscribe(() => {\n      modal.destroy()\n    });\n  }\n\n  protected handleCancel(): void {\n    this.isVisible = false;\n  }\n\n  protected handlerShowModalImportFile() {\n    const modal: any = this.modalService.create<IcomLibInventoryListItemsImportFileComponent>({\n      nzTitle: 'Inventory import',\n      nzContent: IcomLibInventoryListItemsImportFileComponent,\n      nzMaskClosable: false,\n      nzClosable: false,\n      nzOnOk: () => Promise.reject(),\n      nzViewContainerRef: this.viewContainerRef,\n      nzData: {\n        productId: this.productId === -1 ? '' : this.productId,\n        success: () => {\n          modal.destroy();\n        }\n      },\n      nzFooter: [\n        {\n          label: 'Close',\n          onClick: () => modal.destroy()\n        },\n        {\n          label: 'Save',\n          type: 'primary',\n          loading: false,\n          onClick(): void {\n            this.loading = true;\n            modal.getContentComponent().handlerSave({\n              success: () => {\n                this.loading = false;\n                modal?.containerInstance?.cdr?.detectChanges();\n              }\n            });\n          }\n        },\n      ]\n    });\n    const instance = modal.getContentComponent();\n    instance.icomSave.subscribe(() => {\n      modal.destroy()\n    });\n  }\n\n  protected handlerToggleCollapse() {\n    this.options.formState.hidden = !this.options.formState.hidden;\n  }\n}\n"],"x_google_ignoreList":[]}