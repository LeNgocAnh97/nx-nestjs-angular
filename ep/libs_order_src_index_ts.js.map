{"version":3,"file":"libs_order_src_index_ts.js","mappings":"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","names":["Page","constructor","this","size","totalElements","totalPages","pageNumber","i0","$event","_r18","row_r10","row","ctx_r16","handlerRetry","_r21","ctx_r19","handlerForceStop","_r24","ctx_r22","_r4","_r6","_r8","handlerUpdate","_r26","ctx_r25","handlerViewDetail","IComLibsOrderTransactionListComponent_ng_template_16_li_9_Template","IComLibsOrderTransactionListComponent_ng_template_16_li_10_Template","IComLibsOrderTransactionListComponent_ng_template_16_li_11_Template","_r12","transaction_status","status","IComLibsOrderTransactionListComponent_ng_template_18_span_2_Template","IComLibsOrderTransactionListComponent_ng_template_18_span_3_Template","IComLibsOrderTransactionListComponent_ng_template_18_span_4_Template","IComLibsOrderTransactionListComponent_ng_template_18_span_5_Template","row_r27","item_r35","value","id","IComLibsOrderTransactionListComponent_ng_template_22_ng_container_6_Template","ctx_r7","validateForm","listStatus","ref_r36","_r38","modalRef","destroy","ctx_r39","submitForm","IComLibsOrderTransactionListComponent","fb","form","FormGroup","model","options","fields","rows","loadingIndicator","ColumnMode","headerHeight","rowHeight","pageLimit","pagination","IComMessageService","inject","productService","IComLibsServicesProductService","IComLibsServicesProjectOrderService","el","ElementRef","router","Router","modalService","NzModalService","cdr","ChangeDetectorRef","columns","group","Validators","required","formState","hidden","ngOnInit","prop","cellTemplate","selectRef","sortable","width","name","pipe","pipeDisplayNameCustomer","formatDatePipe","fieldGroupClassName","fieldGroup","key","type","className","props","placeholder","label","expressions","hide","viewValue","labelProp","valueProp","getStatusTransactionTypes","map","result","data","getStatusTransactionOrder","templateOptions","getPaymentMethod","getOptionType","hideExpression","product_type","combineLatest","subscribe","results","dataGenCodeType","columnGenCodeType","find","item","pipeParseStatus","detectChanges","loadPage","offset","transform","statusObj","page","_this","_asyncToGenerator","dataBody","start_date","dayjs","format","end_date","sort","lastValueFrom","listTransaction","limit","items","total_rows","err","console","log","e","stopPropagation","navigateByUrl","handlerSearch","handlerReset","reset","confirm","nzTitle","nzOkText","nzOkType","nzMaskClosable","nzClosable","nzOnOk","processDeleteProduct","bind","nzCancelText","user_full_name","user_short_name","retryTransaction","then","showAlertMessageDone","catch","showAlertMessageError","error","error_message","processForceStop","forceStopTransaction","tplTitle","tplContent","tplFooter","create","nzContent","nzFooter","_this2","valid","Object","values","controls","forEach","control","invalid","markAsDirty","updateValueAndValidity","onlySelf","handlerSort","event","sortInfo","sorts","displayKey","column","dir","handlerToggleCollapse","static","t","i1","core","Xpm","selectors","viewQuery","rf","ctx","IComLibsOrderTransactionListComponent_ng_template_16_Template","IComLibsOrderTransactionListComponent_ng_template_18_Template","IComLibsOrderTransactionListComponent_ng_template_20_Template","IComLibsOrderTransactionListComponent_ng_template_22_Template","IComLibsOrderTransactionListComponent_ng_template_24_Template","force","NgxDatatableModule","i2","FormlyNgZorroAntdModule","ReactiveFormsModule","FormlyModule","i3","NzButtonModule","i4","i5","i6","NzFormModule","i7","i8","NgForOf","NgSwitch","NgSwitchCase","NzTypographyModule","i9","NzIconModule","i10","NzModalModule","NzSelectModule","i11","FormsModule","NzDropDownModule","i12","i13","NgIf","encapsulation","changeDetection"],"sourceRoot":"webpack:///","sources":["./libs/order/src/defines/page.model.ts","./libs/order/src/order/order.component.html","./libs/order/src/order/order.component.ts"],"sourcesContent":["export class Page {\n  size = 0;\n  totalElements = 0;\n  totalPages = 0;\n  pageNumber = 0;\n  \n}","<div class=\"flex w-full h-full flex-col\">\n  <form\n    [formGroup]=\"form\"\n    nz-form\n    class=\"!p-4 bg-white border rounded-md\"\n    [nzLayout]=\"'vertical'\"\n  >\n    <formly-form\n      [model]=\"model\"\n      [fields]=\"fields\"\n      [options]=\"options\"\n      [form]=\"form\"\n    ></formly-form>\n    <div nz-row class=\"flex justify-between\">\n      <div nz-col class=\"search-area flex items-center\">\n        <button\n          class=\"!flex !items-center\"\n          nz-button\n          [nzType]=\"'primary'\"\n          (click)=\"handlerSearch()\"\n        >\n          <i nz-icon nzType=\"search\" nzTheme=\"outline\"></i>\n          Search\n        </button>\n        <button\n          class=\"ml-4 !flex !items-center\"\n          nz-button\n          (click)=\"handlerReset()\"\n        >\n          <i nz-icon nzTheme=\"outline\" nzType=\"close-circle\"></i>\n          Reset\n        </button>\n\n        <a class=\"ml-4 items-center flex\" (click)=\"handlerToggleCollapse()\">\n          {{ !options.formState.hidden ? 'Expand' : 'Collapse' }}\n          <span\n            class=\"ml-2\"\n            nz-icon\n            [nzType]=\"!options.formState.hidden ? 'down' : 'up'\"\n          ></span>\n        </a>\n      </div>\n    </div>\n  </form>\n\n  <div class=\"w-full h-full mt-4 overflow-hidden\">\n    <ngx-datatable\n      class=\"material expandable striped w-full h-full\"\n      [rows]=\"rows\"\n      [columns]=\"columns\"\n      [headerHeight]=\"headerHeight\"\n      [columnMode]=\"ColumnMode.force\"\n      [footerHeight]=\"50\"\n      [virtualization]=\"false\"\n      [rowHeight]=\"50\"\n      [scrollbarH]=\"true\"\n      [loadingIndicator]=\"loadingIndicator\"\n      [count]=\"pagination.totalElements\"\n      [offset]=\"pagination.pageNumber\"\n      [externalPaging]=\"true\"\n      [selectAllRowsOnPage]=\"true\"\n      [limit]=\"model?.limit || 15\"\n      (page)=\"loadPage($event)\"\n      (sort)=\"handlerSort($event)\"\n    >\n    </ngx-datatable>\n  </div>\n</div>\n\n<ng-template #selectRef let-row=\"row\" let-value=\"value\">\n  <div class=\"name-container\">\n    <button\n      nz-button\n      [nzType]=\"'primary'\"\n      [nzShape]=\"'round'\"\n      nz-button\n      nz-dropdown\n      [nzDropdownMenu]=\"menu4\"\n    >\n      Action\n      <span nz-icon nzType=\"down\"></span>\n    </button>\n    <nz-dropdown-menu #menu4=\"nzDropdownMenu\">\n      <ul nz-menu>\n        <li nz-menu-item (click)=\"handlerViewDetail($event, row)\">\n          View Detail\n        </li>\n        <li\n          *ngIf=\"row.transaction_status === 'failed'\"\n          nz-menu-item\n          (click)=\"handlerRetry($event, row)\"\n        >\n          Retry\n        </li>\n        <li\n          *ngIf=\"\n            row.transaction_status !== 'succeed' &&\n            row.transaction_status !== 'failed' &&\n            row.transaction_status !== null\n          \"\n          nz-menu-item\n          (click)=\"handlerForceStop($event, row)\"\n        >\n          Force Stop\n        </li>\n        <li\n          *ngIf=\"\n            row.status === 'failed_pay' ||\n            row.status === 'failed_topup'\n          \"\n          nz-menu-item\n          (click)=\"handlerUpdate($event, row, tplTitle, tplContent, tplFooter)\"\n        >\n          Update\n        </li>\n      </ul>\n    </nz-dropdown-menu>\n  </div>\n</ng-template>\n\n<ng-template #statusRef let-row=\"row\" let-value=\"value\">\n  <div class=\"name-container\">\n    <ng-container [ngSwitch]=\"row.status\">\n      <span *ngSwitchCase=\"'0'\" nz-typography>Draft</span>\n      <span *ngSwitchCase=\"'1'\" nz-typography nzType=\"success\">Submitted</span>\n      <span *ngSwitchCase=\"'2'\" nz-typography nzType=\"success\">Approved</span>\n      <span *ngSwitchCase=\"'3'\" nz-typography nzType=\"danger\">Rejected</span>\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template #tplTitle>\n  <span class=\"text-lg\">Change Status</span>\n</ng-template>\n<ng-template #tplContent let-params>\n  <form nz-form [formGroup]=\"validateForm\">\n    <nz-form-item>\n      <nz-form-label [nzSpan]=\"6\" nzFor=\"email\">Status</nz-form-label>\n      <nz-form-control [nzSpan]=\"12\">\n        <nz-select formControlName=\"status\">\n          <ng-container *ngFor=\"let item of listStatus\">\n            <nz-option [nzLabel]=\"item.value\" [nzValue]=\"item.id\"></nz-option> -\n          </ng-container>\n        </nz-select>\n      </nz-form-control>\n    </nz-form-item>\n  </form>\n</ng-template>\n<ng-template #tplFooter let-ref=\"modalRef\">\n  <button nz-button (click)=\"ref.destroy()\">Close</button>\n  <button nz-button nzType=\"primary\" (click)=\"submitForm()\">Submit</button>\n</ng-template>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, PipeTransform, TemplateRef, ViewChild, inject } from '@angular/core';\nimport { CommonModule, NgForOf, NgIf, NgSwitch, NgSwitchCase } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule, FormGroup, FormControl, NonNullableFormBuilder, Validators } from '@angular/forms';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyModule } from '@ngx-formly/core';\nimport { FormlyNgZorroAntdModule } from '@ngx-formly/ng-zorro-antd';\nimport { ColumnMode, NgxDatatableModule, TableColumn } from '@swimlane/ngx-datatable';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzModalModule, NzModalService } from 'ng-zorro-antd/modal';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzTypographyModule } from 'ng-zorro-antd/typography';\nimport { Router } from '@angular/router';\nimport { ICampaignTransaction, IPaginationData, TYPE_TEMPLATE_REF } from '@icom/interfaces';\nimport { IComMessageService } from '@icom/services/common';\nimport { IComLibsServicesProductService, IComLibsServicesProjectCampaignService, IComLibsServicesProjectOrderService } from '@icom/services/projects';\nimport { defaultValuePipe, formatDatePipe } from '@icom/defines';\nimport * as dayjs from 'dayjs';\nimport { map, lastValueFrom, combineLatest } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Page } from '../defines/page.model';\n\n@Component({\n  selector: 'icom-libs-order',\n  standalone: true,\n  imports: [\n    NgxDatatableModule,\n    FormlyNgZorroAntdModule,\n    ReactiveFormsModule,\n    FormlyModule,\n    NzButtonModule,\n    NzFormModule,\n    NgForOf,\n    NgSwitch,\n    NgSwitchCase,\n    NzTypographyModule,\n    NzIconModule,\n    NzModalModule,\n    NzSelectModule,\n    FormsModule,\n    NzDropDownModule,\n    NgIf,\n    NzSelectModule,\n    NzFormModule\n  ],\n  templateUrl: './order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IComLibsOrderTransactionListComponent {\n  protected form = new FormGroup({});\n  protected model: any = {};\n  protected options: FormlyFormOptions = {};\n  protected fields: FormlyFieldConfig[] = [];\n  protected rows: any[] = [];\n  protected loadingIndicator = true;\n  protected columns: TableColumn[];\n  protected ColumnMode = ColumnMode;\n  protected readonly headerHeight = 50;\n  protected readonly rowHeight = 50;\n  protected readonly pageLimit = 10;\n  protected isVisible!: boolean;\n  protected isOkLoading!: boolean;\n  protected listStatus: any[];\n  protected validateForm: FormGroup<{\n    status: FormControl<string>;\n  }>;\n  protected pagination = new Page();\n  protected sort!: string;\n\n  protected IComMessageService = inject(IComMessageService);\n  protected productService = inject(IComLibsServicesProductService)\n  protected IComLibsServicesProjectOrderService = inject(IComLibsServicesProjectOrderService);\n  protected el = inject(ElementRef);\n  protected router = inject(Router);\n  protected modalService = inject(NzModalService);\n  protected cdr = inject(ChangeDetectorRef);\n\n  @ViewChild('statusRef', { static: true }) statusRef!: TemplateRef<TYPE_TEMPLATE_REF>;\n  @ViewChild('selectRef', { static: true }) selectRef!: TemplateRef<TYPE_TEMPLATE_REF>;\n\n  constructor(\n    private fb: NonNullableFormBuilder\n  ) {\n    this.columns = [];\n    this.listStatus = [];\n    this.validateForm = this.fb.group({\n      status: ['', [Validators.required]],\n    });\n    this.options = {\n      formState: {\n        hidden: false\n      },\n    };\n  }\n\n  ngOnInit() {\n    this.columns = [\n      { prop: '', cellTemplate: this.selectRef, sortable: false, width: 150 },\n      { prop: 'id', width: 300, name: 'Id', sortable: false },\n      { prop: 'user_customer_id_value', width: 150, name: 'Phone Number', sortable: false },\n      { prop: '', width: 150, pipe: this.pipeDisplayNameCustomer(), name: 'User Name'},\n      { prop: 'flow_name', width: 200, sortable: false, name: 'Order Type' },\n      { prop: 'pay_point', width: 100, sortable: false, name: 'Pay Point' },\n      { prop: 'pay_cash', width: 80, sortable: false, name: 'Pay Cash' },\n      { prop: 'subtotal', width: 100, sortable: true, name: 'Total Payment' },\n      { prop: 'created_at_timestamp', width: 150, sortable: true, name: 'Created At', pipe: formatDatePipe() },\n      { prop: 'updated_at_timestamp', width: 150, sortable: true, name: 'Update At', pipe: formatDatePipe() },\n      { prop: 'status', sortable: false, width: 200 },\n    ];\n    this.fields = [\n      {\n        fieldGroupClassName: 'flex row items-center',\n        fieldGroup: [\n          {\n            key: 'username',\n            type: 'input',\n            className: 'basis-4/12',\n            props: {\n              placeholder: 'User Name',\n              label: 'User Name',\n              type: 'string'\n            }\n          },\n          {\n            key: 'phone_number',\n            type: 'input',\n            className: 'basis-4/12 ml-4',\n            props: {\n              placeholder: 'Phone Number',\n              label: 'Phone Number',\n              type: 'string'\n            },\n            expressions: {\n              hide: '!formState.hidden'\n            },\n          },\n          {\n            key: 'flow',\n            type: 'select-custom',\n            className: 'basis-4/12 ml-4',\n            props: {\n              label: 'Order Type',\n              type: 'text',\n              placeholder: 'Select Order Type',\n              viewValue: 'value',\n              labelProp: 'value',\n              valueProp: 'id',\n              options: this.IComLibsServicesProjectOrderService.getStatusTransactionTypes()\n                .pipe(\n                  map(result => {\n                    return result?.data;\n                  }\n                  ))\n\n            },\n            expressions: {\n              hide: '!formState.hidden'\n            },\n          },\n        ]\n      },\n      {\n        fieldGroupClassName: 'flex row items-center',\n        fieldGroup: [\n          {\n            key: 'status',\n            type: 'select-custom',\n            className: 'basis-4/12',\n            props: {\n              label: 'Status',\n              type: 'text',\n              placeholder: 'Select Status',\n              viewValue: 'value',\n              labelProp: 'value',\n              valueProp: 'id',\n              options: this.IComLibsServicesProjectOrderService.getStatusTransactionOrder()\n                .pipe(\n                  map(result => {\n                    return result?.data;\n                  }\n                  ))\n            },\n            expressions: {\n              hide: '!formState.hidden'\n            },\n          },\n          {\n            key: 'id',\n            type: 'input',\n            className: 'basis-4/12 ml-4',\n            props: {\n              placeholder: 'Enter ID',\n              label: 'ID',\n              type: 'string'\n            },\n            expressions: {\n              hide: '!formState.hidden'\n            },\n          },\n          {\n            key: 'start_date',\n            type: 'date',\n            className: 'basis-2/12 ml-4',\n            props: {\n              label: 'Start Time',\n              placeholder: 'Select Start Time',\n            },\n            expressions: {\n              hide: '!formState.hidden'\n            },\n          },\n          {\n            key: 'end_date',\n            type: 'date',\n            className: 'basis-2/12 ml-4',\n            props: {\n              label: 'End Time',\n              placeholder: 'Select End Time',\n            },\n            expressions: {\n              hide: '!formState.hidden'\n            },\n          }\n\n        ]\n      },\n      {\n        fieldGroupClassName: 'flex row items-center',\n        fieldGroup: [\n          {\n            key: 'payment_method',\n            type: 'select-custom',\n            className: 'basis-4/12',\n            templateOptions: {\n              label: 'Payment Method',\n              placeholder: 'Filter by Payment Method',\n                viewValue: 'value',\n                labelProp: 'value',\n                valueProp: 'id',\n                options: this.IComLibsServicesProjectOrderService.getPaymentMethod().pipe(\n                  map(result => {\n                    return result?.data;\n                  }\n                  )),\n            },\n            expressions: {\n              hide: '!formState.hidden'\n            },\n          },\n          {\n            key: 'product_type',\n            type: 'select-custom',\n            className: 'basis-4/12  ml-4',\n            templateOptions: {\n              label: 'Product Type',\n              viewValue: 'name',\n              labelProp: 'name',\n              valueProp: 'code',\n              options: this.productService.getOptionType('PRODUCT_TYPE').pipe(\n                map(result => {\n                  return result?.data;\n                }\n                )),\n            },\n            expressions: {\n              hide: '!formState.hidden'\n            },\n          },\n          {\n            key: 'target_phone_number',\n            type: 'input',\n            className: 'basis-4/12  ml-4',\n            hideExpression: (model, formState) => model.product_type !== 'PRODUCT_TYPE_TOPUP_MOBILE' || !formState.hidden,\n            templateOptions: {\n              label: 'Target Phone Number',\n              placeholder: 'Filter by Target Phone Number',\n            },\n          },\n        ]\n\n      }\n    ];\n    combineLatest([\n      this.IComLibsServicesProjectOrderService.getStatusTransactionOrder()]\n    ).subscribe((results: any) => {\n      const [dataGenCodeType] = results;\n      this.listStatus = dataGenCodeType?.data;\n      const columnGenCodeType = this.columns.find(item => item.prop === 'status');\n      columnGenCodeType && (columnGenCodeType.pipe = this.pipeParseStatus(dataGenCodeType));\n      this.columns = [...this.columns];\n      this.cdr.detectChanges();\n    });\n    this.loadPage({ offset: 0 });\n  }\n\n  private pipeParseStatus(data: any) {\n    const listStatus = data.data as any[];\n    return {\n      transform: (value: string): string => {\n        const statusObj = listStatus?.find(item => item.id === value);\n        return statusObj ? statusObj?.value : '-';\n      }\n    }\n  }\n\n  protected async loadPage(page: any) {\n    try {\n      this.pagination.pageNumber = page.offset;\n      this.loadingIndicator = true;\n      const model = { ...this.model };\n      const dataBody = {\n        ...model,\n        start_date: this.model.start_date ? dayjs(this.model.start_date).format('YYYY-MM-DD') : '',\n        end_date: this.model.end_date ? dayjs(this.model.end_date).format('YYYY-MM-DD') : '',\n      }\n      if (this.sort) {\n        dataBody.sort = this.sort;\n      }\n      const result = await lastValueFrom(this.IComLibsServicesProjectOrderService.listTransaction({\n        ...dataBody,\n        page: this.pagination.pageNumber + 1,\n        limit: this.model.limit || 15,\n      }));\n\n      if (result && result.data && result.data.items) {\n        const rows = result.data.items || [];\n        this.rows = rows;\n        this.pagination.totalElements = result.data.pagination.total_rows;\n        return;\n      }\n\n      this.rows = [];\n      this.pagination.totalElements = result.data.pagination.total_rows;\n    } catch (err) {\n      console.log(err);\n    } finally {\n      this.loadingIndicator = false;\n      this.cdr.detectChanges();\n    }\n  }\n\n  protected handlerViewDetail(e: Event, row: ICampaignTransaction) {\n    e.stopPropagation();\n    this.router.navigateByUrl(`/order/list/detail?id=${row.id}`);\n  }\n\n  protected handlerSearch() {\n    this.loadPage({ offset: 0 });\n  }\n\n  protected handlerReset() {\n    this.form.reset({\n    });\n    this.loadPage({ offset: 0 });\n  }\n\n  protected handlerRetry(e: Event, row: any) {\n    e.stopPropagation();\n    this.modalService.confirm({\n      nzTitle: 'Are you sure retry transaction?',\n      nzOkText: 'Submit',\n      nzOkType: 'primary',\n      nzMaskClosable: false,\n      nzClosable: false,\n      nzOnOk: this.processDeleteProduct.bind(this, row),\n      nzCancelText: 'Cancel'\n    }, 'success');\n  }\n\n  private pipeDisplayNameCustomer(): PipeTransform {\n    return {\n      transform: (value): string => value?.user_full_name || value?.user_short_name || '-'\n    }\n  }\n\n  private processDeleteProduct(row: any) {\n    return lastValueFrom(this.IComLibsServicesProjectOrderService.retryTransaction(row.id || '')).then(() => {\n      this.IComMessageService.showAlertMessageDone('Retry Transaction success');\n    }).catch((err) => {\n      this.IComMessageService.showAlertMessageError((err as HttpErrorResponse)?.error?.error_message);\n    });\n  }\n\n  protected handlerForceStop(e: Event, row: any) {\n    e.stopPropagation();\n    this.modalService.confirm({\n      nzTitle: 'Are you sure force stop transaction?',\n      nzOkText: 'Submit',\n      nzOkType: 'primary',\n      nzMaskClosable: false,\n      nzClosable: false,\n      nzOnOk: this.processForceStop.bind(this, row),\n      nzCancelText: 'Cancel'\n    }, 'warning');\n  }\n\n  private processForceStop(row: any) {\n    return lastValueFrom(this.IComLibsServicesProjectOrderService.forceStopTransaction(row.id || '')).then(() => {\n      this.IComMessageService.showAlertMessageDone('Retry Transaction success');\n    }).catch((err) => {\n      this.IComMessageService.showAlertMessageError((err as HttpErrorResponse)?.error?.error_message);\n    });\n  }\n\n  protected handlerUpdate(e: Event, row: any, tplTitle: TemplateRef<{}>, tplContent: TemplateRef<{}>, tplFooter: TemplateRef<{}>): void {\n    e.stopPropagation();\n    this.modalService.create({\n      nzTitle: tplTitle,\n      nzContent: tplContent,\n      nzFooter: tplFooter,\n      nzMaskClosable: false,\n      nzClosable: false,\n      nzOnOk: () => console.log('Click ok')\n    });\n  }\n\n  protected async submitForm() {\n    try {\n      if (this.validateForm.valid) {\n        // console.log('submit', this.validateForm.value);\n        // await this.IComLibsServicesProjectOrderService.updateTransaction();\n\n      } else {\n        Object.values(this.validateForm.controls).forEach(control => {\n          if (control.invalid) {\n            control.markAsDirty();\n            control.updateValueAndValidity({ onlySelf: true });\n          }\n        });\n        return;\n      }\n    } catch (err) {\n\n    }\n\n  }\n\n  protected handlerSort(event: any) {\n    const sortInfo = event.sorts[0]; // Lấy thông tin sắp xếp đầu tiên\n    let displayKey = !event?.column?.prop ? 'user_name': event?.column?.prop; // Ví dụ, 'key' là tên của key bạn muốn hiển thị\n    if (sortInfo.dir === 'desc') {\n      displayKey = `-${displayKey}`;\n    }\n    this.sort =  displayKey;\n    this.loadPage({ offset: 0 });\n  }\n\n  protected handlerToggleCollapse() {\n    this.options.formState.hidden = !this.options.formState.hidden;\n  }\n}\n"],"x_google_ignoreList":[]}