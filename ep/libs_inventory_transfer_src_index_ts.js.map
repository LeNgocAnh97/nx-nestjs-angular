{"version":3,"file":"libs_inventory_transfer_src_index_ts.js","mappings":"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","names":["i0","_r2","ctx_r1","handlerAdd","$event","ctx_r3","handlerFunctionControl","ctx_r0","columns","loadData","fields","model","form","functionParse","IcomLibInventoryListComponent","constructor","inventoryService","decimalPipe","modalService","this","FormGroup","iComLibsServicesInventoryService","inject","IComLibsServicesInventoryService","productService","IComLibsServicesProductService","IComMessageService","className","fieldGroupClassName","fieldGroup","key","type","props","placeholder","viewValue","labelProp","label","valueProp","options","getStatus","pipe","map","result","data","expressions","hide","nzServerSearch","listOptionDropdown","page","filter","searchProduct","limit","items","listInventory","router","Router","permissionService","PermissionService","params","listTicket","item","creator_info","ngOnInit","title","pipeArgs","value","id","class","actions","name","callback","viewItem","bind","condition","getPermission","editItem","status","deleteItem","navigateByUrl","confirm","nzTitle","code","nzOkText","nzOkType","nzOkDanger","nzMaskClosable","nzClosable","nzOnOk","processDeleteSection","nzCancelText","row","lastValueFrom","deleteTicket","then","showAlertMessageDone","eventFunctionControl","reset","catch","err","showAlertMessageError","error","error_message","event","static","t","i1","i2","i3","core","Xpm","selectors","standalone","features","DecimalPipe","decls","vars","consts","template","rf","ctx","IcomLibInventoryListComponent_icom_libs_core_components_table_2_Template","IcomLibsCoreTableComponent","NgIf","encapsulation","changeDetection"],"sourceRoot":"webpack:///","sources":["./libs/inventory/transfer/src/list/list.component.html","./libs/inventory/transfer/src/list/list.component.ts"],"sourcesContent":["<div class=\"flex w-full h-full flex-col\">\n  <div nz-row class=\" w-full pr-4 h-full\" style=\"justify-content: end; padding-right: 8px;\">\n    <icom-libs-core-components-table\n      *ngIf=\"loadData\"\n      [columns]=\"columns\"\n      [loadFn]=\"loadData\"\n      [fields]=\"fields\"\n      [model]=\"model\"\n      [form]=\"form\"\n      [functionParse]=\"functionParse\"\n      (icomAdd)=\"handlerAdd()\"\n      (icomFunctionControl)=\"handlerFunctionControl($event)\"\n    ></icom-libs-core-components-table>\n  </div>\n</div>\n\n\n","import { ChangeDetectionStrategy, Component, OnInit, inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { IComLibsServicesInventoryService, IComLibsServicesProductService } from '@icom/services/projects';\nimport { IcomLibsCoreTableComponent } from '@icom/components/table';\nimport { DecimalPipe, NgIf } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { Observable, lastValueFrom, map } from 'rxjs';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { IComMessageService } from '@icom/services/common';\nimport { PermissionService } from '@icom/services/authenticate';\n@Component({\n  selector: 'icom-libs-inventory-transfer-list',\n  templateUrl: './list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    IcomLibsCoreTableComponent,\n    NgIf,\n\n  ],\n  providers: [DecimalPipe]\n})\nexport class IcomLibInventoryListComponent implements OnInit {\n  form = new FormGroup({});\n  model = {};\n  columns: any[];\n\n  private eventFunctionControl: any;\n\n  protected iComLibsServicesInventoryService = inject(IComLibsServicesInventoryService);\n  protected productService = inject(IComLibsServicesProductService);\n  protected IComMessageService = inject(IComMessageService);\n\n  fields: FormlyFieldConfig[] = [\n    {\n      className: 'flex flex-col',\n      fieldGroupClassName: 'flex w-full justify-center',\n      fieldGroup: [\n        {\n          key: 'code',\n          type: 'input',\n          className: 'mb-4 basis-6/12', // Chiếm toàn bộ rộng và có margin bottom\n          props: {\n            type: 'text',\n            placeholder: 'Tìm kiếm theo mã chuyển kho',\n          },\n        },\n      ]\n    },\n    {\n      className: 'flex flex-row flex-wrap', // Sử dụng flex row để chia thành các cột\n      fieldGroupClassName: 'flex w-full',\n      fieldGroup: [\n        {\n          key: 'status',\n          type: 'select-custom',\n          className: 'flex-1', // Chiếm nửa rộng của hàng và có margin phải\n          props: {\n            viewValue: 'name',\n            labelProp: 'name',\n            label: 'Trạng thái',\n            valueProp: 'code',\n            placeholder: 'Chọn trạng thái',\n            options: this.iComLibsServicesInventoryService.getStatus().pipe(\n              map(result => {\n                return result?.data;\n              })\n            )\n          },\n          expressions: {\n            hide: '!formState.hidden'\n          },\n        },\n        {\n          key: 'product_id',\n          type: 'select-custom',\n          className: 'flex-1',\n          props: {\n            nzServerSearch: true,\n            listOptionDropdown: (page: number, filter?: any): Observable<any> => {\n              return this.productService.searchProduct({ page: page || 1, limit: 15, ...filter }).pipe(\n                map(result => {\n                  return result?.data;\n                })\n              );\n            },\n            placeholder: 'Sản phẩm',\n            label: 'Sản phẩm',\n            viewValue: 'name',\n            labelProp: 'name',\n            valueProp: 'id',\n            options: this.productService.searchProduct({ page: 1, limit: 15 }).pipe(\n              map(result => {\n                return result?.data?.items;\n              })\n            ),\n          },\n          expressions: {\n            hide: '!formState.hidden'\n          },\n        },\n\n      ],\n    },\n    {\n      className: 'flex flex-row flex-wrap', // Sử dụng flex row để chia thành các cột\n      fieldGroupClassName: 'flex w-full',\n      fieldGroup: [\n        {\n          key: 'source_inventory_id',\n          type: 'select-custom',\n          className: 'flex-1 ', // Chiếm nửa rộng của hàng, có margin phải và trên\n          props: {\n            placeholder: 'Kho chuyển',\n            label: 'Kho chuyển',\n            viewValue: 'name',\n            labelProp: 'name',\n            valueProp: 'id',\n            options: this.iComLibsServicesInventoryService.listInventory({ page: 1, limit: 999999 }).pipe(\n              map(result => {\n                return result?.data?.items;\n              })\n            )\n          },\n          expressions: {\n            hide: '!formState.hidden'\n          },\n        },\n        {\n          key: 'target_inventory_id',\n          type: 'select-custom',\n\n          className: ' flex-1', // Chiếm nửa rộng của hàng, có margin trái và trên\n          props: {\n            placeholder: 'Kho nhận',\n            viewValue: 'name',\n            label: 'Kho nhận',\n            labelProp: 'name',\n            valueProp: 'id',\n            options: this.iComLibsServicesInventoryService.listInventory({ page: 1, limit: 999999 }).pipe(\n              map(result => {\n                return result?.data?.items;\n              })\n            )\n          },\n          expressions: {\n            hide: '!formState.hidden'\n          },\n        },\n      ]\n    },\n  ];\n\n  protected router = inject(Router);\n  protected permissionService  = inject(PermissionService);\n  \n  constructor(\n    private inventoryService: IComLibsServicesInventoryService,\n    private decimalPipe: DecimalPipe,\n    private modalService: NzModalService,\n\n  ) {\n    this.columns = [];\n  }\n\n  ngOnInit(): void {\n    this.columns = [\n      { title: 'STT', type: 'index' },\n      { title: 'Mã chuyển kho', key: 'code', type: 'text' },\n      { title: 'Kho chuyển', key: 'source_inventory_name', type: 'text' },\n      { title: 'Kho nhận', key: 'target_inventory_name', type: 'text' },\n      { title: 'Số sản phẩm', key: 'number_of_products', type: 'text', pipe: 'decimal' },\n      { title: 'Tổng số lượng', key: 'total_items', type: 'text', pipe: 'decimal' },\n      {\n        title: 'Trạng thái', key: 'status', pipe: 'array',\n        type: 'text',\n        pipeArgs: [\n          { value: 'Phiếu tạm', id: 'DRAFT', class: 'text-gray-500' },\n          { value: 'Hoàn thành', id: 'COMPLETED', class: 'text-green-500' },\n        ]\n      },\n      { title: 'Thời gian tạo', key: 'created_at', type: 'text', pipe: 'time' },\n      { title: 'Người tạo', key: 'full_name', type: 'text' },\n      {\n        title: 'Thao tác',\n        key: 'actions',\n        type: 'action',\n        actions: [\n          {\n            name: 'Xem',\n            callback: this.viewItem.bind(this),\n            condition: (data: any) => {\n             return this.permissionService.getPermission('view');\n            }\n          },\n          {\n            name: 'Sửa',\n            callback: this.editItem.bind(this),\n            condition: (data: any) => {\n              if(!this.permissionService.getPermission('edit')) {\n                return false;\n              }\n              return data.status === 'COMPLETED' ? false : true;\n            }\n          },\n          {\n            name: 'Xóa',\n            callback: this.deleteItem.bind(this),\n            condition: (data: any) => {\n              if(!this.permissionService.getPermission('delete')) {\n                return false;\n              }\n              return data.status === 'COMPLETED' ? false : true;\n            }\n          },\n        ],\n      },\n    ];\n  }\n\n  loadData = (params: any) => {\n    return this.inventoryService.listTicket(params);\n  }\n\n  functionParse = (params: any) => {\n    return params?.map((item: any) => {\n      return {\n        ...item,\n        ...item.creator_info,\n      }\n    })\n  }\n\n  editItem(data: any): void {\n    this.router.navigateByUrl(`inventory/transfer/detail?id=${data.id}&mode=edit`);\n  }\n\n  viewItem(data: any): void {\n    this.router.navigateByUrl(`inventory/transfer/detail?id=${data.id}&mode=view`);\n  }\n\n  protected deleteItem(data: any) {\n    this.modalService.confirm(\n      {\n        nzTitle: `Bạn có chắc chắn muốn xóa ${data?.code} ?`,\n        nzOkText: 'Đồng ý',\n        nzOkType: 'primary',\n        nzOkDanger: true,\n        nzMaskClosable: false,\n        nzClosable: false,\n        nzOnOk: this.processDeleteSection.bind(this, data),\n        nzCancelText: 'Hủy bỏ',\n      },\n      'error'\n    );\n  }\n\n  private processDeleteSection(row: any | undefined) {\n    return lastValueFrom(\n      this.iComLibsServicesInventoryService.deleteTicket(row?.id || '')\n    )\n      .then(() => {\n        this.IComMessageService.showAlertMessageDone('Thao tác thành công.');\n        this.router.navigateByUrl(`inventory/transfer`);\n        this.eventFunctionControl.reset();\n      })\n      .catch((err) => {\n        this.IComMessageService.showAlertMessageError((err as HttpErrorResponse)?.error?.error_message || 'Thao tác thất bại');\n      });\n  }\n\n  handlerAdd() {\n    this.router.navigateByUrl(`inventory/transfer/detail?mode=add`);\n  }\n\n  handlerFunctionControl(event: any) {\n    this.eventFunctionControl = event;\n  }\n}\n"],"x_google_ignoreList":[]}