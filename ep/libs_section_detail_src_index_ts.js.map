{"version":3,"file":"libs_section_detail_src_index_ts.js","mappings":"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","names":["IcomLibsHasPermissionDirective","constructor","el","permissionService","this","ngOnInit","getPermission","action","nativeElement","style","setProperty","static","t","i0","i1","core","lG2","selectors","inputs","standalone","ctx_r1","form","model","fields","options","$event","_r7","ctx_r6","handlerCancel","_r9","ctx_r8","handlerSave","ctx_r5","isLoading","IComLibsSectionDetailComponent_nz_page_header_0_nz_space_6_ng_container_1_Template","IComLibsSectionDetailComponent_nz_page_header_0_nz_space_6_ng_container_2_Template","_r13","ctx_r12","handlerEdit","_r15","ctx_r14","handlerRemove","ctx_r11","IComLibsSectionDetailComponent_nz_page_header_0_nz_space_7_ng_container_1_Template","IComLibsSectionDetailComponent_nz_page_header_0_nz_space_7_ng_container_2_Template","_r17","ctx_r16","IComLibsSectionDetailComponent_nz_page_header_0_form_4_Template","IComLibsSectionDetailComponent_nz_page_header_0_nz_space_6_Template","IComLibsSectionDetailComponent_nz_page_header_0_nz_space_7_Template","ctx_r0","data","name","shouldRender","mode","IComLibsSectionDetailComponent","startTimeValidator","control","startTime","parent","value","start_time","endTime","end_time","dayjs","isBefore","add","startTimeInvalid5Minutes","_this","FormGroup","route","inject","ActivatedRoute","cdr","ChangeDetectorRef","modalService","NzModalService","router","Router","iComLibsServicesProjectDynamicHomeService","IComLibsServicesProjectDynamicHomeService","iComLibsServicesProductService","IComLibsServicesProductService","IComMessageService","icomLibsDynamicComponentService","IcomLibsDynamicComponentService","initialDataLoaded","isFirstChange","destroyRef","DestroyRef","get","valueChanges","pipe","distinctUntilChanged","subscribe","updateValueAndValidity","queryParams","takeUntilDestroyed","_ref","_asyncToGenerator","params","id","content_conf","status","cloneDeep","setFields","updateFieldReadonlyStatus","formState","disabled","required","mainModel","result","lastValueFrom","detail","listIdObject","includes","type","detectChanges","_x","apply","arguments","firstLetterUppercaseValidator","test","firstLetterUppercase","undefined","hidden_name","fieldGroupClassName","className","key","wrappers","props","label","expressions","fieldGroup","maxLength","placeholder","readonly","validators","expression","message","error","field","validation","errorPath","ShowTime","datepickerOptions","nzFormat","format","change","event","find","f","defaultValue","multiple","viewValue","labelProp","valueProp","listMonth","ListDay","ListWeekly","ListHours","listMembersShip","map","listCity","rows","listContentType","screen_type","item","getApiServiceByIdType","hooks","onInit","formControl","newType","patchValue","layout","emitEvent","poolIdControl","startWith","concatMap","idPool","listLayoutByContentType","content_type","option","index","disable","hideExpression","min","max","filter","listStatusByContentType","length","setValue","columns","width","listOptionDropdown","changeItems","typeControl","selectedType","o","apiObs","console","log","e","stopPropagation","preventDefault","confirm","nzTitle","nzOkText","nzOkType","nzMaskClosable","nzClosable","nzOnOk","navigateByUrl","nzCancelText","nzOkDanger","processDeleteSection","bind","row","delete","then","showAlertMessageDone","catch","err","showAlertMessageError","error_message","validate","trimFormFields","formValues","Object","keys","forEach","trim","_this2","invalid","markFormGroupTouched","edit","create","forceRerender","setTimeout","getBrands","getPointPartner","getCampaign","getSearchProduct","getBanners","of","isReadonly","setReadonlyForField","subField","Xpm","features","decls","vars","consts","template","rf","ctx","IComLibsSectionDetailComponent_nz_page_header_0_Template","FormlyModule","ReactiveFormsModule","i2","CommonModule","i3","NzTypographyModule","NzPageHeaderModule","i4","NzSpaceModule","i5","NzTabsModule","NzIconModule","NzCardModule","NzStepsModule","NzFormModule","i6","NzButtonModule","i7","i8","i9","NzDescriptionsModule","styles","changeDetection"],"sourceRoot":"webpack:///","sources":["./libs/core/directives/permission.directive.ts","./libs/section/detail/src/detail.component.html","./libs/section/detail/src/detail.component.ts"],"sourcesContent":["import { Directive, ElementRef, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { PermissionService} from '../services/authenticate/permission.service';\n\n@Directive({\n  selector: '[icomLibsHasPermissionDirective]',\n  standalone: true\n})\nexport class IcomLibsHasPermissionDirective implements OnInit {\n  @Input() action!: string;\n\n  constructor(\n    private el: ElementRef, \n    private permissionService: PermissionService\n  ) {}\n\n  ngOnInit() {\n    if (!this.permissionService.getPermission(this.action)) {\n      this.el.nativeElement.style.setProperty('display', 'none', 'important');\n    }\n  }\n}\n\n","<nz-page-header *ngIf=\"data\" class=\"h-full w-full flex flex-col !absolute top-0 left-0 !py-4 !pl-4 !pr-0 !bg-[#f0f2f5]\" nzBackIcon (nzBack)=\"handlerCancel()\">\n  <nz-page-header-title>{{ data?.name || 'Tạo mới' }}</nz-page-header-title>\n\n  <nz-page-header-content class=\"w-full h-full flex overflow-auto !py-0 !pl-0 !pr-4 flex-col\">\n    <form *ngIf=\"shouldRender\" nz-form [formGroup]=\"form\">\n      <div class=\"flex flex-col\">\n        <div class=\"w-full items-center test\">\n          <formly-form [model]=\"model\" [fields]=\"fields\" [form]=\"form\" [options]=\"options\">\n          </formly-form>\n        </div>\n      </div>\n    </form>\n  </nz-page-header-content>\n\n  <nz-page-header-footer class=\"flex justify-end mb-4 mr-8\">\n    <nz-space *ngIf=\"mode === 'edit' || mode === 'add'\">\n      <ng-container *nzSpaceItem>\n        <button \n          icomLibsHasPermissionDirective\n          [action]=\"'add'\"\n          nz-button \n          nzType=\"default\" \n          (click)=\"handlerCancel($event)\">\n          <span>Hủy</span>\n        </button>\n      </ng-container>\n\n      <ng-container *nzSpaceItem>\n        <button \n          icomLibsHasPermissionDirective\n          [action]=\"'edit'\"\n          nz-button \n          [nzLoading]=\"isLoading\" \n          nzType=\"primary\" \n          (click)=\"handlerSave($event)\"\n        >\n          <span>Lưu</span>\n        </button>\n      </ng-container>\n    </nz-space>\n\n    <nz-space *ngIf=\"mode !== 'only_view' && mode !== 'edit' &&  mode !== 'add'\">\n      <ng-container *nzSpaceItem>\n        <button \n          icomLibsHasPermissionDirective\n          [action]=\"'edit'\"\n          nz-button \n          nzType=\"default\" \n          (click)=\"handlerEdit($event)\">\n          <span>Sửa</span>\n        </button>\n      </ng-container>\n\n      <ng-container *nzSpaceItem>\n        <button \n          icomLibsHasPermissionDirective\n          [action]=\"'delete'\"\n          nz-button \n          [nzLoading]=\"isLoading\" \n          [nzDanger]=\"true\" \n          nzType=\"primary\"\n          (click)=\"handlerRemove($event)\"\n        >\n          <span>Xóa</span>\n        </button>\n      </ng-container>\n    </nz-space>\n  </nz-page-header-footer>\n</nz-page-header>","import { IcomLibsDynamicComponentService } from './../../../core/services/common/dom.service';\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  inject,\n  ChangeDetectorRef,\n  Input,\n  DestroyRef,\n} from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  ValidationErrors,\n} from '@angular/forms';\nimport {\n  FormlyFieldConfig,\n  FormlyFormOptions,\n  FormlyModule,\n} from '@ngx-formly/core';\nimport {\n  IComLibsServicesProductService,\n  IComLibsServicesProjectDynamicHomeService,\n} from '@icom/services/projects';\nimport {\n  Observable,\n  concatMap,\n  distinctUntilChanged,\n  filter,\n  lastValueFrom,\n  map,\n  of,\n  startWith,\n} from 'rxjs';\nimport { AsyncPipe, CommonModule, NgIf } from '@angular/common';\nimport { NzCardModule } from 'ng-zorro-antd/card';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzPageHeaderModule } from 'ng-zorro-antd/page-header';\nimport { NzSpaceModule } from 'ng-zorro-antd/space';\nimport { NzStepsModule } from 'ng-zorro-antd/steps';\nimport { NzTabsModule } from 'ng-zorro-antd/tabs';\nimport { NzTypographyModule } from 'ng-zorro-antd/typography';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { ISectionConfig } from '@icom/interfaces';\nimport {\n  ListDay,\n  ListHours,\n  ListWeekly,\n  listIdObject,\n  listMonth,\n} from './defines/code.define';\nimport { markFormGroupTouched } from '@icom/defines';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { cloneDeep } from 'lodash';\nimport { NzDescriptionsModule } from 'ng-zorro-antd/descriptions';\nimport { IcomLibSetValueInListPipe } from './pipes/get-value-in-list.pipe';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { IComMessageService } from '@icom/services/common';\nimport * as dayjs from 'dayjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { IcomLibsHasPermissionDirective } from '@icom/directive';\n\n@Component({\n  selector: 'app-custom-form',\n  templateUrl: './detail.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    FormlyModule,\n    ReactiveFormsModule,\n    CommonModule,\n    NzTypographyModule,\n    NzPageHeaderModule,\n    NzSpaceModule,\n    NzTabsModule,\n    NzIconModule,\n    NzCardModule,\n    NgIf,\n    NzStepsModule,\n    NzFormModule,\n    NzButtonModule,\n    NzDescriptionsModule,\n    IcomLibSetValueInListPipe,\n    AsyncPipe,\n    IcomLibsHasPermissionDirective\n  ],\n  styles: [\n    `\n      .test ::ng-deep formly-group {\n        display: flex;\n        flex-wrap: wrap;\n      }\n    `,\n  ],\n})\nexport class IComLibsSectionDetailComponent {\n  protected form = new FormGroup({});\n  protected isLoading!: boolean;\n  protected options: FormlyFormOptions = {};\n  protected model: ISectionConfig | undefined;\n\n  protected route = inject(ActivatedRoute);\n  protected cdr = inject(ChangeDetectorRef);\n  protected modalService = inject(NzModalService);\n  protected router = inject(Router);\n  protected iComLibsServicesProjectDynamicHomeService = inject(\n    IComLibsServicesProjectDynamicHomeService\n  );\n  protected iComLibsServicesProductService = inject(\n    IComLibsServicesProductService\n  );\n  protected IComMessageService = inject(IComMessageService);\n  protected icomLibsDynamicComponentService = inject(\n    IcomLibsDynamicComponentService\n  );\n  private initialDataLoaded: boolean = false;\n  isFirstChange: boolean = true;\n\n  @Input() data: ISectionConfig | undefined;\n  @Input() mode: 'view' | 'edit' | 'only_view' | 'add';\n\n  startTimeValidator(control: FormGroup): ValidationErrors | null {\n    const startTime = control.parent?.value?.start_time;\n    const endTime = control.parent?.value?.end_time;\n\n    if (startTime && endTime && dayjs(endTime).isBefore(dayjs(startTime).add(5, 'minute'))) {\n      return { startTimeInvalid5Minutes: true };\n    }\n    return null;\n  }\n\n  protected destroyRef = inject(DestroyRef);\n\n  protected fields: FormlyFieldConfig[] = [];\n\n  constructor() {\n    this.mode = 'view';\n    this.form.get('name')?.valueChanges.pipe(\n      distinctUntilChanged()\n    ).subscribe(() => {\n      this.form.get('name')?.updateValueAndValidity();\n    });\n    this.route.queryParams\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(async (params) => {\n        if (params) {\n          this.mode = params['mode'];\n          if (!params.id) {\n            this.data = {\n              content_conf: {\n                status: {\n                  value: [],\n                },\n              },\n            };\n            this.model = cloneDeep(this.data);\n            this.setFields();\n            this.updateFieldReadonlyStatus();\n            this.options = {\n              formState: {\n                disabled: false,\n                required: false,\n                mainModel: this.model,\n              },\n            };\n            // this.cdr?.detectChanges();\n            return;\n          }\n          const id = (params as any)?.id || '';\n          const result = await lastValueFrom(this.iComLibsServicesProjectDynamicHomeService.detail(id as string));\n          this.data = result?.data || {};\n          if (listIdObject.includes(this.data?.type || 'aaa')) {\n            this.mode = 'only_view';\n          }\n          this.model = cloneDeep(this.data);\n          this.setFields();\n          this.updateFieldReadonlyStatus();\n          this.initialDataLoaded = true;\n          this.options = {\n            formState: {\n              disabled: false,\n              required: false,\n              mainModel: this.model,\n            },\n          };\n          this.cdr?.detectChanges();\n        }\n      });\n  }\n\n  firstLetterUppercaseValidator(control: FormControl): ValidationErrors | null {\n    // Cho phép dấu cách ở đầu, sau đó là một chữ cái viết hoa có dấu hoặc không\n    const uppercaseRegex = /^\\s*[A-ZÁÀẢÃẠĂẮẰẲẴẶÂẤẦẨẪẬÉÈẺẼẸÊẾỀỂỄỆÍÌỈĨỊÓÒỎÕỌÔỐỒỔỖỘƠỚỜỞỠỢÚÙỦŨỤƯỨỪỬỮỰÝỲỶỸỴĐ].*/;\n    if (control.value && !uppercaseRegex.test(control.value)) {\n      return { firstLetterUppercase: true };\n    }\n    return null;\n  }\n\n\n  protected setFields() {\n    if (this.model && this.model.content_conf && this.model.content_conf.hidden_name !== undefined) {\n      this.model.content_conf.hidden_name = !this.model.content_conf.hidden_name;\n    }\n    this.fields = [\n      {\n        fieldGroupClassName: 'flex flex-col',\n        className: 'basis-1/2',\n        key: '',\n        wrappers: ['group'],\n        props: {\n          label: 'Thông tin chung',\n        },\n        expressions: {\n          'props.disabled': 'formState.disabled',\n        },\n        fieldGroup: [\n          {\n            key: 'name',\n            className: 'basis-4/12',\n            type: 'input-custom',\n            props: {\n              label: 'Tên',\n              required: true,\n              maxLength: 30,\n              placeholder: 'Nhập tên',\n              readonly: true,\n            },\n            validators: {\n              firstLetterUppercase: {\n                expression: (control: FormControl) => {\n                  return this.firstLetterUppercaseValidator(control) === null;\n                },\n                message: (error: any, field: FormlyFieldConfig) => `Tên phải bắt đầu bằng một chữ cái viết hoa.`,\n              },\n              validation: [\n                { name: 'noWhitespace', options: { errorPath: 'value' } },\n              ],\n            },\n          },\n          {\n            key: 'display_conf.start_time',\n            type: 'date',\n            props: {\n              label: 'Từ',\n              ShowTime: true,\n              required: true,\n              datepickerOptions: {\n                nzFormat: 'dd/MM/yyyy HH:mm',\n              },\n              readonly: true,\n              format: 'dd-MM-yyyy HH:mm',\n              placeholder: 'DD-MM-YYYY hh:mm',\n              change: (field, event: any) => {\n                const startField = field?.parent?.fieldGroup?.find(f => f.key === 'display_conf.end_time');\n                if (startField) {\n                  const control = this.form.get('display_conf.end_time');\n                  control?.updateValueAndValidity();\n                }\n              },\n            },\n            validators: {\n              validation: [this.startTimeValidator],\n            },\n\n          },\n          {\n            key: 'display_conf.end_time',\n            type: 'date',\n            props: {\n              label: 'Đến',\n              required: true,\n              ShowTime: true,\n              format: 'dd-MM-yyyy HH:mm',\n              placeholder: 'DD-MM-YYYY hh:mm',\n              datepickerOptions: {\n                nzFormat: 'dd/MM/yyyy HH:mm',\n              },\n              readonly: true,\n\n              change: (field, event: any) => {\n                const startField = field?.parent?.fieldGroup?.find(f => f.key === 'display_conf.start_time');\n                if (startField) {\n                  const control = this.form.get('display_conf.start_time');\n                  control?.updateValueAndValidity();\n                }\n              },\n            },\n            validators: {\n              validation: [this.startTimeValidator],\n            },\n          },\n          {\n            key: 'display_conf.months',\n            type: 'select-custom',\n            defaultValue: [],\n            props: {\n              label: 'Theo tháng',\n              multiple: true,\n              viewValue: 'value',\n              readonly: true,\n              labelProp: 'value',\n              valueProp: 'id',\n              options: listMonth(),\n              placeholder: 'Chọn tháng',\n            },\n          },\n          {\n            key: 'display_conf.days',\n            type: 'select-custom',\n            defaultValue: [],\n            props: {\n              label: 'Theo ngày',\n              multiple: true,\n              viewValue: 'value',\n              readonly: true,\n              labelProp: 'value',\n              valueProp: 'id',\n              options: ListDay(),\n              placeholder: 'Chọn ngày',\n            },\n          },\n          {\n            key: 'display_conf.weekdays',\n            type: 'select-custom',\n            defaultValue: [],\n            props: {\n              label: 'Theo thứ',\n              multiple: true,\n              readonly: true,\n              viewValue: 'value',\n              labelProp: 'value',\n              valueProp: 'id',\n              options: ListWeekly(),\n              placeholder: 'Chọn thứ',\n            },\n          },\n          {\n            key: 'display_conf.hours',\n            type: 'select-custom',\n            defaultValue: [],\n            props: {\n              label: 'Theo giờ',\n              multiple: true,\n              readonly: true,\n              viewValue: 'value',\n              labelProp: 'value',\n              valueProp: 'id',\n              options: ListHours(),\n              placeholder: 'Chọn giờ',\n            },\n          },\n        ],\n      },\n      {\n        fieldGroupClassName: 'flex flex-col mt-4',\n        className: 'basis-1/2 pl-4 mt-4',\n        key: '',\n        wrappers: ['group'],\n        expressions: {\n          'props.disabled': 'formState.disabled',\n        },\n        fieldGroup: [\n          {\n            key: 'display_conf.membership_rank',\n            type: 'select-custom',\n            defaultValue: [],\n            props: {\n              label: 'Hạng hội viên',\n              viewValue: 'value',\n              labelProp: 'value',\n              readonly: true,\n              valueProp: 'id',\n              multiple: true,\n              options: this.iComLibsServicesProjectDynamicHomeService\n                .listMembersShip()\n                .pipe(\n                  map((result) => {\n                    return result?.data;\n                  })\n                ),\n            },\n          },\n          {\n            key: 'display_conf.city',\n            type: 'select-custom',\n            defaultValue: [],\n            props: {\n              label: 'Tỉnh/ thành phố',\n              viewValue: 'value',\n              labelProp: 'value',\n              valueProp: 'id',\n              multiple: true,\n              readonly: true,\n              options: this.iComLibsServicesProjectDynamicHomeService\n                .listCity()\n                .pipe(\n                  map((result) => {\n                    return result?.data;\n                  })\n                ),\n            },\n          },\n          {\n            key: 'status',\n            type: 'radio-custom',\n            defaultValue: 'ACTIVE',\n            props: {\n              label: 'Trạng thái',\n              readonly: true,\n              viewValue: 'value',\n              labelProp: 'value',\n              valueProp: 'id',\n              options: [\n                { value: 'Kích hoạt', id: 'ACTIVE' },\n                { value: 'Ngừng kích hoạt', id: 'INACTIVE' },\n              ],\n            },\n          },\n          {\n            key: 'note',\n            type: 'textarea-custom',\n            props: {\n              label: 'Ghi chú',\n              rows: 5,\n              placeholder: 'Nhập nội dung',\n              readonly: true,\n              maxLength: 500,\n            },\n          },\n        ],\n      },\n      {\n        fieldGroupClassName: 'flex-col',\n        key: '',\n        wrappers: ['group'],\n        props: {\n          label: 'Nội dung hiển thị',\n        },\n        expressions: {\n          'props.disabled': 'formState.disabled',\n        },\n        className: 'w-full',\n        fieldGroup: [\n          {\n            key: 'type',\n            type: 'select-custom',\n            className: 'w-[500px]',\n            props: {\n              label: 'Đối tượng',\n              viewValue: 'value',\n              required: true,\n              readonly: true,\n              labelProp: 'value',\n              placeholder: 'Chọn đối tượng hiển thị',\n              valueProp: 'id',\n              options: this.iComLibsServicesProjectDynamicHomeService\n                .listContentType(this.mode === 'edit' || this.mode === 'add' ? { screen_type: 'SECTION_CREATE' } : {})\n                .pipe(\n                  map((result) => {\n                    const data = result.data.map((item: any) => {\n                      return {\n                        ...item,\n                        placeholder: `Tìm kiếm ${item.value}`,\n                        ...this.getApiServiceByIdType(item.id),\n                      };\n                    });\n                    return data;\n                  })\n                ),\n            },\n            hooks: {\n              onInit: (field: FormlyFieldConfig) => {\n                const form = field?.form;\n                field?.formControl?.valueChanges\n                  ?.pipe(\n                    distinctUntilChanged(),\n                  )\n                  .subscribe((newType) => {\n                    (form as any)?.patchValue(\n                      {\n                        layout: '',\n                        content_conf: {\n                          status: {\n                            name: '',\n                            value: [],\n                          }\n                        },\n                      },\n                      { emitEvent: true }\n                    );\n                  });\n              },\n            },\n          },\n          {\n            key: 'layout',\n            type: 'radio-custom',\n            props: {\n              viewValue: 'value',\n              labelProp: 'value',\n              valueProp: 'id',\n              readonly: true,\n              label: 'Dạng hiển thị',\n              options: [],\n              required: true,\n            },\n            hooks: {\n              onInit: (field: any) => {\n                const poolIdControl = field?.parent?.parent?.form?.get('type');\n                if (!poolIdControl) {\n                  return;\n                }\n                field.props.options = poolIdControl.valueChanges.pipe(\n                  startWith(poolIdControl.value),\n                  concatMap((idPool: string) => {\n                    const data = idPool || field?.parent?.parent?.form?.value?.type;\n                    // console.log(idPool)\n                    return this.iComLibsServicesProjectDynamicHomeService\n                      .listLayoutByContentType({ content_type: data })\n                      .pipe(\n                        map((result: any) => {\n                          if (\n                            !result?.data?.find(\n                              (option: any) => field?.model?.type === option.id\n                            )\n                          ) {\n                          }\n                          return result.data.map((item: any, index: number) => {\n                            return {\n                              ...item,\n                              disabled: item.disable,\n                            };\n                          });\n                        })\n                      );\n                  })\n                );\n              },\n            },\n            hideExpression: (model: any) => {\n              return model?.type\n                ? (!model?.type || listIdObject.includes(model.type))\n                : true;\n            },\n          },\n          {\n            key: 'content_conf.no_items',\n            type: 'nz-input-number',\n            className: 'basis-2/12 flex',\n            defaultValue: 5,\n            props: {\n              label: 'Số lượng hiển thị',\n              type: 'number',\n              required: true,\n              readonly: true,\n              min: 1,\n              max: 10,\n            },\n            hideExpression: (model: any, formState: any, field: any) => {\n              return model?.type\n                ? model?.type !== 'MY_VOUCHERS'\n                : true;\n            },\n          },\n          {\n            key: 'content_conf',\n            hideExpression: (model: any, formState: any, field: any) => {\n              return (\n                !formState?.mainModel?.type ||\n                listIdObject.includes(formState?.mainModel?.type)\n                || formState?.mainModel?.type === \"MY_VOUCHERS\"\n              );\n            },\n            fieldGroupClassName: 'flex-col',\n            fieldGroup: [\n              {\n                key: 'status.name',\n                type: 'radio-custom',\n\n                props: {\n                  label: 'Trạng thái',\n                  options: [],\n                  readonly: true,\n                  viewValue: 'value',\n                  labelProp: 'value',\n                  valueProp: 'id',\n                },\n      \n                hooks: {\n                  onInit: (field: any) => {\n                    const poolIdControl =\n                      field?.parent?.parent?.form?.get('type');\n                    if (!poolIdControl) {\n                      return;\n                    }\n                    field.props.options = poolIdControl.valueChanges.pipe(\n                      startWith(poolIdControl.value),\n                      filter(() => {\n                        if (this.isFirstChange && !field.props.readonly) {\n                          this.isFirstChange = false;\n                          return false;\n                        }\n                        return true;\n                      }),\n                      concatMap((idPool: string) => {\n                        return this.iComLibsServicesProjectDynamicHomeService\n                          .listStatusByContentType({ content_type: idPool })\n                          .pipe(\n                            map((result: any) => {\n                              if (result?.data?.length) {\n                                if (this.initialDataLoaded === false) {\n                                  field.formControl.setValue(result?.data[0].id)\n                                };\n                                if (this.initialDataLoaded) {\n                                  this.initialDataLoaded = false;\n                                }\n                                return result.data.map((item: any) => {\n                                  return {\n                                    ...item,\n                                  };\n                                });\n                              }\n                            })\n                          );\n                      })\n                    );\n                  },\n                },\n              },\n              {\n                key: 'no_items',\n                type: 'nz-input-number',\n                className: 'basis-2/12 flex',\n                defaultValue: 5,\n                props: {\n                  label: 'Số lượng hiển thị',\n                  type: 'number',\n                  required: true,\n                  readonly: true,\n                  min: 0,\n                  max: 10,\n                },\n                hideExpression: (model: any, formState: any, field: any) => {\n                  return formState?.mainModel?.type\n                    ? formState?.mainModel?.type === 'BANNERS' ||\n                    formState?.mainModel?.content_conf?.status?.name ===\n                    'selection'\n                    : true;\n                },\n              },\n              {\n                key: 'hidden_name',\n                type: 'checkbox',\n                defaultValue: this.model?.content_conf?.hidden_name ? false : true,\n                props: {\n                  readonly: true,\n                  disabled: true,\n                  label: 'Hiển thị tên section',\n                },\n                hideExpression: (model: any, formState: any, field: any) => {\n                  return formState?.mainModel?.type\n                    ? formState?.mainModel?.type !== 'BANNERS'\n                    : true;\n                },\n              },\n              {\n                key: 'slider_speed',\n                type: 'nz-input-number',\n                className: 'basis-2/12 flex',\n                defaultValue: 3,\n                props: {\n                  readonly: true,\n                  label: 'Tốc độ trượt trong slide (giây)',\n                  type: 'number',\n                  required: true,\n                  min: 2,\n                  max: 5,\n                },\n                hideExpression: (model: any, formState: any, field: any) => {\n                  return formState?.mainModel?.type\n                    ? formState?.mainModel?.type !== 'BANNERS'\n                    : true;\n                },\n              },\n              {\n                key: 'status.value',\n                type: 'dropdown-table',\n                defaultValue: [],\n                props: {\n                  columns: [\n                    {\n                      name: 'STT',\n                      width: '10%',\n                      field: 'index',\n                      type: 'index'\n                    },\n                    {\n                      name: 'Tên',\n                      width: '30%',\n                      field: 'value',\n                      type: 'text' // Loại hiển thị là text\n                    },\n                    {\n                      name: 'Hành động',\n                      width: '20%',\n                      field: 'actions',\n                      type: 'action' // Loại hiển thị là text\n                    }\n                  ],\n                  placeholder: '',\n                  readonly: true,\n                  listOptionDropdown: null,\n                  changeItems: (event: any[]) => {\n                    this.model?.content_conf?.status && (this.model.content_conf.status.value = event || []);\n                  },\n                },\n                hideExpression: (model: any, formState: any, field: any) => {\n                  return formState?.mainModel?.type\n                    ?\n                    formState?.mainModel?.content_conf?.status?.name !==\n                    'selection'\n                    : true;\n                },\n                \n                hooks: {\n                  onInit: (field: FormlyFieldConfig) => {\n                    const typeControl = field.parent?.parent?.fieldGroup?.find(\n                      (f) => f.key === 'type'\n                    );\n                    if (typeControl?.formControl) {\n                      typeControl.formControl?.valueChanges\n                        .pipe(\n                          startWith(typeControl?.formControl?.value)\n                        )\n                        .subscribe((selectedType) => {\n                          (\n                            typeControl?.props?.options as Observable<any>\n                          )?.subscribe((item) => {\n                            const placeholder = item.find(\n                              (o: any) => o.id === selectedType\n                            );\n\n                            field.props &&\n                              (field.props.placeholder =\n                                placeholder?.placeholder);\n                            field.props &&\n                              (field.props.listOptionDropdown = () => {\n                                return  placeholder?.apiObs.pipe(\n                                  map((result: any) => {\n                                    return result.data;\n                                  })\n                                )})\n                                \n                            console.log(field)\n                            field = { ...field };\n                          });\n                        });\n                    }\n                  },\n                },\n              },\n            ],\n          },\n        ],\n      },\n    ];\n  }\n\n  protected handlerCancel(e?: Event) {\n    e?.stopPropagation();\n    e?.preventDefault();\n    if (this.mode === 'view' || this.mode === 'only_view') {\n      this.router.navigateByUrl(`section/list`);\n      return;\n    }\n    this.modalService.confirm(\n      {\n        nzTitle: !this.model?.id\n          ? 'Bạn có muốn hủy thêm mới menu động không?'\n          : 'Bạn có hủy bỏ thao tác ?',\n        nzOkText: 'Đồng ý',\n        nzOkType: 'primary',\n        nzMaskClosable: false,\n        nzClosable: true,\n        nzOnOk: () => this.router.navigateByUrl(`section/list`),\n        nzCancelText: 'Đóng',\n      },\n      'info'\n    );\n  }\n\n  protected handlerRemove(e: Event) {\n    e.stopPropagation();\n    this.modalService.confirm(\n      {\n        nzTitle: `Bạn có chắc chắn muốn xóa ${this.data?.name} ?`,\n        nzOkText: 'Đồng ý',\n        nzOkType: 'primary',\n        nzOkDanger: true,\n        nzMaskClosable: false,\n        nzClosable: false,\n        nzOnOk: this.processDeleteSection.bind(this, this.data),\n        nzCancelText: 'Hủy bỏ',\n      },\n      'error'\n    );\n  }\n\n  private processDeleteSection(row: ISectionConfig | undefined) {\n    return lastValueFrom(\n      this.iComLibsServicesProjectDynamicHomeService.delete(row?.id || '')\n    )\n      .then(() => {\n        this.IComMessageService.showAlertMessageDone('Thao tác thành công.');\n        this.router.navigateByUrl(`section/list`);\n      })\n      .catch((err) => {\n        this.IComMessageService.showAlertMessageError((err as HttpErrorResponse)?.error?.error_message || 'Thao tác thất bại');\n      });\n  }\n\n  private validate(): boolean {\n    // console.log(this.model);\n    if (!this.model?.content_conf?.status?.value?.length && this.model?.content_conf?.status?.name === 'selection') {\n      this.IComMessageService.showAlertMessageError('Trạng thái là Tùy chọn bắt buộc phải thêm dữ liệu.');\n      return false;\n    }\n\n    return true;\n  }\n\n\n  private trimFormFields() {\n    const formValues = this.model as any;\n    Object.keys(formValues).forEach(key => {\n      if (typeof formValues[key] === 'string') {\n        formValues[key] = formValues[key].trim();\n      }\n    });\n  }\n\n\n  protected async handlerSave(e: Event) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.trimFormFields();\n\n    if (this.form.invalid) {\n      markFormGroupTouched(this.form);\n      return;\n    }\n    if (!this.validate()) {\n      return;\n    }\n    if (this.model && this.model.content_conf && this.model.content_conf.hidden_name !== undefined) {\n      this.model.content_conf.hidden_name = !this.model.content_conf.hidden_name;\n    }\n\n\n    try {\n      this.isLoading = true;\n      if (this.data?.id) {\n        await lastValueFrom(this.iComLibsServicesProjectDynamicHomeService.edit(this.model));\n      } else {\n        await lastValueFrom(this.iComLibsServicesProjectDynamicHomeService.create(this.model));\n      }\n      this.IComMessageService.showAlertMessageDone(this.data?.id ? 'Sửa mới menu động thành công.' : 'Tạo mới menu động thành công.');\n      this.router.navigateByUrl(`section/list`);\n    } catch (err) {\n      console.log(err);\n      this.IComMessageService.showAlertMessageError(\n        (err as HttpErrorResponse)?.error?.error_message ||\n          this.data?.id ? 'Sửa menu động thất bại.' : 'Tạo mới menu động thất bại.'\n      );\n    } finally {\n      this.isLoading = false;\n      this.cdr.detectChanges();\n    }\n  }\n  shouldRender: boolean = true;\n  forceRerender() {\n    this.shouldRender = false;\n    this.cdr?.detectChanges();\n    setTimeout(() => {\n      this.shouldRender = true;\n      this.cdr?.detectChanges();\n    });\n  }\n\n  protected handlerEdit(e: Event) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.mode = 'edit';\n    this.isFirstChange = true;\n    this.model = cloneDeep(this.data);\n    this.setFields();\n    this.updateFieldReadonlyStatus();\n    this.initialDataLoaded = true;\n    this.forceRerender();\n    this.options = {\n      formState: {\n        disabled: false,\n        required: false,\n        mainModel: this.model,\n      },\n    };\n  }\n\n  protected getApiServiceByIdType(id: string): any {\n    switch (id) {\n      case 'BRANDS':\n        return {\n          placeholder: `Thêm theo tên thương hiệu`,\n          apiObs: this.iComLibsServicesProductService.getBrands(),\n        };\n      case 'POINT_PARTNERS':\n        return {\n          placeholder: `Thêm theo đối tác hoàn điểm`,\n          apiObs: this.iComLibsServicesProductService.getPointPartner(),\n        };\n      case 'CAMPAIGNS':\n        return {\n          placeholder: `Thêm theo tên campaign`,\n          apiObs: this.iComLibsServicesProductService.getCampaign(),\n        };\n      case 'PRODUCTS':\n        return {\n          placeholder: `Thêm theo mã, tên sản phẩm`,\n          apiObs: this.iComLibsServicesProductService.getSearchProduct(),\n        };\n\n      case 'BANNERS':\n        return {\n          placeholder: `Thêm theo tên banner`,\n          apiObs: this.iComLibsServicesProductService.getBanners(),\n        };\n      default:\n        return of();\n    }\n  }\n\n  private updateFieldReadonlyStatus() {\n    let isReadonly = true;\n    if (this.mode === 'edit' || this.mode === 'add') {\n      isReadonly = false;\n    }\n    this.fields.forEach((field) => {\n      this.setReadonlyForField(field, isReadonly);\n    });\n  }\n\n  private setReadonlyForField(field: FormlyFieldConfig, readonly: boolean) {\n    if (field.fieldGroup) {\n      field.fieldGroup.forEach((subField) =>\n        this.setReadonlyForField(subField, readonly)\n      );\n    } else {\n      if (field.props) {\n        field.props.readonly = readonly;\n        field.props.disabled = readonly;\n      }\n    }\n  }\n}\n"],"x_google_ignoreList":[]}