{"version":3,"file":"libs_role-permissions_account_src_index_ts.js","mappings":"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","names":["SetData","static","this","type","constructor","payload","AddItem","UpdateItem","SetDisable","IComLibsRolePermissionsAccountAddEditComponent","form","FormGroup","store","inject","Store","actions$","Actions","cdr","ChangeDetectorRef","IcomLibsProjectIamAccountService","IComLibsServicesProjectIamRoleService","fields","key","templateOptions","label","maxLength","required","validators","email","expression","control","value","test","message","defaultValue","placeholder","viewValue","labelProp","valueProp","options","list","page","limit","pipe","map","res","data","items","pattern","validation","messages","ngOnInit","ofActionSuccessful","subscribe","val","model","detectChanges","invalid","markFormGroupTouched","dispatch","t","core","Xpm","selectors","standalone","features","i0","decls","vars","consts","template","rf","ctx","FormlyNgZorroAntdModule","ReactiveFormsModule","i1","FormlyModule","i2","NzButtonModule","NzFormModule","i3","encapsulation","changeDetection","_r6","ctx_r5","handlerAdd","$event","ctx_r7","handlerFunctionControl","tab_r3","columns","loadData","IcomLibRoleAccountListComponent_nz_tab_3_icom_libs_core_components_table_1_Template","title","_r10","ctx_r9","closeDrawer","ctx_r11","saveData","ctx_r2","loading","IcomLibRoleAccountListComponent","drawerService","permissionService","iComLibsServicesInventoryService","IComLibsServicesInventoryService","productService","IComLibsServicesProductService","IComMessageService","router","Router","iComMessageService","tabs","callback","status","actions","name","editItem","bind","condition","getPermission","resetPassword","params","className","fieldGroupClassName","fieldGroup","props","viewItem","of","username","role","phone","created_at","Date","creator","_this","_ref","_asyncToGenerator","lastValueFrom","add","showAlertMessageDone","drawerRef","close","eventFunctionControl","reset","err","showAlertMessageError","error","error_message","_x","apply","arguments","navigateByUrl","id","create","nzTitle","nzFooter","footerTemplate","nzContent","afterOpen","event","console","log","viewQuery","DecimalPipe","NzDrawerService","IcomLibRoleAccountListComponent_nz_tab_3_Template","IcomLibRoleAccountListComponent_ng_template_4_Template","IcomLibsCoreTableComponent","NgIf","NzDrawerModule","NzModalModule","i4","i5","NzGridModule","i6","NzTabsModule","i7","NgFor"],"sourceRoot":"webpack:///","sources":["./libs/role-permissions/account/src/list/store/actions/data.actions.ts","./libs/role-permissions/account/src/list/add-edit/add-edit.component.ts","./libs/role-permissions/account/src/list/add-edit/add-edit.component.html","./libs/role-permissions/account/src/list/list.component.html","./libs/role-permissions/account/src/list/list.component.ts"],"sourcesContent":["\nexport class SetData {\n  static readonly type = '[CRUD] SetData';\n  constructor(public payload: any) {}\n}\nexport class AddItem {\n  static readonly type = '[CRUD] Add';\n  constructor(public payload: any) {}\n}\n\nexport class GetItems {\n  static readonly type = '[CRUD] Get';\n}\n\nexport class UpdateItem {\n  static readonly type = '[CRUD] Update';\n  constructor(public payload: any) {}\n}\n\nexport class SetDisable {\n  static readonly type = '[CRUD] Disable';\n  constructor(public payload: any) {}\n}\n\n\nexport class DeleteItem {\n  static readonly type = '[CRUD] Delete';\n  constructor(public id: number) {}\n}","import { JsonPipe, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, inject } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { FormlyFieldConfig, FormlyModule } from '@ngx-formly/core';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { FormlyNgZorroAntdModule } from '@ngx-formly/ng-zorro-antd';\nimport { Actions, Store, ofActionSuccessful } from '@ngxs/store';\nimport { AddItem, SetData, SetDisable, UpdateItem } from '../store/actions/data.actions';\nimport { markFormGroupTouched } from '@icom/defines';\nimport { IComLibsServicesProjectIamRoleService, IcomLibsProjectIamAccountService } from '@icom/services/projects';\nimport { map } from 'rxjs';\n@Component({\n  selector: 'icom-libs-role-permissions-account-add-edit',\n  templateUrl: './add-edit.component.html',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    FormlyNgZorroAntdModule,\n    ReactiveFormsModule,\n    FormlyModule,\n    NzButtonModule,\n    NgIf,\n    NzFormModule,\n    JsonPipe\n  ]\n})\nexport class IComLibsRolePermissionsAccountAddEditComponent implements OnInit {\n  form = new FormGroup({});\n  model: any;\n\n  public store = inject(Store);\n  public actions$ = inject(Actions);\n  public cdr = inject(ChangeDetectorRef);\n  public IcomLibsProjectIamAccountService = inject(IcomLibsProjectIamAccountService);\n  public IComLibsServicesProjectIamRoleService = inject(IComLibsServicesProjectIamRoleService);\n\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'username',\n      type: 'input',\n      templateOptions: {\n        label: 'Tên người dùng',\n        maxLength: 50,\n      },\n    },\n    {\n      key: 'email',\n      type: 'input',\n      templateOptions: {\n        label: 'Email',\n        required: true,\n        maxLength: 254,\n      },\n      validators: {\n        email: {\n          expression: (control: any) => !control?.value || /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(control.value),\n          message: 'Email không hợp lệ',\n        },\n      },\n    },\n    {\n      key: 'role',\n      type: 'select',\n      defaultValue: '',\n      templateOptions: {\n        label: 'Vai trò',\n        placeholder: 'Chọn vai trò',\n        required: true,\n        viewValue: 'name',\n        labelProp: 'name',\n        valueProp: 'id',\n        options: this.IComLibsServicesProjectIamRoleService.list({page: 1, limit: 9999}).pipe(\n          map((res) => {\n            return res?.data?.items || []\n        }))\n      },\n      // hooks: {\n      //   onInit: (field) => {\n      //     // Nếu vai trò được chọn là Merchant, hiển thị trường dropdownlist Chọn merchant\n      //     if (field.formControl?.value === 'Merchant') {\n      //       field?.parent?.fieldGroup?.push({\n      //         key: 'merchant',\n      //         type: 'select',\n      //         templateOptions: {\n      //           label: 'Chọn merchant',\n      //           required: true,\n      //           options: [\n      //             // Thêm các lựa chọn từ danh sách Merchant/Organization có trạng thái Accepted trong CMS\n      //           ],\n      //         },\n      //       });\n      //     } else {\n      //       // Nếu vai trò được chọn khác Merchant, hiển thị checkbox: Có quyền thao tác với bản ghi của người khác không\n      //       field?.parent?.fieldGroup?.push({\n      //         key: 'recordPermission',\n      //         type: 'checkbox',\n      //         templateOptions: {\n      //           label: 'Có quyền thao tác với bản ghi của người khác không',\n      //         },\n      //       });\n      //     }\n      //   },\n      // },\n    },\n    // {\n    //   key: 'merchant',\n    //   type: 'select-custom',\n    //   templateOptions: {\n    //     label: 'Chọn merchant',\n    //     // ... các options cho merchant\n    //   },\n    //   hideExpression: (model: any, formState: any) => model.role !== 'Merchant',\n    // },\n\n    // {\n    //   key: 'recordPermission',\n    //   type: 'checkbox',\n    //   defaultValue: false,\n    //   templateOptions: {\n    //     label: 'Có quyền thao tác với bản ghi của người khác',\n    //   },\n    //   hideExpression: (model: any) => model && model.role === 'Merchant',\n    // },\n    {\n      key: 'phone',\n      type: 'input',\n      templateOptions: {\n        label: 'Điện thoại',\n        pattern: '^[0-9]*$',\n        maxLength: 10, // Changed to 10 as per the new specification\n        placeholder: 'Nhập số điện thoại',\n      },\n      validation: {\n        messages: {\n          pattern: 'Số điện thoại chỉ được chứa ký tự số',\n        },\n      },\n    },\n    {\n      key: 'status',\n      type: 'radio',\n      templateOptions: {\n        label: 'Trạng thái',\n        required: true,\n        options: [\n          { label: 'Kích hoạt', value: 'active' },\n          { label: 'Ngừng kích hoạt', value: 'inactive' },\n        ],\n        defaultValue: 'active', // Set default selection to \"active\"\n      },\n    },\n    {\n      key: 'note',\n      type: 'textarea',\n      templateOptions: {\n        label: 'Ghi chú',\n        maxLength: 500, // Ensure maxLength is respected\n      },\n    }\n  ];\n\n\n  ngOnInit(): void {\n    this.actions$.pipe(ofActionSuccessful(SetData)).subscribe(val => {\n      this.model = val?.payload;\n      this.cdr.detectChanges();\n    });\n    this.actions$.pipe(ofActionSuccessful(AddItem)).subscribe(() => {\n      if (this.form.invalid) {\n        markFormGroupTouched(this.form);\n        return;\n      }\n      this.store.dispatch(new UpdateItem(this.model));\n    });\n  }\n}\n","<form [formGroup]=\"form\"  nz-form  [nzLayout]=\"'vertical'\">\n  <formly-form [form]=\"form\"  [fields]=\"fields\" [model]=\"model\"></formly-form>\n</form>\n","<div class=\"flex w-full h-full flex-col\">\n  <div nz-row class=\"w-full\">\n    <nz-tabset class=\"w-full h-full\">\n      <nz-tab *ngFor=\"let tab of tabs\" [nzTitle]=\"tab.title\">\n        <icom-libs-core-components-table\n          *ngIf=\"tab.loadData\"\n          class=\"w-full\"\n          [columns]=\"tab.columns\"\n          [loadFn]=\"tab.loadData\"\n          [fields]=\"tab.fields\"\n          [form]=\"tab.form\"\n          (icomAdd)=\"handlerAdd()\"\n          (icomFunctionControl)=\"handlerFunctionControl($event)\"\n        ></icom-libs-core-components-table>\n      </nz-tab>\n    </nz-tabset>\n  </div>\n</div>\n\n<ng-template #footerTemplate>\n  <div nz-row nzJustify=\"end\" nzGutter=\"8\">\n    <div nz-col nzSpan=\"auto\">\n      <button nz-button nzType=\"default\" (click)=\"closeDrawer()\">Đóng</button>\n    </div>\n    <div nz-col nzSpan=\"auto\">\n      <button [nzLoading]=\"loading\" nz-button nzType=\"primary\" (click)=\"saveData()\">Lưu</button>\n    </div>\n  </div>\n</ng-template>\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, TemplateRef, ViewChild, inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { IComLibsServicesInventoryService, IComLibsServicesProductService, IcomLibsProjectIamAccountService } from '@icom/services/projects';\nimport { IcomLibsCoreTableComponent } from '@icom/components/table';\nimport { DecimalPipe, NgFor, NgIf } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { NzModalModule, NzModalService } from 'ng-zorro-antd/modal';\nimport { IComMessageService } from '@icom/services/common';\nimport { NzDrawerModule, NzDrawerService } from 'ng-zorro-antd/drawer';\nimport { IComLibsRolePermissionsAccountAddEditComponent } from './add-edit/add-edit.component';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { Actions, Store, ofActionSuccessful } from '@ngxs/store';\nimport { AddItem, SetData, SetDisable, UpdateItem } from './store/actions/data.actions';\nimport { lastValueFrom, of } from 'rxjs';\nimport { IcomLibsHasPermissionDirective } from '@icom/directive';\nimport { PermissionService } from '@icom/services/authenticate';\nimport { NzTabsModule } from 'ng-zorro-antd/tabs';\nimport { HttpErrorResponse } from '@angular/common/http';\n@Component({\n  selector: 'icom-libs-role-permissions-account',\n  templateUrl: './list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    IcomLibsCoreTableComponent,\n    NgIf,\n    NzDrawerModule,\n    NzModalModule,\n    NzButtonModule,\n    NzGridModule,\n    IComLibsRolePermissionsAccountAddEditComponent,\n    IcomLibsHasPermissionDirective,\n    NzTabsModule,\n    NgFor\n  ],\n  providers: [\n    DecimalPipe,\n    NzDrawerService,\n  ]\n})\nexport class IcomLibRoleAccountListComponent implements OnInit {\n  columns: any[];\n  tabs: any[];\n\n  private store = inject(Store);\n  private eventFunctionControl: any;\n  private drawerRef!: any;\n  protected loading: boolean;\n\n  protected iComLibsServicesInventoryService = inject(IComLibsServicesInventoryService);\n  protected productService = inject(IComLibsServicesProductService);\n  protected IComMessageService = inject(IComMessageService);\n  protected cdr = inject(ChangeDetectorRef);\n  protected router = inject(Router);\n  protected actions$ = inject(Actions);\n  protected IcomLibsProjectIamAccountService = inject(IcomLibsProjectIamAccountService);\n  protected iComMessageService = inject(IComMessageService);\n\n  @ViewChild('footerTemplate') footerTemplate!: TemplateRef<any>;\n\n  constructor(\n    private drawerService: NzDrawerService,\n    private permissionService: PermissionService\n  ) {\n    this.columns = [];\n    this.loading = false;\n    this.tabs = [\n      {\n        title: 'Icom',\n        columns: [\n          { title: 'STT', type: 'index' },\n          { title: 'Email', key: 'email', type: 'text' },\n          { title: 'Tên người dùng', key: 'username', type: 'text' },\n          { title: 'Vai trò', key: 'role', type: 'text' },\n          { title: 'Điện thoại', key: 'phone', type: 'text' },\n          { title: 'Ngày tạo', key: 'created_at', type: 'text', pipe: 'time' },\n          { title: 'Người tạo', key: 'creator', type: 'text' },\n          {\n            title: 'Trạng thái', key: 'status', type: 'toggle',\n            callback: (data: any) => {\n              data.status = !data.status;\n              this.cdr.detectChanges();\n            }\n          },\n          {\n            title: 'Thao tác',\n            key: 'actions',\n            type: 'action',\n            actions: [\n              {\n                name: 'Sửa',\n                callback: this.editItem.bind(this),\n                condition: () => {\n                  return this.permissionService.getPermission('edit')\n                }\n              },\n              {\n                name: 'Đổi mật khẩu',\n                callback: this.resetPassword.bind(this),\n                condition: (data: any) => {\n                  return this.permissionService.getPermission('edit')\n                }\n              },\n            ],\n          },\n        ],\n        loadData: (params: any) => {\n          return this.IcomLibsProjectIamAccountService.list(params);\n        },\n        form: new FormGroup({}),\n        fields: [\n          {\n            className: 'flex flex-col',\n            fieldGroupClassName: 'flex w-full justify-center',\n            fieldGroup: [\n              {\n                key: 'code',\n                type: 'input',\n                className: 'mb-4 basis-6/12', // Chiếm toàn bộ rộng và có margin bottom\n                props: {\n                  type: 'text',\n                  placeholder: 'Tìm kiếm theo tên, số điện thoại, email của tài khoản',\n                },\n              },\n            ]\n          }\n        ]\n      },\n      {\n        title: 'Merchant',\n        columns: [\n          { title: 'STT', type: 'index' },\n          { title: 'Email', key: 'email', type: 'text' },\n          { title: 'Tên người dùng', key: 'username', type: 'text' },\n          { title: 'Vai trò', key: 'role', type: 'text' },\n          { title: 'Merchant', key: 'merchant', type: 'text' },\n          { title: 'Điện thoại', key: 'phone', type: 'text' },\n          { title: 'Ngày tạo', key: 'created_at', type: 'text', pipe: 'time' },\n          { title: 'Người tạo', key: 'creator', type: 'text' },\n          {\n            title: 'Trạng thái', key: 'status', type: 'toggle',\n            callback: (data: any) => {\n              data.status = !data.status;\n              this.cdr.detectChanges();\n            }\n          },\n          {\n            title: 'Thao tác',\n            key: 'actions',\n            type: 'action',\n            actions: [\n              {\n                name: 'Xem',\n                callback: this.viewItem.bind(this),\n                condition: () => {\n                  return true;\n                }\n              },\n              {\n                name: 'Sửa',\n                callback: this.editItem.bind(this),\n                condition: () => {\n                  return this.permissionService.getPermission('edit')\n                }\n              },\n              {\n                name: 'Đổi mật khẩu',\n                callback: this.resetPassword.bind(this),\n                condition: () => {\n                  return this.permissionService.getPermission('edit')\n                }\n              },\n            ],\n          },\n        ],\n        loadData: () => {\n          return of({\n            data: {\n              items: [\n                {\n                  email: 'user1@example.com',\n                  username: 'User One',\n                  role: 'Administrator',\n                  phone: '123-456-7890',\n                  status: 'Active',\n                  created_at: new Date('2022-04-01T08:30:00'), // Example date format\n                  creator: 'Admin'\n                },\n                {\n                  email: 'user2@example.com',\n                  username: 'User Two',\n                  role: 'Editor',\n                  phone: '098-765-4321',\n                  status: 'Inactive',\n                  created_at: new Date('2022-03-15T11:45:00'), // Example date format\n                  creator: 'Moderator'\n                },\n                {\n                  email: 'user3@example.com',\n                  username: 'User Three',\n                  role: 'Viewer',\n                  phone: '555-555-5555',\n                  status: 'Pending',\n                  created_at: new Date('2022-04-05T14:25:00'), // Example date format\n                  creator: 'Admin'\n                }\n                // ...add as many objects as needed for your mockup\n              ]\n            }\n          })\n        },\n        form: new FormGroup({}),\n        fields: [\n          {\n            className: 'flex flex-col',\n            fieldGroupClassName: 'flex w-full justify-center',\n            fieldGroup: [\n              {\n                key: 'code',\n                type: 'input',\n                className: 'mb-4 basis-6/12', // Chiếm toàn bộ rộng và có margin bottom\n                props: {\n                  type: 'text',\n                  placeholder: 'Tìm kiếm theo tên, số điện thoại, email của tài khoản',\n                },\n              },\n            ]\n          }\n        ]\n      }\n    ]\n  }\n\n   ngOnInit() {\n    this.actions$.pipe(ofActionSuccessful(SetDisable)).subscribe((data: any) => {\n      this.loading = data?.payload;\n      this.cdr.detectChanges();\n    });\n    this.actions$.pipe(ofActionSuccessful(UpdateItem)).subscribe(async (data: any) => {\n      try {\n        this.loading = true;\n        await lastValueFrom(this.IcomLibsProjectIamAccountService.add(data.payload));\n        this.loading = false;\n        this.iComMessageService.showAlertMessageDone('Thao tác thành công.');\n        this.drawerRef.close();\n        this.eventFunctionControl.reset();\n      } catch (err) {\n        this.iComMessageService.showAlertMessageError((err as HttpErrorResponse)?.error?.error_message || 'Thao tác thất bại.');\n      }\n    });\n  }\n\n\n\n  editItem(data: any): void {\n    this.handlerAdd(data);\n  }\n\n  viewItem(data: any): void {\n    this.router.navigateByUrl(`inventory/transfer/detail?id=${data.id}&mode=view`);\n  }\n\n  protected handlerAdd(data?: any) {\n    this.drawerRef = this.drawerService.create<IComLibsRolePermissionsAccountAddEditComponent, any>({\n      nzTitle: data ? 'Sửa' : 'Thêm mới',\n      nzFooter: this.footerTemplate,\n      nzContent: IComLibsRolePermissionsAccountAddEditComponent,\n    });\n    this.drawerRef.afterOpen.subscribe(() => {\n      this.store.dispatch(new SetData(data ?? {}));\n    });\n  }\n\n  handlerFunctionControl(event: any) {\n    this.eventFunctionControl = event;\n  }\n\n  closeDrawer() {\n    if (this.drawerRef) {\n      this.drawerRef.close();\n    }\n  }\n\n  resetPassword() {\n    console.log('resetPassword clicked');\n  }\n\n  saveData() {\n    // console.log(this.da)\n    this.store.dispatch(new AddItem({}));\n  }\n}\n"],"x_google_ignoreList":[]}