{"version":3,"file":"libs_campaign_batch-reward_src_index_ts.js","mappings":"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","names":["i0","IComLibsCampaignBatchRewardComponent_div_11_ng_template_5_Template","ctx_r0","listReason","total_success","_r2","_c0","total_fail","_c1","item_r5","phone_number","preview_response","has_gift","reason","IComLibsCampaignBatchRewardComponent_nz_list_12_nz_list_item_2_Template","ctx_r1","datas","routes","path","component","IComLibsCampaignBatchRewardComponent","constructor","msg","this","form","FormGroup","model","options","formState","hideQuantity","fileList","IComLibsServicesProjectCampaignService","inject","inventoryService","IComLibsServicesInventoryService","IComMessageService","cdr","ChangeDetectorRef","beforeUpload","file","Observable","observer","isJpgOrPng","type","error","complete","isLt2M","size","length","next","fields","ngOnInit","key","className","props","label","placeholder","viewValue","labelProp","required","valueProp","searchCampaign","pipe","map","result","data","items","item","id","campaign_name","handlerPreviewFile","event","_this","_asyncToGenerator","formData","FormData","append","originFileObj","lastValueFrom","batchRewarPreview","detectChanges","err","showAlertMessageError","error_message","undefined","handlerCancel","e","stopPropagation","reset","handlerSave","_this2","preventDefault","valid","markAsTouched","submitted","cloneDeep","isLoading","campaign_id","batchRewardSubmit","showAlertMessageDone","console","log","Object","keys","controls","forEach","touched","static","t","i1","core","Xpm","selectors","decls","vars","consts","template","rf","ctx","$event","IComLibsCampaignBatchRewardComponent_div_11_Template","IComLibsCampaignBatchRewardComponent_nz_list_12_Template","IComLibsCampaignStatisticModule","oAB","cJS","CommonModule","RouterModule","forChild","FormlyModule","ReactiveFormsModule","NzUploadModule","NzButtonModule","NzStatisticModule","NzCardModule","NzFormModule","NzListModule"],"sourceRoot":"webpack:///","sources":["./libs/campaign/batch-reward/src/import/import.component.html","./libs/campaign/batch-reward/src/import/import.module.ts","./libs/campaign/batch-reward/src/import/import.component.ts"],"sourcesContent":["<div class=\"!p-4 bg-white border rounded-md\">\n  <form [formGroup]=\"form\" nz-form>\n    <formly-form\n      [model]=\"model\"\n      [fields]=\"fields\"\n      [options]=\"options\"\n      [form]=\"form\"\n    ></formly-form>\n  </form>\n  <nz-upload\n    class=\"basis-1/2 ml-4 h-full w-full\"\n    nzName=\"avatar\"\n    nzType=\"drag\"\n    [nzMultiple]=\"false\"\n    [(nzFileList)]=\"fileList\"\n    [nzBeforeUpload]=\"beforeUpload\"\n\t\t(nzChange)=\"handlerPreviewFile($event)\">\n    <ng-container>\n      <p class=\"ant-upload-drag-icon\"><span nz-icon nzType=\"inbox\"></span></p>\n      <p class=\"ant-upload-text\">Upload file CSV</p>\n      <p class=\"ant-upload-hint\">Size can't exceed 2 MB</p>\n    </ng-container>\n  </nz-upload>\n\n  <div *ngIf=\"listReason\" style=\"background: #ECECEC;\" class=\"p-4\" >\n    <nz-row [nzGutter]=\"16\">\n      <nz-col [nzSpan]=\"12\">\n        <nz-card>\n          <nz-statistic\n            [nzValue]=\"listReason?.total_success || 0\"\n            [nzTitle]=\"'Success'\"\n            [nzPrefix]=\"prefixTplOne\"\n            [nzValueStyle]=\"{ color: '#3F8600' }\"\n          ></nz-statistic>\n          <ng-template #prefixTplOne><span nz-icon nzType=\"check\" nzTheme=\"outline\"></span></ng-template>\n        </nz-card>\n      </nz-col>\n      <nz-col [nzSpan]=\"12\">\n        <nz-card>\n          <nz-statistic\n            [nzValue]=\"listReason?.total_fail || 0\"\n            [nzTitle]=\"'Fail'\"\n            [nzValueStyle]=\"{ color: '#CF1322' }\"\n          ></nz-statistic>\n        </nz-card>\n      </nz-col>\n    </nz-row>\n  </div>\n\n  <nz-list class=\"w-1/2 mt-4\" nzBordered nzHeader=\"Phone Number\" nzFooter=\"Preview\" *ngIf=\"listReason?.datas && listReason?.datas?.length\">\n    <div class=\"h-[200px] overflow-auto \">\n      <nz-list-item *ngFor=\"let item of listReason?.datas\">\n        <span nz-typography><mark>{{ item.phone_number }} </mark></span>\n        {{ item?.preview_response?.has_gift ? 'Accept' : item?.preview_response?.reason[0]?.reason  }}\n      </nz-list-item>\n    </div>\n  \n  </nz-list>\n  \n\t<div class=\"mt-4\" nz-row>\n    <div nz-col class=\"search-area flex flex\">\n      <button nz-button [nzType]=\"'primary'\" [nzLoading]=\"isLoading\" (click)=\"handlerSave($event)\">\n        Submit\n      </button>\n      <button nz-button class=\"ml-4\" (click)=\"handlerCancel($event)\">Cancel</button>\n    </div>\n  </div>\n</div>\n","import { NzCardModule } from 'ng-zorro-antd/card';\nimport { CommonModule, NgIf } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IComLibsCampaignBatchRewardComponent } from './import.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzStatisticModule } from 'ng-zorro-antd/statistic';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzListModule } from 'ng-zorro-antd/list';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IComLibsCampaignBatchRewardComponent,\n  },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormlyModule,\n    ReactiveFormsModule,\n    NgIf,\n    NzUploadModule,\n    NzButtonModule,\n    NzStatisticModule,\n    NzCardModule,\n    NzFormModule,\n    NzListModule\n  ],\n  declarations: [IComLibsCampaignBatchRewardComponent],\n})\nexport class IComLibsCampaignStatisticModule { }\n\n","import { HttpErrorResponse } from '@angular/common/http';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnInit,\n  inject,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport {\n  ICampaignTransaction,\n  IPaginationData,\n  IProduct,\n  TYPE_FORM_CONTROL,\n} from '@icom/interfaces';\nimport { IComMessageService } from '@icom/services/common';\nimport {\n  IComLibsServicesInventoryService,\n  IComLibsServicesProjectCampaignService,\n} from '@icom/services/projects';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\nimport { cloneDeep } from 'lodash';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { NzUploadFile } from 'ng-zorro-antd/upload';\nimport { Observable, Observer, lastValueFrom, map } from 'rxjs';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'icom-libs-campaign-statistic',\n  templateUrl: './import.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IComLibsCampaignBatchRewardComponent implements OnInit {\n  protected form = new FormGroup({});\n  protected model: any = {};\n  protected pagination!: IPaginationData;\n  protected options: FormlyFormOptions = {\n    formState: {\n      hideQuantity: true,\n    },\n  };\n  protected fields: FormlyFieldConfig[];\n  protected dataProduct!: IProduct | undefined;\n  protected fileList: NzUploadFile[] = [];\n  protected isLoading!: boolean;\n  protected listReason: any;\n\n  protected IComLibsServicesProjectCampaignService = inject(\n    IComLibsServicesProjectCampaignService\n  );\n  protected inventoryService = inject(IComLibsServicesInventoryService);\n  protected IComMessageService = inject(IComMessageService);\n  protected cdr = inject(ChangeDetectorRef);\n\n  constructor(private msg: NzMessageService) {\n    this.fields = [];\n  }\n\n  ngOnInit(): void {\n    this.fields = [\n      {\n        key: 'campaign_id',\n        type: 'select-custom',\n        className: 'basis-4/12',\n        props: {\n          label: 'Campaign',\n          placeholder: 'Select Campaign',\n          viewValue: 'label',\n          labelProp: 'label',\n          required: true,\n          valueProp: 'id',\n          options:\n            this.IComLibsServicesProjectCampaignService.searchCampaign().pipe(\n              map((result) => {\n                return (\n                  result?.data?.items?.map((item: ICampaignTransaction) => {\n                    return {\n                      ...item,\n                      label: `[${item.id}] ${item.campaign_name}`,\n                    };\n                  }) || []\n                );\n              })\n            ),\n        },\n      },\n    ];\n  }\n\n  protected beforeUpload = (file: NzUploadFile): Observable<boolean> =>\n    new Observable((observer: Observer<boolean>) => {\n      const isJpgOrPng = file.type === 'text/csv';\n      if (!isJpgOrPng) {\n        this.msg.error('You can only upload CSV file!');\n        observer.complete();\n        return;\n      }\n      const isLt2M = (file.size || 1) / 1024 / 1024 < 2;\n      if (!isLt2M) {\n        this.msg.error('Image must smaller than 2MB!');\n        observer.complete();\n        return;\n      }\n      if (this.fileList && this.fileList.length) {\n        this.msg.error('Only Post One File');\n        observer.complete();\n        return;\n      }\n      observer.next(isJpgOrPng && isLt2M);\n      observer.complete();\n    });\n\n  protected async handlerPreviewFile(event: any) {\n    if(event.type === 'removed') {\n      this.listReason = undefined;\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append('file', event.file.originFileObj as File);\n      const result = await lastValueFrom(\n        this.IComLibsServicesProjectCampaignService.batchRewarPreview(formData)\n      );\n      this.listReason = result.data;\n      this.listReason.formData = event.file.originFileObj;\n      this.cdr.detectChanges();\n    } catch (err) {\n      this.IComMessageService.showAlertMessageError(\n        (err as HttpErrorResponse)?.error?.error_message || 'Preview fail'\n      );\n    }\n  }\n\n  protected handlerCancel(e?: Event) {\n    e?.stopPropagation();\n    this.form.reset();\n    this.fileList = [];\n    this.listReason = undefined;\n  }\n\n  public async handlerSave(e?: Event) {\n    e?.stopPropagation();\n    e?.preventDefault();\n    if (!this.form.valid) {\n      Object.keys(this.form.controls as TYPE_FORM_CONTROL).forEach((key) => {\n        (this.form.controls as TYPE_FORM_CONTROL)[key].touched = true;\n      });\n      return;\n    }\n    try {\n      this.form.markAsTouched();\n      (this.form as TYPE_FORM_CONTROL).submitted = true;\n      const model = cloneDeep(this.model);\n      this.isLoading = true;\n      const formData = new FormData();\n      formData.append('file',  this.listReason.formData  as File);\n      formData.append('campaign_id', model.campaign_id);\n\n      await lastValueFrom(\n        this.IComLibsServicesProjectCampaignService.batchRewardSubmit(formData)\n      );\n      this.cdr.detectChanges();\n      this.handlerCancel();\n      this.IComMessageService.showAlertMessageDone('Submit success');\n    } catch (err) {\n      console.log(err);\n      this.IComMessageService.showAlertMessageError(\n        (err as HttpErrorResponse)?.error?.error_message || 'Submit fail'\n      );\n    } finally {\n      this.isLoading = false;\n      this.cdr.detectChanges();\n    }\n  }\n}\n"],"x_google_ignoreList":[]}