{"version":3,"file":"default-node_modules_ng-zorro-antd_fesm2022_ng-zorro-antd-tabs_mjs.js","mappings":"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","names":["NzTabAddButtonComponent_ng_container_0_Template","rf","ctx","i0","icon_r1","$implicit","NzTabNavOperationComponent_ul_5_li_1_ng_container_1_Template","item_r5","tab","label","_c0","visible","NzTabNavOperationComponent_ul_5_li_1_Template","_r9","ctx_r8","onSelect","$event","ctx_r10","onContextmenu","disabled","active","NzTabNavOperationComponent_ul_5_Template","ctx_r2","items","NzTabNavOperationComponent_button_6_Template","_r12","ctx_r11","addClicked","emit","ctx_r3","addIcon","_c1","minWidth","_c2","_c3","NzTabNavBarComponent_button_5_Template","_r5","ctx_r4","NzTabNavBarComponent_div_8_ng_template_1_Template","NzTabNavBarComponent_div_8_Template","extraTemplate","_c4","_c5","NzTabBodyComponent_ng_container_0_ng_template_1_Template","NzTabBodyComponent_ng_container_0_Template","ctx_r0","content","NzTabCloseButtonComponent_ng_container_0_Template","_c6","NzTabComponent_ng_template_0_Template","NzTabComponent_ng_template_2_Template","_c7","_c8","NzTabSetComponent_nz_tabs_nav_0_div_1_ng_container_2_Template","tab_r3","NzTabSetComponent_nz_tabs_nav_0_div_1_button_3_Template","_r10","i_r4","index","onClose","nzCloseIcon","_c9","NzTabSetComponent_nz_tabs_nav_0_div_1_Template","_r13","restoredCtx","ctx_r12","clickNavItem","ctx_r14","contextmenuNavItem","position","nzTabBarGutter","nzSelectedIndex","nzDisabled","getTabIndex","nzHideAll","getTabContentId","nzClosable","closable","NzTabSetComponent_nz_tabs_nav_0_Template","_r16","ctx_r15","nzTabListScroll","ctx_r17","setSelectedIndex","ctx_r18","onAdd","nzTabBarStyle","inkBarAnimated","addable","nzAddIcon","nzTabBarExtraContent","tabs","NzTabSetComponent_div_3_Template","tab_r19","i_r20","ctx_r1","nzForceRender","tabPaneAnimated","NzTabAddButtonComponent","constructor","elementRef","this","element","nativeElement","getElementWidth","offsetWidth","getElementHeight","offsetHeight","static","ɵfac","t","ɵcmp","type","selectors","hostAttrs","inputs","decls","vars","consts","template","dependencies","i1","i2","encapsulation","NzTabsInkBarDirective","_animated","animationMode","animated","ngZone","alignToElement","runOutsideAngular","reqAnimFrame","setStyles","inkBar","style","top","height","left","getLeftPosition","width","getTopPosition","offsetLeft","offsetTop","ANIMATION_MODULE_TYPE","ɵdir","hostVars","hostBindings","NzTabNavItemDirective","el","parentElement","focus","NzTabNavOperationComponent","cdr","EventEmitter","selected","closeAnimationWaitTimeoutId","menuOpened","item","nzClick","e","nzContextmenu","showItems","clearTimeout","markForCheck","menuVisChange","setTimeout","ngOnDestroy","length","outputs","exportAs","_r1","i4","i4$1","i5","changeDetection","SPEED_OFF_MULTIPLE","NzTabScrollListDirective","lastWheelDirection","lastWheelTimestamp","lastTimestamp","lastTimeDiff","lastMixedWheel","lastWheelPrevent","touchPosition","lastOffset","motion","unsubscribe","offsetChange","tabScroll","onTouchEnd","distanceX","x","distanceY","y","absX","Math","abs","absY","max","currentX","currentY","window","setInterval","clearInterval","onOffset","onTouchMove","preventDefault","screenX","screenY","touches","offsetX","offsetY","now","Date","onTouchStart","onWheel","deltaX","deltaY","mixed","absMixed","defaultPrevented","ngOnInit","wheel$","fromEvent","touchstart$","touchmove$","touchend$","subscription","Subscription","add","subscribeWrap","observable","handler","subscribe","event","run","RESIZE_SCHEDULER","requestAnimationFrame","animationFrameScheduler","asapScheduler","NzTabNavBarComponent","selectedIndex","_selectedIndex","value","newValue","coerceNumberProperty","selectedIndexChanged","keyManager","updateActiveItem","focusIndex","activeItemIndex","isValidIndex","setActiveItem","showAddButton","hiddenItems","viewportRuler","nzResizeObserver","dir","indexFocused","selectFocusedIndex","hideBar","translate","transformX","transformY","pingLeft","pingRight","pingTop","pingBottom","destroy$","Subject","wrapperWidth","wrapperHeight","scrollListWidth","scrollListHeight","operationWidth","operationHeight","addButtonWidth","addButtonHeight","lockAnimationTimeoutId","cssTransformTimeWaitingId","ngAfterViewInit","dirChange","change","asObservable","of","resize","realign","updateScrollListPosition","alignInkBarToSelectedTab","FocusKeyManager","withHorizontalOrientation","getLayoutDirection","withWrap","merge","observe","navWarpRef","navListRef","pipe","takeUntil","auditTime","changes","Promise","resolve","then","newFocusIndex","setTabFocus","scrollToTab","activeItem","ngAfterContentChecked","next","complete","onSelectedFromMenu","tabIndex","toArray","findIndex","onOffsetChange","clampTransformX","setTransform","clampTransformY","lockAnimation","setVisibleRange","setPingStatus","handleKeydown","inNavigationList","contains","target","hasModifierKey","keyCode","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","onKeydown","ENTER","SPACE","find","newTransform","right","transition","transform","scrollWidth","min","resetSizes","addBtnRef","operationRef","selectedItem","selectedItemElement","ping","bottom","navWarp","Object","keys","forEach","pos","className","classList","remove","unit","transformSize","basicSize","tabContentSize","addSize","DEFAULT_SIZE","getOffset","offset","mergedBasicSize","len","endIndex","i","startIndex","startHiddenTabs","slice","endHiddenTabs","_tabIndex","ngOnChanges","isFirstChange","i1$1","i2$1","i3","contentQueries","dirIndex","_t","viewQuery","first","features","ngContentSelectors","NzTabBodyComponent","forceRender","attrs","NzTabCloseButtonComponent","closeIcon","NzTabLinkTemplateDirective","templateRef","NzTabLinkDirective","routerLink","i1$2","NzTabDirective","NZ_TAB_SET","InjectionToken","NzTabComponent","contentTemplate","nzTitle","nzTabLinkTemplateDirective","closestTabSet","nzSelect","nzDeselect","isActive","origin","stateChanges","TemplateRef","linkDirective","__decorate","InputBoolean","prototype","NzTabChangeEvent","nextId","NzTabSetComponent","indexToSelect","indexOf","nzTabPosition","nzType","nzHideAdd","line","nzAnimated","tabPane","nzConfigService","directionality","router","_nzModuleName","nzCanDeactivate","nzSize","undefined","nzCentered","nzLinkRouter","nzLinkExact","nzSelectChange","nzSelectedIndexChange","nzClose","nzAdd","allTabs","QueryList","tabLabelSubscription","EMPTY","tabsSubscription","canDeactivateSubscription","tabSetId","direction","detectChanges","destroy","ngAfterContentInit","setUpRouter","subscribeToTabLabels","subscribeToAllTabChanges","clampTabIndex","isFirstRun","createChangeEvent","stopPropagation","map","startWith","reset","filter","notifyOnChanges","canDeactivateFun","pre","wrapIntoObservable","isRouterLinkClickEvent","can","tabNavBarRef","Error","PREFIX","events","NavigationEnd","delay","updateRouterActive","navigated","findShouldActiveTabIndex","isLinkActive","c","link","urlTree","paths","queryParams","fragment","matrixParams","getTabContentMarginValue","getTabContentMarginLeft","getTabContentMarginRight","i1$3","provide","useExisting","i6","WithConfig","NzTabsModule","ɵmod","ɵinj","imports","BidiModule","CommonModule","ObserversModule","NzIconModule","NzOutletModule","PlatformModule","A11yModule","CdkScrollableModule","NzDropDownModule"],"sourceRoot":"webpack:///","sources":["./node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-tabs.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, Input, Directive, Optional, Inject, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation, Output, ViewChild, ContentChildren, Host, Self, InjectionToken, TemplateRef, ContentChild, QueryList, NgModule } from '@angular/core';\nimport * as i1 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i2 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport * as i6 from '@angular/cdk/a11y';\nimport { FocusKeyManager, A11yModule } from '@angular/cdk/a11y';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW } from '@angular/cdk/keycodes';\nimport { fromEvent, Subscription, animationFrameScheduler, asapScheduler, Subject, of, merge } from 'rxjs';\nimport { takeUntil, auditTime, startWith, first, filter, delay } from 'rxjs/operators';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4$1 from 'ng-zorro-antd/menu';\nimport * as i5 from 'ng-zorro-antd/dropdown';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport * as i2$1 from 'ng-zorro-antd/cdk/resize-observer';\nimport * as i3 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { __decorate } from 'tslib';\nimport { InputBoolean, wrapIntoObservable } from 'ng-zorro-antd/core/util';\nimport * as i1$2 from '@angular/router';\nimport { NavigationEnd } from '@angular/router';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i1$3 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { PREFIX } from 'ng-zorro-antd/core/logger';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTabAddButtonComponent {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        this.addIcon = 'plus';\n        this.element = this.elementRef.nativeElement;\n    }\n    getElementWidth() {\n        return this.element?.offsetWidth || 0;\n    }\n    getElementHeight() {\n        return this.element?.offsetHeight || 0;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabAddButtonComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.10\", type: NzTabAddButtonComponent, selector: \"nz-tab-add-button, button[nz-tab-add-button]\", inputs: { addIcon: \"addIcon\" }, host: { attributes: { \"aria-label\": \"Add tab\", \"type\": \"button\" }, classAttribute: \"ant-tabs-nav-add\" }, ngImport: i0, template: `\n    <ng-container *nzStringTemplateOutlet=\"addIcon; let icon\">\n      <span nz-icon [nzType]=\"icon\" nzTheme=\"outline\"></span>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { kind: \"directive\", type: i2.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabAddButtonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-tab-add-button, button[nz-tab-add-button]',\n                    template: `\n    <ng-container *nzStringTemplateOutlet=\"addIcon; let icon\">\n      <span nz-icon [nzType]=\"icon\" nzTheme=\"outline\"></span>\n    </ng-container>\n  `,\n                    host: {\n                        class: 'ant-tabs-nav-add',\n                        'aria-label': 'Add tab',\n                        type: 'button'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { addIcon: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTabsInkBarDirective {\n    get _animated() {\n        return this.animationMode !== 'NoopAnimations' && this.animated;\n    }\n    constructor(elementRef, ngZone, animationMode) {\n        this.elementRef = elementRef;\n        this.ngZone = ngZone;\n        this.animationMode = animationMode;\n        this.position = 'horizontal';\n        this.animated = true;\n    }\n    alignToElement(element) {\n        this.ngZone.runOutsideAngular(() => {\n            reqAnimFrame(() => this.setStyles(element));\n        });\n    }\n    setStyles(element) {\n        const inkBar = this.elementRef.nativeElement;\n        if (this.position === 'horizontal') {\n            inkBar.style.top = '';\n            inkBar.style.height = '';\n            inkBar.style.left = this.getLeftPosition(element);\n            inkBar.style.width = this.getElementWidth(element);\n        }\n        else {\n            inkBar.style.left = '';\n            inkBar.style.width = '';\n            inkBar.style.top = this.getTopPosition(element);\n            inkBar.style.height = this.getElementHeight(element);\n        }\n    }\n    getLeftPosition(element) {\n        return element ? `${element.offsetLeft || 0}px` : '0';\n    }\n    getElementWidth(element) {\n        return element ? `${element.offsetWidth || 0}px` : '0';\n    }\n    getTopPosition(element) {\n        return element ? `${element.offsetTop || 0}px` : '0';\n    }\n    getElementHeight(element) {\n        return element ? `${element.offsetHeight || 0}px` : '0';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabsInkBarDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.10\", type: NzTabsInkBarDirective, selector: \"nz-tabs-ink-bar, [nz-tabs-ink-bar]\", inputs: { position: \"position\", animated: \"animated\" }, host: { properties: { \"class.ant-tabs-ink-bar-animated\": \"_animated\" }, classAttribute: \"ant-tabs-ink-bar\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabsInkBarDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'nz-tabs-ink-bar, [nz-tabs-ink-bar]',\n                    host: {\n                        class: 'ant-tabs-ink-bar',\n                        '[class.ant-tabs-ink-bar-animated]': '_animated'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { position: [{\n                type: Input\n            }], animated: [{\n                type: Input\n            }] } });\n\nclass NzTabNavItemDirective {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        this.disabled = false;\n        this.active = false;\n        this.el = elementRef.nativeElement;\n        this.parentElement = this.el.parentElement;\n    }\n    focus() {\n        this.el.focus();\n    }\n    get width() {\n        return this.parentElement.offsetWidth;\n    }\n    get height() {\n        return this.parentElement.offsetHeight;\n    }\n    get left() {\n        return this.parentElement.offsetLeft;\n    }\n    get top() {\n        return this.parentElement.offsetTop;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabNavItemDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.10\", type: NzTabNavItemDirective, selector: \"[nzTabNavItem]\", inputs: { disabled: \"disabled\", tab: \"tab\", active: \"active\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabNavItemDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[nzTabNavItem]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], tab: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTabNavOperationComponent {\n    constructor(cdr, elementRef) {\n        this.cdr = cdr;\n        this.elementRef = elementRef;\n        this.items = [];\n        this.addable = false;\n        this.addIcon = 'plus';\n        this.addClicked = new EventEmitter();\n        this.selected = new EventEmitter();\n        this.closeAnimationWaitTimeoutId = -1;\n        this.menuOpened = false;\n        this.element = this.elementRef.nativeElement;\n    }\n    onSelect(item) {\n        if (!item.disabled) {\n            // ignore nzCanDeactivate\n            item.tab.nzClick.emit();\n            this.selected.emit(item);\n        }\n    }\n    onContextmenu(item, e) {\n        if (!item.disabled) {\n            item.tab.nzContextmenu.emit(e);\n        }\n    }\n    showItems() {\n        clearTimeout(this.closeAnimationWaitTimeoutId);\n        this.menuOpened = true;\n        this.cdr.markForCheck();\n    }\n    menuVisChange(visible) {\n        if (!visible) {\n            this.closeAnimationWaitTimeoutId = setTimeout(() => {\n                this.menuOpened = false;\n                this.cdr.markForCheck();\n            }, 150);\n        }\n    }\n    getElementWidth() {\n        return this.element?.offsetWidth || 0;\n    }\n    getElementHeight() {\n        return this.element?.offsetHeight || 0;\n    }\n    ngOnDestroy() {\n        clearTimeout(this.closeAnimationWaitTimeoutId);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabNavOperationComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.10\", type: NzTabNavOperationComponent, selector: \"nz-tab-nav-operation\", inputs: { items: \"items\", addable: \"addable\", addIcon: \"addIcon\" }, outputs: { addClicked: \"addClicked\", selected: \"selected\" }, host: { properties: { \"class.ant-tabs-nav-operations-hidden\": \"items.length === 0\" }, classAttribute: \"ant-tabs-nav-operations\" }, exportAs: [\"nzTabNavOperation\"], ngImport: i0, template: `\n    <button\n      nz-dropdown\n      class=\"ant-tabs-nav-more\"\n      type=\"button\"\n      tabindex=\"-1\"\n      aria-hidden=\"true\"\n      nzOverlayClassName=\"nz-tabs-dropdown\"\n      #dropdownTrigger=\"nzDropdown\"\n      [nzDropdownMenu]=\"menu\"\n      [nzOverlayStyle]=\"{ minWidth: '46px' }\"\n      [nzMatchWidthElement]=\"null\"\n      (nzVisibleChange)=\"menuVisChange($event)\"\n      (mouseenter)=\"showItems()\"\n    >\n      <span nz-icon nzType=\"ellipsis\"></span>\n    </button>\n    <nz-dropdown-menu #menu=\"nzDropdownMenu\">\n      <ul nz-menu *ngIf=\"menuOpened\">\n        <li\n          nz-menu-item\n          *ngFor=\"let item of items\"\n          class=\"ant-tabs-dropdown-menu-item\"\n          [class.ant-tabs-dropdown-menu-item-disabled]=\"item.disabled\"\n          [nzSelected]=\"item.active\"\n          [nzDisabled]=\"item.disabled\"\n          (click)=\"onSelect(item)\"\n          (contextmenu)=\"onContextmenu(item, $event)\"\n        >\n          <ng-container *nzStringTemplateOutlet=\"item.tab.label; context: { visible: false }\">\n            {{ item.tab.label }}\n          </ng-container>\n        </li>\n      </ul>\n    </nz-dropdown-menu>\n    <button *ngIf=\"addable\" nz-tab-add-button [addIcon]=\"addIcon\" (click)=\"addClicked.emit()\"></button>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { kind: \"directive\", type: i2.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }, { kind: \"directive\", type: i4$1.NzMenuDirective, selector: \"[nz-menu]\", inputs: [\"nzInlineIndent\", \"nzTheme\", \"nzMode\", \"nzInlineCollapsed\", \"nzSelectable\"], outputs: [\"nzClick\"], exportAs: [\"nzMenu\"] }, { kind: \"component\", type: i4$1.NzMenuItemComponent, selector: \"[nz-menu-item]\", inputs: [\"nzPaddingLeft\", \"nzDisabled\", \"nzSelected\", \"nzDanger\", \"nzMatchRouterExact\", \"nzMatchRouter\"], exportAs: [\"nzMenuItem\"] }, { kind: \"directive\", type: i5.NzDropDownDirective, selector: \"[nz-dropdown]\", inputs: [\"nzDropdownMenu\", \"nzTrigger\", \"nzMatchWidthElement\", \"nzBackdrop\", \"nzClickHide\", \"nzDisabled\", \"nzVisible\", \"nzOverlayClassName\", \"nzOverlayStyle\", \"nzPlacement\"], outputs: [\"nzVisibleChange\"], exportAs: [\"nzDropdown\"] }, { kind: \"component\", type: i5.NzDropdownMenuComponent, selector: \"nz-dropdown-menu\", exportAs: [\"nzDropdownMenu\"] }, { kind: \"component\", type: NzTabAddButtonComponent, selector: \"nz-tab-add-button, button[nz-tab-add-button]\", inputs: [\"addIcon\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabNavOperationComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-tab-nav-operation',\n                    exportAs: 'nzTabNavOperation',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <button\n      nz-dropdown\n      class=\"ant-tabs-nav-more\"\n      type=\"button\"\n      tabindex=\"-1\"\n      aria-hidden=\"true\"\n      nzOverlayClassName=\"nz-tabs-dropdown\"\n      #dropdownTrigger=\"nzDropdown\"\n      [nzDropdownMenu]=\"menu\"\n      [nzOverlayStyle]=\"{ minWidth: '46px' }\"\n      [nzMatchWidthElement]=\"null\"\n      (nzVisibleChange)=\"menuVisChange($event)\"\n      (mouseenter)=\"showItems()\"\n    >\n      <span nz-icon nzType=\"ellipsis\"></span>\n    </button>\n    <nz-dropdown-menu #menu=\"nzDropdownMenu\">\n      <ul nz-menu *ngIf=\"menuOpened\">\n        <li\n          nz-menu-item\n          *ngFor=\"let item of items\"\n          class=\"ant-tabs-dropdown-menu-item\"\n          [class.ant-tabs-dropdown-menu-item-disabled]=\"item.disabled\"\n          [nzSelected]=\"item.active\"\n          [nzDisabled]=\"item.disabled\"\n          (click)=\"onSelect(item)\"\n          (contextmenu)=\"onContextmenu(item, $event)\"\n        >\n          <ng-container *nzStringTemplateOutlet=\"item.tab.label; context: { visible: false }\">\n            {{ item.tab.label }}\n          </ng-container>\n        </li>\n      </ul>\n    </nz-dropdown-menu>\n    <button *ngIf=\"addable\" nz-tab-add-button [addIcon]=\"addIcon\" (click)=\"addClicked.emit()\"></button>\n  `,\n                    host: {\n                        class: 'ant-tabs-nav-operations',\n                        '[class.ant-tabs-nav-operations-hidden]': 'items.length === 0'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { items: [{\n                type: Input\n            }], addable: [{\n                type: Input\n            }], addIcon: [{\n                type: Input\n            }], addClicked: [{\n                type: Output\n            }], selected: [{\n                type: Output\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst MIN_SWIPE_DISTANCE = 0.1;\nconst STOP_SWIPE_DISTANCE = 0.01;\nconst REFRESH_INTERVAL = 20;\nconst SPEED_OFF_MULTIPLE = 0.995 ** REFRESH_INTERVAL;\nclass NzTabScrollListDirective {\n    constructor(ngZone, elementRef) {\n        this.ngZone = ngZone;\n        this.elementRef = elementRef;\n        this.lastWheelDirection = null;\n        this.lastWheelTimestamp = 0;\n        this.lastTimestamp = 0;\n        this.lastTimeDiff = 0;\n        this.lastMixedWheel = 0;\n        this.lastWheelPrevent = false;\n        this.touchPosition = null;\n        this.lastOffset = null;\n        this.motion = -1;\n        this.unsubscribe = () => void 0;\n        this.offsetChange = new EventEmitter();\n        this.tabScroll = new EventEmitter();\n        this.onTouchEnd = (e) => {\n            if (!this.touchPosition) {\n                return;\n            }\n            const lastOffset = this.lastOffset;\n            const lastTimeDiff = this.lastTimeDiff;\n            this.lastOffset = this.touchPosition = null;\n            if (lastOffset) {\n                const distanceX = lastOffset.x / lastTimeDiff;\n                const distanceY = lastOffset.y / lastTimeDiff;\n                const absX = Math.abs(distanceX);\n                const absY = Math.abs(distanceY);\n                // Skip swipe if low distance\n                if (Math.max(absX, absY) < MIN_SWIPE_DISTANCE) {\n                    return;\n                }\n                let currentX = distanceX;\n                let currentY = distanceY;\n                this.motion = window.setInterval(() => {\n                    if (Math.abs(currentX) < STOP_SWIPE_DISTANCE && Math.abs(currentY) < STOP_SWIPE_DISTANCE) {\n                        window.clearInterval(this.motion);\n                        return;\n                    }\n                    currentX *= SPEED_OFF_MULTIPLE;\n                    currentY *= SPEED_OFF_MULTIPLE;\n                    this.onOffset(currentX * REFRESH_INTERVAL, currentY * REFRESH_INTERVAL, e);\n                }, REFRESH_INTERVAL);\n            }\n        };\n        this.onTouchMove = (e) => {\n            if (!this.touchPosition) {\n                return;\n            }\n            e.preventDefault();\n            const { screenX, screenY } = e.touches[0];\n            const offsetX = screenX - this.touchPosition.x;\n            const offsetY = screenY - this.touchPosition.y;\n            this.onOffset(offsetX, offsetY, e);\n            const now = Date.now();\n            this.lastTimeDiff = now - this.lastTimestamp;\n            this.lastTimestamp = now;\n            this.lastOffset = { x: offsetX, y: offsetY };\n            this.touchPosition = { x: screenX, y: screenY };\n        };\n        this.onTouchStart = (e) => {\n            const { screenX, screenY } = e.touches[0];\n            this.touchPosition = { x: screenX, y: screenY };\n            window.clearInterval(this.motion);\n        };\n        this.onWheel = (e) => {\n            const { deltaX, deltaY } = e;\n            let mixed;\n            const absX = Math.abs(deltaX);\n            const absY = Math.abs(deltaY);\n            if (absX === absY) {\n                mixed = this.lastWheelDirection === 'x' ? deltaX : deltaY;\n            }\n            else if (absX > absY) {\n                mixed = deltaX;\n                this.lastWheelDirection = 'x';\n            }\n            else {\n                mixed = deltaY;\n                this.lastWheelDirection = 'y';\n            }\n            // Optimize mac touch scroll\n            const now = Date.now();\n            const absMixed = Math.abs(mixed);\n            if (now - this.lastWheelTimestamp > 100 || absMixed - this.lastMixedWheel > 10) {\n                this.lastWheelPrevent = false;\n            }\n            this.onOffset(-mixed, -mixed, e);\n            if (e.defaultPrevented || this.lastWheelPrevent) {\n                this.lastWheelPrevent = true;\n            }\n            this.lastWheelTimestamp = now;\n            this.lastMixedWheel = absMixed;\n        };\n    }\n    ngOnInit() {\n        this.unsubscribe = this.ngZone.runOutsideAngular(() => {\n            const el = this.elementRef.nativeElement;\n            const wheel$ = fromEvent(el, 'wheel');\n            const touchstart$ = fromEvent(el, 'touchstart');\n            const touchmove$ = fromEvent(el, 'touchmove');\n            const touchend$ = fromEvent(el, 'touchend');\n            const subscription = new Subscription();\n            subscription.add(this.subscribeWrap('wheel', wheel$, this.onWheel));\n            subscription.add(this.subscribeWrap('touchstart', touchstart$, this.onTouchStart));\n            subscription.add(this.subscribeWrap('touchmove', touchmove$, this.onTouchMove));\n            subscription.add(this.subscribeWrap('touchend', touchend$, this.onTouchEnd));\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n    }\n    subscribeWrap(type, observable, handler) {\n        return observable.subscribe(event => {\n            this.tabScroll.emit({\n                type,\n                event\n            });\n            if (!event.defaultPrevented) {\n                handler(event);\n            }\n        });\n    }\n    onOffset(x, y, event) {\n        this.ngZone.run(() => {\n            this.offsetChange.emit({\n                x,\n                y,\n                event\n            });\n        });\n    }\n    ngOnDestroy() {\n        this.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabScrollListDirective, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.10\", type: NzTabScrollListDirective, selector: \"[nzTabScrollList]\", outputs: { offsetChange: \"offsetChange\", tabScroll: \"tabScroll\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabScrollListDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[nzTabScrollList]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ElementRef }]; }, propDecorators: { offsetChange: [{\n                type: Output\n            }], tabScroll: [{\n                type: Output\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst RESIZE_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\nconst CSS_TRANSFORM_TIME = 150;\nclass NzTabNavBarComponent {\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n        const newValue = coerceNumberProperty(value);\n        if (this._selectedIndex !== newValue) {\n            this._selectedIndex = value;\n            this.selectedIndexChanged = true;\n            if (this.keyManager) {\n                this.keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this.keyManager ? this.keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this.isValidIndex(value) || this.focusIndex === value || !this.keyManager) {\n            return;\n        }\n        this.keyManager.setActiveItem(value);\n    }\n    get showAddButton() {\n        return this.hiddenItems.length === 0 && this.addable;\n    }\n    constructor(cdr, ngZone, viewportRuler, nzResizeObserver, dir) {\n        this.cdr = cdr;\n        this.ngZone = ngZone;\n        this.viewportRuler = viewportRuler;\n        this.nzResizeObserver = nzResizeObserver;\n        this.dir = dir;\n        this.indexFocused = new EventEmitter();\n        this.selectFocusedIndex = new EventEmitter();\n        this.addClicked = new EventEmitter();\n        this.tabScroll = new EventEmitter();\n        this.position = 'horizontal';\n        this.addable = false;\n        this.hideBar = false;\n        this.addIcon = 'plus';\n        this.inkBarAnimated = true;\n        this.translate = null;\n        this.transformX = 0;\n        this.transformY = 0;\n        this.pingLeft = false;\n        this.pingRight = false;\n        this.pingTop = false;\n        this.pingBottom = false;\n        this.hiddenItems = [];\n        this.destroy$ = new Subject();\n        this._selectedIndex = 0;\n        this.wrapperWidth = 0;\n        this.wrapperHeight = 0;\n        this.scrollListWidth = 0;\n        this.scrollListHeight = 0;\n        this.operationWidth = 0;\n        this.operationHeight = 0;\n        this.addButtonWidth = 0;\n        this.addButtonHeight = 0;\n        this.selectedIndexChanged = false;\n        this.lockAnimationTimeoutId = -1;\n        this.cssTransformTimeWaitingId = -1;\n    }\n    ngAfterViewInit() {\n        const dirChange = this.dir ? this.dir.change.asObservable() : of(null);\n        const resize = this.viewportRuler.change(150);\n        const realign = () => {\n            this.updateScrollListPosition();\n            this.alignInkBarToSelectedTab();\n        };\n        this.keyManager = new FocusKeyManager(this.items)\n            .withHorizontalOrientation(this.getLayoutDirection())\n            .withWrap();\n        this.keyManager.updateActiveItem(this.selectedIndex);\n        reqAnimFrame(realign);\n        merge(this.nzResizeObserver.observe(this.navWarpRef), this.nzResizeObserver.observe(this.navListRef))\n            .pipe(takeUntil(this.destroy$), auditTime(16, RESIZE_SCHEDULER))\n            .subscribe(() => {\n            realign();\n        });\n        merge(dirChange, resize, this.items.changes)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n            Promise.resolve().then(realign);\n            this.keyManager.withHorizontalOrientation(this.getLayoutDirection());\n        });\n        this.keyManager.change.pipe(takeUntil(this.destroy$)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this.setTabFocus(newFocusIndex);\n            this.scrollToTab(this.keyManager.activeItem);\n        });\n    }\n    ngAfterContentChecked() {\n        if (this.selectedIndexChanged) {\n            this.updateScrollListPosition();\n            this.alignInkBarToSelectedTab();\n            this.selectedIndexChanged = false;\n            this.cdr.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this.lockAnimationTimeoutId);\n        clearTimeout(this.cssTransformTimeWaitingId);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    onSelectedFromMenu(tab) {\n        const tabIndex = this.items.toArray().findIndex(e => e === tab);\n        if (tabIndex !== -1) {\n            this.keyManager.updateActiveItem(tabIndex);\n            if (this.focusIndex !== this.selectedIndex) {\n                this.selectFocusedIndex.emit(this.focusIndex);\n                this.scrollToTab(tab);\n            }\n        }\n    }\n    onOffsetChange(e) {\n        if (this.position === 'horizontal') {\n            if (this.lockAnimationTimeoutId === -1) {\n                if (this.transformX >= 0 && e.x > 0) {\n                    return;\n                }\n                if (this.transformX <= this.wrapperWidth - this.scrollListWidth && e.x < 0) {\n                    return;\n                }\n            }\n            e.event.preventDefault();\n            this.transformX = this.clampTransformX(this.transformX + e.x);\n            this.setTransform(this.transformX, 0);\n        }\n        else {\n            if (this.lockAnimationTimeoutId === -1) {\n                if (this.transformY >= 0 && e.y > 0) {\n                    return;\n                }\n                if (this.transformY <= this.wrapperHeight - this.scrollListHeight && e.y < 0) {\n                    return;\n                }\n            }\n            e.event.preventDefault();\n            this.transformY = this.clampTransformY(this.transformY + e.y);\n            this.setTransform(0, this.transformY);\n        }\n        this.lockAnimation();\n        this.setVisibleRange();\n        this.setPingStatus();\n    }\n    handleKeydown(event) {\n        const inNavigationList = this.navWarpRef.nativeElement.contains(event.target);\n        if (hasModifierKey(event) || !inNavigationList) {\n            return;\n        }\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n            case UP_ARROW:\n            case RIGHT_ARROW:\n            case DOWN_ARROW:\n                this.lockAnimation();\n                this.keyManager.onKeydown(event);\n                break;\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                }\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n    isValidIndex(index) {\n        if (!this.items) {\n            return true;\n        }\n        const tab = this.items ? this.items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    scrollToTab(tab) {\n        if (!this.items.find(e => e === tab)) {\n            return;\n        }\n        const tabs = this.items.toArray();\n        if (this.position === 'horizontal') {\n            let newTransform = this.transformX;\n            if (this.getLayoutDirection() === 'rtl') {\n                const right = tabs[0].left + tabs[0].width - tab.left - tab.width;\n                if (right < this.transformX) {\n                    newTransform = right;\n                }\n                else if (right + tab.width > this.transformX + this.wrapperWidth) {\n                    newTransform = right + tab.width - this.wrapperWidth;\n                }\n            }\n            else if (tab.left < -this.transformX) {\n                newTransform = -tab.left;\n            }\n            else if (tab.left + tab.width > -this.transformX + this.wrapperWidth) {\n                newTransform = -(tab.left + tab.width - this.wrapperWidth);\n            }\n            this.transformX = newTransform;\n            this.transformY = 0;\n            this.setTransform(newTransform, 0);\n        }\n        else {\n            let newTransform = this.transformY;\n            if (tab.top < -this.transformY) {\n                newTransform = -tab.top;\n            }\n            else if (tab.top + tab.height > -this.transformY + this.wrapperHeight) {\n                newTransform = -(tab.top + tab.height - this.wrapperHeight);\n            }\n            this.transformY = newTransform;\n            this.transformX = 0;\n            this.setTransform(0, newTransform);\n        }\n        clearTimeout(this.cssTransformTimeWaitingId);\n        this.cssTransformTimeWaitingId = setTimeout(() => {\n            this.setVisibleRange();\n        }, CSS_TRANSFORM_TIME);\n    }\n    lockAnimation() {\n        if (this.lockAnimationTimeoutId === -1) {\n            this.ngZone.runOutsideAngular(() => {\n                this.navListRef.nativeElement.style.transition = 'none';\n                this.lockAnimationTimeoutId = setTimeout(() => {\n                    this.navListRef.nativeElement.style.transition = '';\n                    this.lockAnimationTimeoutId = -1;\n                }, CSS_TRANSFORM_TIME);\n            });\n        }\n    }\n    setTransform(x, y) {\n        this.navListRef.nativeElement.style.transform = `translate(${x}px, ${y}px)`;\n    }\n    clampTransformX(transform) {\n        const scrollWidth = this.wrapperWidth - this.scrollListWidth;\n        if (this.getLayoutDirection() === 'rtl') {\n            return Math.max(Math.min(scrollWidth, transform), 0);\n        }\n        else {\n            return Math.min(Math.max(scrollWidth, transform), 0);\n        }\n    }\n    clampTransformY(transform) {\n        return Math.min(Math.max(this.wrapperHeight - this.scrollListHeight, transform), 0);\n    }\n    updateScrollListPosition() {\n        this.resetSizes();\n        this.transformX = this.clampTransformX(this.transformX);\n        this.transformY = this.clampTransformY(this.transformY);\n        this.setVisibleRange();\n        this.setPingStatus();\n        if (this.keyManager) {\n            this.keyManager.updateActiveItem(this.keyManager.activeItemIndex);\n            if (this.keyManager.activeItem) {\n                this.scrollToTab(this.keyManager.activeItem);\n            }\n        }\n    }\n    resetSizes() {\n        this.addButtonWidth = this.addBtnRef ? this.addBtnRef.getElementWidth() : 0;\n        this.addButtonHeight = this.addBtnRef ? this.addBtnRef.getElementHeight() : 0;\n        this.operationWidth = this.operationRef.getElementWidth();\n        this.operationHeight = this.operationRef.getElementHeight();\n        this.wrapperWidth = this.navWarpRef.nativeElement.offsetWidth || 0;\n        this.wrapperHeight = this.navWarpRef.nativeElement.offsetHeight || 0;\n        this.scrollListHeight = this.navListRef.nativeElement.offsetHeight || 0;\n        this.scrollListWidth = this.navListRef.nativeElement.offsetWidth || 0;\n    }\n    alignInkBarToSelectedTab() {\n        const selectedItem = this.items && this.items.length ? this.items.toArray()[this.selectedIndex] : null;\n        const selectedItemElement = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedItemElement) {\n            /**\n             * .ant-tabs-nav-list - Target offset parent element\n             *   └──.ant-tabs-tab\n             *        └──.ant-tabs-tab-btn - Currently focused element\n             */\n            this.inkBar.alignToElement(selectedItemElement.parentElement);\n        }\n    }\n    setPingStatus() {\n        const ping = {\n            top: false,\n            right: false,\n            bottom: false,\n            left: false\n        };\n        const navWarp = this.navWarpRef.nativeElement;\n        if (this.position === 'horizontal') {\n            if (this.getLayoutDirection() === 'rtl') {\n                ping.right = this.transformX > 0;\n                ping.left = this.transformX + this.wrapperWidth < this.scrollListWidth;\n            }\n            else {\n                ping.left = this.transformX < 0;\n                ping.right = -this.transformX + this.wrapperWidth < this.scrollListWidth;\n            }\n        }\n        else {\n            ping.top = this.transformY < 0;\n            ping.bottom = -this.transformY + this.wrapperHeight < this.scrollListHeight;\n        }\n        Object.keys(ping).forEach(pos => {\n            const className = `ant-tabs-nav-wrap-ping-${pos}`;\n            if (ping[pos]) {\n                navWarp.classList.add(className);\n            }\n            else {\n                navWarp.classList.remove(className);\n            }\n        });\n    }\n    setVisibleRange() {\n        let unit;\n        let position;\n        let transformSize;\n        let basicSize;\n        let tabContentSize;\n        let addSize;\n        const tabs = this.items.toArray();\n        const DEFAULT_SIZE = { width: 0, height: 0, left: 0, top: 0, right: 0 };\n        const getOffset = (index) => {\n            let offset;\n            const size = tabs[index] || DEFAULT_SIZE;\n            if (position === 'right') {\n                offset = tabs[0].left + tabs[0].width - tabs[index].left - tabs[index].width;\n            }\n            else {\n                offset = size[position];\n            }\n            return offset;\n        };\n        if (this.position === 'horizontal') {\n            unit = 'width';\n            basicSize = this.wrapperWidth;\n            tabContentSize = this.scrollListWidth - (this.hiddenItems.length ? this.operationWidth : 0);\n            addSize = this.addButtonWidth;\n            transformSize = Math.abs(this.transformX);\n            if (this.getLayoutDirection() === 'rtl') {\n                position = 'right';\n                this.pingRight = this.transformX > 0;\n                this.pingLeft = this.transformX + this.wrapperWidth < this.scrollListWidth;\n            }\n            else {\n                this.pingLeft = this.transformX < 0;\n                this.pingRight = -this.transformX + this.wrapperWidth < this.scrollListWidth;\n                position = 'left';\n            }\n        }\n        else {\n            unit = 'height';\n            basicSize = this.wrapperHeight;\n            tabContentSize = this.scrollListHeight - (this.hiddenItems.length ? this.operationHeight : 0);\n            addSize = this.addButtonHeight;\n            position = 'top';\n            transformSize = -this.transformY;\n            this.pingTop = this.transformY < 0;\n            this.pingBottom = -this.transformY + this.wrapperHeight < this.scrollListHeight;\n        }\n        let mergedBasicSize = basicSize;\n        if (tabContentSize + addSize > basicSize) {\n            mergedBasicSize = basicSize - addSize;\n        }\n        if (!tabs.length) {\n            this.hiddenItems = [];\n            this.cdr.markForCheck();\n            return;\n        }\n        const len = tabs.length;\n        let endIndex = len;\n        for (let i = 0; i < len; i += 1) {\n            const offset = getOffset(i);\n            const size = tabs[i] || DEFAULT_SIZE;\n            if (offset + size[unit] > transformSize + mergedBasicSize) {\n                endIndex = i - 1;\n                break;\n            }\n        }\n        let startIndex = 0;\n        for (let i = len - 1; i >= 0; i -= 1) {\n            const offset = getOffset(i);\n            if (offset < transformSize) {\n                startIndex = i + 1;\n                break;\n            }\n        }\n        const startHiddenTabs = tabs.slice(0, startIndex);\n        const endHiddenTabs = tabs.slice(endIndex + 1);\n        this.hiddenItems = [...startHiddenTabs, ...endHiddenTabs];\n        this.cdr.markForCheck();\n    }\n    getLayoutDirection() {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    setTabFocus(_tabIndex) { }\n    ngOnChanges(changes) {\n        const { position } = changes;\n        // The first will be aligning in ngAfterViewInit\n        if (position && !position.isFirstChange()) {\n            this.alignInkBarToSelectedTab();\n            this.lockAnimation();\n            this.updateScrollListPosition();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabNavBarComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i1$1.ViewportRuler }, { token: i2$1.NzResizeObserver }, { token: i3.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.10\", type: NzTabNavBarComponent, selector: \"nz-tabs-nav\", inputs: { position: \"position\", addable: \"addable\", hideBar: \"hideBar\", addIcon: \"addIcon\", inkBarAnimated: \"inkBarAnimated\", extraTemplate: \"extraTemplate\", selectedIndex: \"selectedIndex\" }, outputs: { indexFocused: \"indexFocused\", selectFocusedIndex: \"selectFocusedIndex\", addClicked: \"addClicked\", tabScroll: \"tabScroll\" }, host: { attributes: { \"role\": \"tablist\" }, listeners: { \"keydown\": \"handleKeydown($event)\" }, classAttribute: \"ant-tabs-nav\" }, queries: [{ propertyName: \"items\", predicate: NzTabNavItemDirective, descendants: true }], viewQueries: [{ propertyName: \"navWarpRef\", first: true, predicate: [\"navWarp\"], descendants: true, static: true }, { propertyName: \"navListRef\", first: true, predicate: [\"navList\"], descendants: true, static: true }, { propertyName: \"operationRef\", first: true, predicate: NzTabNavOperationComponent, descendants: true, static: true }, { propertyName: \"addBtnRef\", first: true, predicate: NzTabAddButtonComponent, descendants: true }, { propertyName: \"inkBar\", first: true, predicate: NzTabsInkBarDirective, descendants: true, static: true }], exportAs: [\"nzTabsNav\"], usesOnChanges: true, ngImport: i0, template: `\n    <div\n      class=\"ant-tabs-nav-wrap\"\n      [class.ant-tabs-nav-wrap-ping-left]=\"pingLeft\"\n      [class.ant-tabs-nav-wrap-ping-right]=\"pingRight\"\n      [class.ant-tabs-nav-wrap-ping-top]=\"pingTop\"\n      [class.ant-tabs-nav-wrap-ping-bottom]=\"pingBottom\"\n      #navWarp\n    >\n      <div\n        class=\"ant-tabs-nav-list\"\n        #navList\n        nzTabScrollList\n        (offsetChange)=\"onOffsetChange($event)\"\n        (tabScroll)=\"tabScroll.emit($event)\"\n      >\n        <ng-content></ng-content>\n        <button *ngIf=\"showAddButton\" nz-tab-add-button [addIcon]=\"addIcon\" (click)=\"addClicked.emit()\"></button>\n        <div nz-tabs-ink-bar [hidden]=\"hideBar\" [position]=\"position\" [animated]=\"inkBarAnimated\"></div>\n      </div>\n    </div>\n    <nz-tab-nav-operation\n      (addClicked)=\"addClicked.emit()\"\n      (selected)=\"onSelectedFromMenu($event)\"\n      [addIcon]=\"addIcon\"\n      [addable]=\"addable\"\n      [items]=\"hiddenItems\"\n    ></nz-tab-nav-operation>\n    <div class=\"ant-tabs-extra-content\" *ngIf=\"extraTemplate\">\n      <ng-template [ngTemplateOutlet]=\"extraTemplate\"></ng-template>\n    </div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: NzTabsInkBarDirective, selector: \"nz-tabs-ink-bar, [nz-tabs-ink-bar]\", inputs: [\"position\", \"animated\"] }, { kind: \"directive\", type: NzTabScrollListDirective, selector: \"[nzTabScrollList]\", outputs: [\"offsetChange\", \"tabScroll\"] }, { kind: \"component\", type: NzTabNavOperationComponent, selector: \"nz-tab-nav-operation\", inputs: [\"items\", \"addable\", \"addIcon\"], outputs: [\"addClicked\", \"selected\"], exportAs: [\"nzTabNavOperation\"] }, { kind: \"component\", type: NzTabAddButtonComponent, selector: \"nz-tab-add-button, button[nz-tab-add-button]\", inputs: [\"addIcon\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabNavBarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-tabs-nav',\n                    exportAs: 'nzTabsNav',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <div\n      class=\"ant-tabs-nav-wrap\"\n      [class.ant-tabs-nav-wrap-ping-left]=\"pingLeft\"\n      [class.ant-tabs-nav-wrap-ping-right]=\"pingRight\"\n      [class.ant-tabs-nav-wrap-ping-top]=\"pingTop\"\n      [class.ant-tabs-nav-wrap-ping-bottom]=\"pingBottom\"\n      #navWarp\n    >\n      <div\n        class=\"ant-tabs-nav-list\"\n        #navList\n        nzTabScrollList\n        (offsetChange)=\"onOffsetChange($event)\"\n        (tabScroll)=\"tabScroll.emit($event)\"\n      >\n        <ng-content></ng-content>\n        <button *ngIf=\"showAddButton\" nz-tab-add-button [addIcon]=\"addIcon\" (click)=\"addClicked.emit()\"></button>\n        <div nz-tabs-ink-bar [hidden]=\"hideBar\" [position]=\"position\" [animated]=\"inkBarAnimated\"></div>\n      </div>\n    </div>\n    <nz-tab-nav-operation\n      (addClicked)=\"addClicked.emit()\"\n      (selected)=\"onSelectedFromMenu($event)\"\n      [addIcon]=\"addIcon\"\n      [addable]=\"addable\"\n      [items]=\"hiddenItems\"\n    ></nz-tab-nav-operation>\n    <div class=\"ant-tabs-extra-content\" *ngIf=\"extraTemplate\">\n      <ng-template [ngTemplateOutlet]=\"extraTemplate\"></ng-template>\n    </div>\n  `,\n                    host: {\n                        role: 'tablist',\n                        class: 'ant-tabs-nav',\n                        '(keydown)': 'handleKeydown($event)'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i1$1.ViewportRuler }, { type: i2$1.NzResizeObserver }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { indexFocused: [{\n                type: Output\n            }], selectFocusedIndex: [{\n                type: Output\n            }], addClicked: [{\n                type: Output\n            }], tabScroll: [{\n                type: Output\n            }], position: [{\n                type: Input\n            }], addable: [{\n                type: Input\n            }], hideBar: [{\n                type: Input\n            }], addIcon: [{\n                type: Input\n            }], inkBarAnimated: [{\n                type: Input\n            }], extraTemplate: [{\n                type: Input\n            }], selectedIndex: [{\n                type: Input\n            }], navWarpRef: [{\n                type: ViewChild,\n                args: ['navWarp', { static: true }]\n            }], navListRef: [{\n                type: ViewChild,\n                args: ['navList', { static: true }]\n            }], operationRef: [{\n                type: ViewChild,\n                args: [NzTabNavOperationComponent, { static: true }]\n            }], addBtnRef: [{\n                type: ViewChild,\n                args: [NzTabAddButtonComponent, { static: false }]\n            }], inkBar: [{\n                type: ViewChild,\n                args: [NzTabsInkBarDirective, { static: true }]\n            }], items: [{\n                type: ContentChildren,\n                args: [NzTabNavItemDirective, { descendants: true }]\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTabBodyComponent {\n    constructor() {\n        this.content = null;\n        this.active = false;\n        this.tabPaneAnimated = true;\n        this.forceRender = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabBodyComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.10\", type: NzTabBodyComponent, selector: \"[nz-tab-body]\", inputs: { content: \"content\", active: \"active\", tabPaneAnimated: \"tabPaneAnimated\", forceRender: \"forceRender\" }, host: { properties: { \"class.ant-tabs-tabpane-active\": \"active\", \"attr.tabindex\": \"active ? 0 : -1\", \"attr.aria-hidden\": \"!active\", \"style.visibility\": \"tabPaneAnimated ? active ? null : \\\"hidden\\\" : null\", \"style.height\": \"tabPaneAnimated ? active ? null : 0 : null\", \"style.overflow-y\": \"tabPaneAnimated ? active ? null : \\\"none\\\" : null\", \"style.display\": \"!tabPaneAnimated ? active ? null : \\\"none\\\" : null\" }, classAttribute: \"ant-tabs-tabpane\" }, exportAs: [\"nzTabBody\"], ngImport: i0, template: `\n    <ng-container *ngIf=\"active || forceRender\">\n      <ng-template [ngTemplateOutlet]=\"content\"></ng-template>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i4.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabBodyComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[nz-tab-body]',\n                    exportAs: 'nzTabBody',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <ng-container *ngIf=\"active || forceRender\">\n      <ng-template [ngTemplateOutlet]=\"content\"></ng-template>\n    </ng-container>\n  `,\n                    host: {\n                        class: 'ant-tabs-tabpane',\n                        '[class.ant-tabs-tabpane-active]': 'active',\n                        '[attr.tabindex]': 'active ? 0 : -1',\n                        '[attr.aria-hidden]': '!active',\n                        '[style.visibility]': 'tabPaneAnimated ? active ? null : \"hidden\" : null',\n                        '[style.height]': 'tabPaneAnimated ? active ? null : 0 : null',\n                        '[style.overflow-y]': 'tabPaneAnimated ? active ? null : \"none\" : null',\n                        '[style.display]': '!tabPaneAnimated ? active ? null : \"none\" : null'\n                    }\n                }]\n        }], propDecorators: { content: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], tabPaneAnimated: [{\n                type: Input\n            }], forceRender: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTabCloseButtonComponent {\n    constructor() {\n        this.closeIcon = 'close';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabCloseButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.10\", type: NzTabCloseButtonComponent, selector: \"nz-tab-close-button, button[nz-tab-close-button]\", inputs: { closeIcon: \"closeIcon\" }, host: { attributes: { \"aria-label\": \"Close tab\", \"type\": \"button\" }, classAttribute: \"ant-tabs-tab-remove\" }, ngImport: i0, template: `\n    <ng-container *nzStringTemplateOutlet=\"closeIcon; let icon\">\n      <span nz-icon [nzType]=\"icon\" nzTheme=\"outline\"></span>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { kind: \"directive\", type: i2.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabCloseButtonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-tab-close-button, button[nz-tab-close-button]',\n                    template: `\n    <ng-container *nzStringTemplateOutlet=\"closeIcon; let icon\">\n      <span nz-icon [nzType]=\"icon\" nzTheme=\"outline\"></span>\n    </ng-container>\n  `,\n                    host: {\n                        class: 'ant-tabs-tab-remove',\n                        'aria-label': 'Close tab',\n                        type: 'button'\n                    }\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { closeIcon: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/**\n * Fix https://github.com/angular/angular/issues/8563\n */\nclass NzTabLinkTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabLinkTemplateDirective, deps: [{ token: i0.TemplateRef, host: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.10\", type: NzTabLinkTemplateDirective, selector: \"ng-template[nzTabLink]\", exportAs: [\"nzTabLinkTemplate\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabLinkTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[nzTabLink]',\n                    exportAs: 'nzTabLinkTemplate'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{\n                    type: Host\n                }] }]; } });\n/**\n * This component is for catching `routerLink` directive.\n */\nclass NzTabLinkDirective {\n    constructor(elementRef, routerLink) {\n        this.elementRef = elementRef;\n        this.routerLink = routerLink;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabLinkDirective, deps: [{ token: i0.ElementRef }, { token: i1$2.RouterLink, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.10\", type: NzTabLinkDirective, selector: \"a[nz-tab-link]\", exportAs: [\"nzTabLink\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabLinkDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'a[nz-tab-link]',\n                    exportAs: 'nzTabLink'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1$2.RouterLink, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }]; } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass NzTabDirective {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.10\", type: NzTabDirective, selector: \"[nz-tab]\", exportAs: [\"nzTab\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[nz-tab]',\n                    exportAs: 'nzTab'\n                }]\n        }] });\n\n/**\n * Used to provide a tab set to a tab without causing a circular dependency.\n */\nconst NZ_TAB_SET = new InjectionToken('NZ_TAB_SET');\nclass NzTabComponent {\n    get content() {\n        return this.template || this.contentTemplate;\n    }\n    get label() {\n        return this.nzTitle || this.nzTabLinkTemplateDirective?.templateRef;\n    }\n    constructor(closestTabSet) {\n        this.closestTabSet = closestTabSet;\n        this.nzTitle = '';\n        this.nzClosable = false;\n        this.nzCloseIcon = 'close';\n        this.nzDisabled = false;\n        this.nzForceRender = false;\n        this.nzSelect = new EventEmitter();\n        this.nzDeselect = new EventEmitter();\n        this.nzClick = new EventEmitter();\n        this.nzContextmenu = new EventEmitter();\n        this.template = null;\n        this.isActive = false;\n        this.position = null;\n        this.origin = null;\n        this.stateChanges = new Subject();\n    }\n    ngOnChanges(changes) {\n        const { nzTitle, nzDisabled, nzForceRender } = changes;\n        if (nzTitle || nzDisabled || nzForceRender) {\n            this.stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabComponent, deps: [{ token: NZ_TAB_SET }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.10\", type: NzTabComponent, selector: \"nz-tab\", inputs: { nzTitle: \"nzTitle\", nzClosable: \"nzClosable\", nzCloseIcon: \"nzCloseIcon\", nzDisabled: \"nzDisabled\", nzForceRender: \"nzForceRender\" }, outputs: { nzSelect: \"nzSelect\", nzDeselect: \"nzDeselect\", nzClick: \"nzClick\", nzContextmenu: \"nzContextmenu\" }, queries: [{ propertyName: \"nzTabLinkTemplateDirective\", first: true, predicate: NzTabLinkTemplateDirective, descendants: true }, { propertyName: \"template\", first: true, predicate: NzTabDirective, descendants: true, read: TemplateRef }, { propertyName: \"linkDirective\", first: true, predicate: NzTabLinkDirective, descendants: true }], viewQueries: [{ propertyName: \"contentTemplate\", first: true, predicate: [\"contentTemplate\"], descendants: true, static: true }], exportAs: [\"nzTab\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-template #tabLinkTemplate>\n      <ng-content select=\"[nz-tab-link]\"></ng-content>\n    </ng-template>\n    <ng-template #contentTemplate><ng-content></ng-content></ng-template>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\n__decorate([\n    InputBoolean()\n], NzTabComponent.prototype, \"nzClosable\", void 0);\n__decorate([\n    InputBoolean()\n], NzTabComponent.prototype, \"nzDisabled\", void 0);\n__decorate([\n    InputBoolean()\n], NzTabComponent.prototype, \"nzForceRender\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-tab',\n                    exportAs: 'nzTab',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <ng-template #tabLinkTemplate>\n      <ng-content select=\"[nz-tab-link]\"></ng-content>\n    </ng-template>\n    <ng-template #contentTemplate><ng-content></ng-content></ng-template>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NZ_TAB_SET]\n                }] }]; }, propDecorators: { nzTitle: [{\n                type: Input\n            }], nzClosable: [{\n                type: Input\n            }], nzCloseIcon: [{\n                type: Input\n            }], nzDisabled: [{\n                type: Input\n            }], nzForceRender: [{\n                type: Input\n            }], nzSelect: [{\n                type: Output\n            }], nzDeselect: [{\n                type: Output\n            }], nzClick: [{\n                type: Output\n            }], nzContextmenu: [{\n                type: Output\n            }], nzTabLinkTemplateDirective: [{\n                type: ContentChild,\n                args: [NzTabLinkTemplateDirective, { static: false }]\n            }], template: [{\n                type: ContentChild,\n                args: [NzTabDirective, { static: false, read: TemplateRef }]\n            }], linkDirective: [{\n                type: ContentChild,\n                args: [NzTabLinkDirective, { static: false }]\n            }], contentTemplate: [{\n                type: ViewChild,\n                args: ['contentTemplate', { static: true }]\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTabChangeEvent {\n}\n\nconst NZ_CONFIG_MODULE_NAME = 'tabs';\nlet nextId = 0;\nclass NzTabSetComponent {\n    get nzSelectedIndex() {\n        return this.selectedIndex;\n    }\n    set nzSelectedIndex(value) {\n        this.indexToSelect = coerceNumberProperty(value, null);\n    }\n    get position() {\n        return ['top', 'bottom'].indexOf(this.nzTabPosition) === -1 ? 'vertical' : 'horizontal';\n    }\n    get addable() {\n        return this.nzType === 'editable-card' && !this.nzHideAdd;\n    }\n    get closable() {\n        return this.nzType === 'editable-card';\n    }\n    get line() {\n        return this.nzType === 'line';\n    }\n    get inkBarAnimated() {\n        return this.line && (typeof this.nzAnimated === 'boolean' ? this.nzAnimated : this.nzAnimated.inkBar);\n    }\n    get tabPaneAnimated() {\n        return (this.position === 'horizontal' &&\n            this.line &&\n            (typeof this.nzAnimated === 'boolean' ? this.nzAnimated : this.nzAnimated.tabPane));\n    }\n    constructor(nzConfigService, ngZone, cdr, directionality, router) {\n        this.nzConfigService = nzConfigService;\n        this.ngZone = ngZone;\n        this.cdr = cdr;\n        this.directionality = directionality;\n        this.router = router;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.nzTabPosition = 'top';\n        this.nzCanDeactivate = null;\n        this.nzAddIcon = 'plus';\n        this.nzTabBarStyle = null;\n        this.nzType = 'line';\n        this.nzSize = 'default';\n        this.nzAnimated = true;\n        this.nzTabBarGutter = undefined;\n        this.nzHideAdd = false;\n        this.nzCentered = false;\n        this.nzHideAll = false;\n        this.nzLinkRouter = false;\n        this.nzLinkExact = true;\n        this.nzSelectChange = new EventEmitter(true);\n        this.nzSelectedIndexChange = new EventEmitter();\n        this.nzTabListScroll = new EventEmitter();\n        this.nzClose = new EventEmitter();\n        this.nzAdd = new EventEmitter();\n        // Pick up only direct descendants under ivy rendering engine\n        // We filter out only the tabs that belong to this tab set in `tabs`.\n        this.allTabs = new QueryList();\n        // All the direct tabs for this tab set\n        this.tabs = new QueryList();\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        this.indexToSelect = 0;\n        this.selectedIndex = null;\n        this.tabLabelSubscription = Subscription.EMPTY;\n        this.tabsSubscription = Subscription.EMPTY;\n        this.canDeactivateSubscription = Subscription.EMPTY;\n        this.tabSetId = nextId++;\n    }\n    ngOnInit() {\n        this.dir = this.directionality.value;\n        this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n        this.tabs.destroy();\n        this.tabLabelSubscription.unsubscribe();\n        this.tabsSubscription.unsubscribe();\n        this.canDeactivateSubscription.unsubscribe();\n    }\n    ngAfterContentInit() {\n        this.ngZone.runOutsideAngular(() => {\n            Promise.resolve().then(() => this.setUpRouter());\n        });\n        this.subscribeToTabLabels();\n        this.subscribeToAllTabChanges();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this.tabsSubscription = this.tabs.changes.subscribe(() => {\n            const indexToSelect = this.clampTabIndex(this.indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this.selectedIndex) {\n                const tabs = this.tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `indexToSelect` and `selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `nzSelectedIndexChange` event.\n                        this.indexToSelect = this.selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this.subscribeToTabLabels();\n            this.cdr.markForCheck();\n        });\n    }\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = (this.indexToSelect = this.clampTabIndex(this.indexToSelect));\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this.selectedIndex !== indexToSelect) {\n            const isFirstRun = this.selectedIndex == null;\n            if (!isFirstRun) {\n                this.nzSelectChange.emit(this.createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this.tabs.forEach((tab, index) => (tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.nzSelectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this.tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this.selectedIndex != null && tab.position === 0 && !tab.origin) {\n                tab.origin = indexToSelect - this.selectedIndex;\n            }\n        });\n        if (this.selectedIndex !== indexToSelect) {\n            this.selectedIndex = indexToSelect;\n            this.cdr.markForCheck();\n        }\n    }\n    onClose(index, e) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.nzClose.emit({ index });\n    }\n    onAdd() {\n        this.nzAdd.emit();\n    }\n    clampTabIndex(index) {\n        return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n    createChangeEvent(index) {\n        const event = new NzTabChangeEvent();\n        event.index = index;\n        if (this.tabs && this.tabs.length) {\n            event.tab = this.tabs.toArray()[index];\n            this.tabs.forEach((tab, i) => {\n                if (i !== index) {\n                    tab.nzDeselect.emit();\n                }\n            });\n            event.tab.nzSelect.emit();\n        }\n        return event;\n    }\n    subscribeToTabLabels() {\n        if (this.tabLabelSubscription) {\n            this.tabLabelSubscription.unsubscribe();\n        }\n        this.tabLabelSubscription = merge(...this.tabs.map(tab => tab.stateChanges)).subscribe(() => this.cdr.markForCheck());\n    }\n    subscribeToAllTabChanges() {\n        this.allTabs.changes.pipe(startWith(this.allTabs)).subscribe((tabs) => {\n            this.tabs.reset(tabs.filter(tab => tab.closestTabSet === this));\n            this.tabs.notifyOnChanges();\n        });\n    }\n    canDeactivateFun(pre, next) {\n        if (typeof this.nzCanDeactivate === 'function') {\n            const observable = wrapIntoObservable(this.nzCanDeactivate(pre, next));\n            return observable.pipe(first(), takeUntil(this.destroy$));\n        }\n        else {\n            return of(true);\n        }\n    }\n    clickNavItem(tab, index, e) {\n        if (!tab.nzDisabled) {\n            // ignore nzCanDeactivate\n            tab.nzClick.emit();\n            if (!this.isRouterLinkClickEvent(index, e)) {\n                this.setSelectedIndex(index);\n            }\n        }\n    }\n    isRouterLinkClickEvent(index, event) {\n        const target = event.target;\n        if (this.nzLinkRouter) {\n            return !!this.tabs.toArray()[index]?.linkDirective?.elementRef.nativeElement.contains(target);\n        }\n        else {\n            return false;\n        }\n    }\n    contextmenuNavItem(tab, e) {\n        if (!tab.nzDisabled) {\n            // ignore nzCanDeactivate\n            tab.nzContextmenu.emit(e);\n        }\n    }\n    setSelectedIndex(index) {\n        this.canDeactivateSubscription.unsubscribe();\n        this.canDeactivateSubscription = this.canDeactivateFun(this.selectedIndex, index).subscribe(can => {\n            if (can) {\n                this.nzSelectedIndex = index;\n                this.tabNavBarRef.focusIndex = index;\n                this.cdr.markForCheck();\n            }\n        });\n    }\n    getTabIndex(tab, index) {\n        if (tab.nzDisabled) {\n            return null;\n        }\n        return this.selectedIndex === index ? 0 : -1;\n    }\n    getTabContentId(i) {\n        return `nz-tabs-${this.tabSetId}-tab-${i}`;\n    }\n    setUpRouter() {\n        if (this.nzLinkRouter) {\n            if (!this.router) {\n                throw new Error(`${PREFIX} you should import 'RouterModule' if you want to use 'nzLinkRouter'!`);\n            }\n            this.router.events\n                .pipe(takeUntil(this.destroy$), filter(e => e instanceof NavigationEnd), startWith(true), delay(0))\n                .subscribe(() => {\n                this.updateRouterActive();\n                this.cdr.markForCheck();\n            });\n        }\n    }\n    updateRouterActive() {\n        if (this.router.navigated) {\n            const index = this.findShouldActiveTabIndex();\n            if (index !== this.selectedIndex) {\n                this.setSelectedIndex(index);\n            }\n            this.nzHideAll = index === -1;\n        }\n    }\n    findShouldActiveTabIndex() {\n        const tabs = this.tabs.toArray();\n        const isActive = this.isLinkActive(this.router);\n        return tabs.findIndex(tab => {\n            const c = tab.linkDirective;\n            return c ? isActive(c.routerLink) : false;\n        });\n    }\n    isLinkActive(router) {\n        return (link) => link\n            ? router.isActive(link.urlTree || '', {\n                paths: this.nzLinkExact ? 'exact' : 'subset',\n                queryParams: this.nzLinkExact ? 'exact' : 'subset',\n                fragment: 'ignored',\n                matrixParams: 'ignored'\n            })\n            : false;\n    }\n    getTabContentMarginValue() {\n        return -(this.nzSelectedIndex || 0) * 100;\n    }\n    getTabContentMarginLeft() {\n        if (this.tabPaneAnimated) {\n            if (this.dir !== 'rtl') {\n                return `${this.getTabContentMarginValue()}%`;\n            }\n        }\n        return '';\n    }\n    getTabContentMarginRight() {\n        if (this.tabPaneAnimated) {\n            if (this.dir === 'rtl') {\n                return `${this.getTabContentMarginValue()}%`;\n            }\n        }\n        return '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabSetComponent, deps: [{ token: i1$3.NzConfigService }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i3.Directionality, optional: true }, { token: i1$2.Router, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.10\", type: NzTabSetComponent, selector: \"nz-tabset\", inputs: { nzSelectedIndex: \"nzSelectedIndex\", nzTabPosition: \"nzTabPosition\", nzTabBarExtraContent: \"nzTabBarExtraContent\", nzCanDeactivate: \"nzCanDeactivate\", nzAddIcon: \"nzAddIcon\", nzTabBarStyle: \"nzTabBarStyle\", nzType: \"nzType\", nzSize: \"nzSize\", nzAnimated: \"nzAnimated\", nzTabBarGutter: \"nzTabBarGutter\", nzHideAdd: \"nzHideAdd\", nzCentered: \"nzCentered\", nzHideAll: \"nzHideAll\", nzLinkRouter: \"nzLinkRouter\", nzLinkExact: \"nzLinkExact\" }, outputs: { nzSelectChange: \"nzSelectChange\", nzSelectedIndexChange: \"nzSelectedIndexChange\", nzTabListScroll: \"nzTabListScroll\", nzClose: \"nzClose\", nzAdd: \"nzAdd\" }, host: { properties: { \"class.ant-tabs-card\": \"nzType === 'card' || nzType === 'editable-card'\", \"class.ant-tabs-editable\": \"nzType === 'editable-card'\", \"class.ant-tabs-editable-card\": \"nzType === 'editable-card'\", \"class.ant-tabs-centered\": \"nzCentered\", \"class.ant-tabs-rtl\": \"dir === 'rtl'\", \"class.ant-tabs-top\": \"nzTabPosition === 'top'\", \"class.ant-tabs-bottom\": \"nzTabPosition === 'bottom'\", \"class.ant-tabs-left\": \"nzTabPosition === 'left'\", \"class.ant-tabs-right\": \"nzTabPosition === 'right'\", \"class.ant-tabs-default\": \"nzSize === 'default'\", \"class.ant-tabs-small\": \"nzSize === 'small'\", \"class.ant-tabs-large\": \"nzSize === 'large'\" }, classAttribute: \"ant-tabs\" }, providers: [\n            {\n                provide: NZ_TAB_SET,\n                useExisting: NzTabSetComponent\n            }\n        ], queries: [{ propertyName: \"allTabs\", predicate: NzTabComponent, descendants: true }], viewQueries: [{ propertyName: \"tabNavBarRef\", first: true, predicate: NzTabNavBarComponent, descendants: true }], exportAs: [\"nzTabset\"], ngImport: i0, template: `\n    <nz-tabs-nav\n      *ngIf=\"tabs.length || addable\"\n      [ngStyle]=\"nzTabBarStyle\"\n      [selectedIndex]=\"nzSelectedIndex || 0\"\n      [inkBarAnimated]=\"inkBarAnimated\"\n      [addable]=\"addable\"\n      [addIcon]=\"nzAddIcon\"\n      [hideBar]=\"nzHideAll\"\n      [position]=\"position\"\n      [extraTemplate]=\"nzTabBarExtraContent\"\n      (tabScroll)=\"nzTabListScroll.emit($event)\"\n      (selectFocusedIndex)=\"setSelectedIndex($event)\"\n      (addClicked)=\"onAdd()\"\n    >\n      <div\n        class=\"ant-tabs-tab\"\n        [style.margin-right.px]=\"position === 'horizontal' ? nzTabBarGutter : null\"\n        [style.margin-bottom.px]=\"position === 'vertical' ? nzTabBarGutter : null\"\n        [class.ant-tabs-tab-active]=\"nzSelectedIndex === i\"\n        [class.ant-tabs-tab-disabled]=\"tab.nzDisabled\"\n        (click)=\"clickNavItem(tab, i, $event)\"\n        (contextmenu)=\"contextmenuNavItem(tab, $event)\"\n        *ngFor=\"let tab of tabs; let i = index\"\n      >\n        <div\n          role=\"tab\"\n          [attr.tabIndex]=\"getTabIndex(tab, i)\"\n          [attr.aria-disabled]=\"tab.nzDisabled\"\n          [attr.aria-selected]=\"nzSelectedIndex === i && !nzHideAll\"\n          [attr.aria-controls]=\"getTabContentId(i)\"\n          [disabled]=\"tab.nzDisabled\"\n          [tab]=\"tab\"\n          [active]=\"nzSelectedIndex === i\"\n          class=\"ant-tabs-tab-btn\"\n          nzTabNavItem\n          cdkMonitorElementFocus\n        >\n          <ng-container *nzStringTemplateOutlet=\"tab.label; context: { visible: true }\">{{ tab.label }}</ng-container>\n          <button\n            nz-tab-close-button\n            *ngIf=\"tab.nzClosable && closable && !tab.nzDisabled\"\n            [closeIcon]=\"tab.nzCloseIcon\"\n            (click)=\"onClose(i, $event)\"\n          ></button>\n        </div>\n      </div>\n    </nz-tabs-nav>\n    <div class=\"ant-tabs-content-holder\">\n      <div\n        class=\"ant-tabs-content\"\n        [class.ant-tabs-content-top]=\"nzTabPosition === 'top'\"\n        [class.ant-tabs-content-bottom]=\"nzTabPosition === 'bottom'\"\n        [class.ant-tabs-content-left]=\"nzTabPosition === 'left'\"\n        [class.ant-tabs-content-right]=\"nzTabPosition === 'right'\"\n        [class.ant-tabs-content-animated]=\"tabPaneAnimated\"\n        [style.margin-left]=\"getTabContentMarginLeft()\"\n        [style.margin-right]=\"getTabContentMarginRight()\"\n      >\n        <div\n          nz-tab-body\n          *ngFor=\"let tab of tabs; let i = index\"\n          [active]=\"nzSelectedIndex === i && !nzHideAll\"\n          [content]=\"tab.content\"\n          [forceRender]=\"tab.nzForceRender\"\n          [tabPaneAnimated]=\"tabPaneAnimated\"\n        ></div>\n      </div>\n    </div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i4.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }, { kind: \"directive\", type: i6.CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: [\"cdkFocusChange\"], exportAs: [\"cdkMonitorFocus\"] }, { kind: \"component\", type: NzTabNavBarComponent, selector: \"nz-tabs-nav\", inputs: [\"position\", \"addable\", \"hideBar\", \"addIcon\", \"inkBarAnimated\", \"extraTemplate\", \"selectedIndex\"], outputs: [\"indexFocused\", \"selectFocusedIndex\", \"addClicked\", \"tabScroll\"], exportAs: [\"nzTabsNav\"] }, { kind: \"directive\", type: NzTabNavItemDirective, selector: \"[nzTabNavItem]\", inputs: [\"disabled\", \"tab\", \"active\"] }, { kind: \"component\", type: NzTabCloseButtonComponent, selector: \"nz-tab-close-button, button[nz-tab-close-button]\", inputs: [\"closeIcon\"] }, { kind: \"component\", type: NzTabBodyComponent, selector: \"[nz-tab-body]\", inputs: [\"content\", \"active\", \"tabPaneAnimated\", \"forceRender\"], exportAs: [\"nzTabBody\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\n__decorate([\n    WithConfig()\n], NzTabSetComponent.prototype, \"nzType\", void 0);\n__decorate([\n    WithConfig()\n], NzTabSetComponent.prototype, \"nzSize\", void 0);\n__decorate([\n    WithConfig()\n], NzTabSetComponent.prototype, \"nzAnimated\", void 0);\n__decorate([\n    WithConfig()\n], NzTabSetComponent.prototype, \"nzTabBarGutter\", void 0);\n__decorate([\n    InputBoolean()\n], NzTabSetComponent.prototype, \"nzHideAdd\", void 0);\n__decorate([\n    InputBoolean()\n], NzTabSetComponent.prototype, \"nzCentered\", void 0);\n__decorate([\n    InputBoolean()\n], NzTabSetComponent.prototype, \"nzHideAll\", void 0);\n__decorate([\n    InputBoolean()\n], NzTabSetComponent.prototype, \"nzLinkRouter\", void 0);\n__decorate([\n    InputBoolean()\n], NzTabSetComponent.prototype, \"nzLinkExact\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabSetComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-tabset',\n                    exportAs: 'nzTabset',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    providers: [\n                        {\n                            provide: NZ_TAB_SET,\n                            useExisting: NzTabSetComponent\n                        }\n                    ],\n                    template: `\n    <nz-tabs-nav\n      *ngIf=\"tabs.length || addable\"\n      [ngStyle]=\"nzTabBarStyle\"\n      [selectedIndex]=\"nzSelectedIndex || 0\"\n      [inkBarAnimated]=\"inkBarAnimated\"\n      [addable]=\"addable\"\n      [addIcon]=\"nzAddIcon\"\n      [hideBar]=\"nzHideAll\"\n      [position]=\"position\"\n      [extraTemplate]=\"nzTabBarExtraContent\"\n      (tabScroll)=\"nzTabListScroll.emit($event)\"\n      (selectFocusedIndex)=\"setSelectedIndex($event)\"\n      (addClicked)=\"onAdd()\"\n    >\n      <div\n        class=\"ant-tabs-tab\"\n        [style.margin-right.px]=\"position === 'horizontal' ? nzTabBarGutter : null\"\n        [style.margin-bottom.px]=\"position === 'vertical' ? nzTabBarGutter : null\"\n        [class.ant-tabs-tab-active]=\"nzSelectedIndex === i\"\n        [class.ant-tabs-tab-disabled]=\"tab.nzDisabled\"\n        (click)=\"clickNavItem(tab, i, $event)\"\n        (contextmenu)=\"contextmenuNavItem(tab, $event)\"\n        *ngFor=\"let tab of tabs; let i = index\"\n      >\n        <div\n          role=\"tab\"\n          [attr.tabIndex]=\"getTabIndex(tab, i)\"\n          [attr.aria-disabled]=\"tab.nzDisabled\"\n          [attr.aria-selected]=\"nzSelectedIndex === i && !nzHideAll\"\n          [attr.aria-controls]=\"getTabContentId(i)\"\n          [disabled]=\"tab.nzDisabled\"\n          [tab]=\"tab\"\n          [active]=\"nzSelectedIndex === i\"\n          class=\"ant-tabs-tab-btn\"\n          nzTabNavItem\n          cdkMonitorElementFocus\n        >\n          <ng-container *nzStringTemplateOutlet=\"tab.label; context: { visible: true }\">{{ tab.label }}</ng-container>\n          <button\n            nz-tab-close-button\n            *ngIf=\"tab.nzClosable && closable && !tab.nzDisabled\"\n            [closeIcon]=\"tab.nzCloseIcon\"\n            (click)=\"onClose(i, $event)\"\n          ></button>\n        </div>\n      </div>\n    </nz-tabs-nav>\n    <div class=\"ant-tabs-content-holder\">\n      <div\n        class=\"ant-tabs-content\"\n        [class.ant-tabs-content-top]=\"nzTabPosition === 'top'\"\n        [class.ant-tabs-content-bottom]=\"nzTabPosition === 'bottom'\"\n        [class.ant-tabs-content-left]=\"nzTabPosition === 'left'\"\n        [class.ant-tabs-content-right]=\"nzTabPosition === 'right'\"\n        [class.ant-tabs-content-animated]=\"tabPaneAnimated\"\n        [style.margin-left]=\"getTabContentMarginLeft()\"\n        [style.margin-right]=\"getTabContentMarginRight()\"\n      >\n        <div\n          nz-tab-body\n          *ngFor=\"let tab of tabs; let i = index\"\n          [active]=\"nzSelectedIndex === i && !nzHideAll\"\n          [content]=\"tab.content\"\n          [forceRender]=\"tab.nzForceRender\"\n          [tabPaneAnimated]=\"tabPaneAnimated\"\n        ></div>\n      </div>\n    </div>\n  `,\n                    host: {\n                        class: 'ant-tabs',\n                        '[class.ant-tabs-card]': `nzType === 'card' || nzType === 'editable-card'`,\n                        '[class.ant-tabs-editable]': `nzType === 'editable-card'`,\n                        '[class.ant-tabs-editable-card]': `nzType === 'editable-card'`,\n                        '[class.ant-tabs-centered]': `nzCentered`,\n                        '[class.ant-tabs-rtl]': `dir === 'rtl'`,\n                        '[class.ant-tabs-top]': `nzTabPosition === 'top'`,\n                        '[class.ant-tabs-bottom]': `nzTabPosition === 'bottom'`,\n                        '[class.ant-tabs-left]': `nzTabPosition === 'left'`,\n                        '[class.ant-tabs-right]': `nzTabPosition === 'right'`,\n                        '[class.ant-tabs-default]': `nzSize === 'default'`,\n                        '[class.ant-tabs-small]': `nzSize === 'small'`,\n                        '[class.ant-tabs-large]': `nzSize === 'large'`\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i1$3.NzConfigService }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i1$2.Router, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { nzSelectedIndex: [{\n                type: Input\n            }], nzTabPosition: [{\n                type: Input\n            }], nzTabBarExtraContent: [{\n                type: Input\n            }], nzCanDeactivate: [{\n                type: Input\n            }], nzAddIcon: [{\n                type: Input\n            }], nzTabBarStyle: [{\n                type: Input\n            }], nzType: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }], nzAnimated: [{\n                type: Input\n            }], nzTabBarGutter: [{\n                type: Input\n            }], nzHideAdd: [{\n                type: Input\n            }], nzCentered: [{\n                type: Input\n            }], nzHideAll: [{\n                type: Input\n            }], nzLinkRouter: [{\n                type: Input\n            }], nzLinkExact: [{\n                type: Input\n            }], nzSelectChange: [{\n                type: Output\n            }], nzSelectedIndexChange: [{\n                type: Output\n            }], nzTabListScroll: [{\n                type: Output\n            }], nzClose: [{\n                type: Output\n            }], nzAdd: [{\n                type: Output\n            }], allTabs: [{\n                type: ContentChildren,\n                args: [NzTabComponent, { descendants: true }]\n            }], tabNavBarRef: [{\n                type: ViewChild,\n                args: [NzTabNavBarComponent, { static: false }]\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst DIRECTIVES = [\n    NzTabSetComponent,\n    NzTabComponent,\n    NzTabNavBarComponent,\n    NzTabNavItemDirective,\n    NzTabsInkBarDirective,\n    NzTabScrollListDirective,\n    NzTabNavOperationComponent,\n    NzTabAddButtonComponent,\n    NzTabCloseButtonComponent,\n    NzTabDirective,\n    NzTabBodyComponent,\n    NzTabLinkDirective,\n    NzTabLinkTemplateDirective\n];\nclass NzTabsModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabsModule, declarations: [NzTabSetComponent,\n            NzTabComponent,\n            NzTabNavBarComponent,\n            NzTabNavItemDirective,\n            NzTabsInkBarDirective,\n            NzTabScrollListDirective,\n            NzTabNavOperationComponent,\n            NzTabAddButtonComponent,\n            NzTabCloseButtonComponent,\n            NzTabDirective,\n            NzTabBodyComponent,\n            NzTabLinkDirective,\n            NzTabLinkTemplateDirective], imports: [BidiModule,\n            CommonModule,\n            ObserversModule,\n            NzIconModule,\n            NzOutletModule,\n            PlatformModule,\n            A11yModule,\n            CdkScrollableModule,\n            NzDropDownModule], exports: [NzTabSetComponent,\n            NzTabComponent,\n            NzTabNavBarComponent,\n            NzTabNavItemDirective,\n            NzTabsInkBarDirective,\n            NzTabScrollListDirective,\n            NzTabNavOperationComponent,\n            NzTabAddButtonComponent,\n            NzTabCloseButtonComponent,\n            NzTabDirective,\n            NzTabBodyComponent,\n            NzTabLinkDirective,\n            NzTabLinkTemplateDirective] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabsModule, imports: [BidiModule,\n            CommonModule,\n            ObserversModule,\n            NzIconModule,\n            NzOutletModule,\n            PlatformModule,\n            A11yModule,\n            CdkScrollableModule,\n            NzDropDownModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzTabsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [DIRECTIVES],\n                    exports: [DIRECTIVES],\n                    imports: [\n                        BidiModule,\n                        CommonModule,\n                        ObserversModule,\n                        NzIconModule,\n                        NzOutletModule,\n                        PlatformModule,\n                        A11yModule,\n                        CdkScrollableModule,\n                        NzDropDownModule\n                    ]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NZ_TAB_SET, NzTabChangeEvent, NzTabComponent, NzTabDirective, NzTabLinkDirective, NzTabLinkTemplateDirective, NzTabSetComponent, NzTabsModule, NzTabAddButtonComponent as ɵNzTabAddButtonComponent, NzTabBodyComponent as ɵNzTabBodyComponent, NzTabCloseButtonComponent as ɵNzTabCloseButtonComponent, NzTabNavBarComponent as ɵNzTabNavBarComponent, NzTabNavItemDirective as ɵNzTabNavItemDirective, NzTabNavOperationComponent as ɵNzTabNavOperationComponent, NzTabScrollListDirective as ɵNzTabScrollListDirective, NzTabsInkBarDirective as ɵNzTabsInkBarDirective };\n"],"x_google_ignoreList":[0]}