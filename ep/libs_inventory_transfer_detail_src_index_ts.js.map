{"version":3,"file":"libs_inventory_transfer_detail_src_index_ts.js","mappings":"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","names":["i0","tag_r4","DetailModalItemsComponent_ng_container_6_nz_tag_1_Template","ctx_r0","filteredTags","DetailModalItemsComponent","constructor","this","productName","searchTerm","nzModalData","inject","NZ_MODAL_DATA","ngOnInit","tags","data","items","split","onSearchChange","filter","tag","toLowerCase","includes","static","t","core","Xpm","selectors","inputs","standalone","features","decls","vars","consts","template","rf","ctx","$event","DetailModalItemsComponent_ng_container_6_Template","DetailModalItemsComponent_ng_template_7_Template","name","length","_r1","NzInputModule","i1","NzTagModule","i2","FormsModule","i3","NgFor","NzEmptyModule","i4","NgIf","encapsulation","ctx_r1","form","model","fields","options","_r7","ctx_r6","handlerCancel","_r9","ctx_r8","handlerSave","ctx_r5","isLoading","IComLibsSectionDetailComponent_nz_page_header_0_nz_space_6_button_2_Template","IComLibsSectionDetailComponent_nz_page_header_0_nz_space_6_button_4_Template","_r14","ctx_r13","handlerEdit","IComLibsSectionDetailComponent_nz_page_header_0_nz_space_7_ng_container_1_button_1_Template","_r17","ctx_r16","handlerRemove","ctx_r15","IComLibsSectionDetailComponent_nz_page_header_0_nz_space_7_ng_container_2_button_1_Template","IComLibsSectionDetailComponent_nz_page_header_0_nz_space_7_ng_container_1_Template","IComLibsSectionDetailComponent_nz_page_header_0_nz_space_7_ng_container_2_Template","ctx_r3","status","_r19","ctx_r18","IComLibsSectionDetailComponent_nz_page_header_0_form_4_Template","IComLibsSectionDetailComponent_nz_page_header_0_nz_space_6_Template","IComLibsSectionDetailComponent_nz_page_header_0_nz_space_7_Template","code","shouldRender","mode","IComLibsSectionDetailComponent","_this","FormGroup","route","ActivatedRoute","cdr","ChangeDetectorRef","modalService","NzModalService","router","Router","iComLibsServicesInventoryService","IComLibsServicesInventoryService","iComLibsServicesProductService","IComLibsServicesProductService","IComMessageService","icomLibsDynamicComponentService","IcomLibsDynamicComponentService","inventoryService","initialDataLoaded","isFirstChange","destroyRef","DestroyRef","productsNotEmptyValidator","control","products","value","productsNotEmpty","queryParams","pipe","takeUntilDestroyed","subscribe","_ref","_asyncToGenerator","params","id","detail","cloneDeep","setFields","updateFieldReadonlyStatus","formState","disabled","required","mainModel","result","lastValueFrom","detailTicket","detectChanges","_x","apply","arguments","ngAfterViewInit","setInterval","console","log","get","valueChanges","updateValueAndValidity","onlySelf","column","width","field","type","ignoreParseNumber","max","min","inputType","props","functionCheckReadonly","dataRow","gen_code_type","unlimit","clickAction","modal","create","nzTitle","nzContent","nzData","nzFooter","label","onClick","close","fieldGroupClassName","className","key","wrappers","expressions","fieldGroup","maxLength","placeholder","readonly","validators","validation","errorPath","viewValue","labelProp","valueProp","listInventoryFlashSale","page","limit","map","uniqueSelectionValidator","defaultValue","rows","hideExpression","ShowTime","datepickerOptions","nzFormat","format","import","customOption","keyGetValue","listOptionDropdown","nzServerSearch","mergeApiDataToSelectedItem","listDataMapping","nzOptionHeightPx","callBackThis","thisComp","DropDownTableRef","specificValidate","quantity_source_inventory","quantity","showAlertMessageError","columns","changeItems","event","hooks","onInit","source_inventory_idControl","startWith","distinctUntilChanged","source_inventory_idValue","getListProductOfInventory","target_inventory_id","source_inventory_id","idSelected","getQuantityProduct","product_ids","join","target_inventory_idControl","ids","product","push","product_id","e","stopPropagation","preventDefault","confirm","nzOkText","nzOkType","nzMaskClosable","nzClosable","nzOnOk","navigateByUrl","nzCancelText","nzOkDanger","processDeleteSection","bind","row","deleteTicket","then","showAlertMessageDone","catch","err","error","error_message","trimFormFields","formValues","Object","keys","forEach","trim","getFilteredProductData","_this2","valid","invalid","markFormGroupTouched","filteredProducts","requestData","updateTicket","createTicket","forceRerender","setTimeout","isReadonly","setReadonlyForField","subField","otherControlName","parent","otherControl","uniqueSelection","IComLibsSectionDetailComponent_nz_page_header_0_Template","FormlyModule","ReactiveFormsModule","CommonModule","NzTypographyModule","NzPageHeaderModule","NzSpaceModule","i5","NzTabsModule","NzIconModule","NzCardModule","NzStepsModule","NzFormModule","i6","NzButtonModule","i7","i8","i9","NzDescriptionsModule","styles","changeDetection"],"sourceRoot":"webpack:///","sources":["./libs/inventory/transfer/detail/src/modals/items/items.component.html","./libs/inventory/transfer/detail/src/modals/items/items.component.ts","./libs/inventory/transfer/detail/src/detail.component.html","./libs/inventory/transfer/detail/src/detail.component.ts"],"sourcesContent":["<div class=\"flex flex-col\">\n  <span class=\"text-sm font-semibold\"> \n    {{ nzModalData.data?.name || '' }}\n  </span>\n  <nz-input-group class=\"mt-4\" nzPrefixIcon=\"search\">\n    <input type=\"text\" nz-input [(ngModel)]=\"searchTerm\" (ngModelChange)=\"onSearchChange()\" placeholder=\"Tìm kiếm theo mã\"/>\n  </nz-input-group>\n  <div class=\"tags-list mt-4\">\n    <ng-container *ngIf=\"filteredTags.length; else noDataTemplate\">\n      <nz-tag *ngFor=\"let tag of filteredTags\">{{ tag }}</nz-tag>\n    </ng-container>\n  </div>\n</div>\n\n<ng-template #noDataTemplate>\n  <nz-empty nzNotFoundContent=\"Không có dữ liệu\"></nz-empty>\n</ng-template>\n","import { NgFor, NgIf } from '@angular/common';\nimport { Component, Input, OnInit, inject } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NZ_MODAL_DATA } from 'ng-zorro-antd/modal';\nimport { NzTagModule } from 'ng-zorro-antd/tag';\n\n@Component({\n  selector: 'app-detail-modal',\n  templateUrl: './items.component.html',\n  standalone: true,\n  imports: [\n    NzInputModule,\n    NzTagModule,\n    FormsModule,\n    NgFor,\n    NzEmptyModule,\n    NgIf\n  ]\n})\nexport class DetailModalItemsComponent implements OnInit {\n  protected filteredTags: string[] = [];\n\n  @Input() tags!: string;\n  @Input() productName: string[] = [];\n\n  searchTerm: string = '';\n  public readonly nzModalData = inject(NZ_MODAL_DATA);\n\n  ngOnInit(): void {\n    this.tags = this.nzModalData.data?.items;\n    this.filteredTags = this.tags.split(',');\n  }\n\n  onSearchChange(): void {\n    this.filteredTags = this.tags.split(',').filter(tag => \n      tag.toLowerCase().includes(this.searchTerm.toLowerCase())\n    );\n  }\n}\n","<nz-page-header *ngIf=\"data\" class=\"h-full w-full flex flex-col !absolute top-0 left-0 !py-4 !pl-4 !pr-0 !bg-[#f0f2f5]\" nzBackIcon\n  (nzBack)=\"handlerCancel()\">\n  <nz-page-header-title>{{ data?.code || 'Tạo mới' }}</nz-page-header-title>\n\n  <nz-page-header-content class=\"w-full h-full flex overflow-auto !py-0 !pl-0 !pr-4 flex-col\">\n    <form *ngIf=\"shouldRender\" nz-form [formGroup]=\"form\">\n      <div class=\"flex flex-col\">\n        <div class=\"w-full items-center test\">\n          <formly-form [model]=\"model\" [fields]=\"fields\" [form]=\"form\" [options]=\"options\">\n          </formly-form>\n        </div>\n      </div>\n    </form>\n  </nz-page-header-content>\n\n  <nz-page-header-footer class=\"flex justify-end mb-4 mr-8\">\n    <nz-space *ngIf=\"mode === 'edit' || mode === 'add'\">\n      <ng-container>\n        <button *nzSpaceItem nz-button nzType=\"default\" (click)=\"handlerCancel($event)\">\n          <span>Hủy</span>\n        </button>\n      </ng-container>\n\n      <ng-container>\n        <button *nzSpaceItem nz-button [nzLoading]=\"isLoading\" nzType=\"primary\" (click)=\"handlerSave($event)\">\n          <span>Lưu</span>\n        </button>\n      </ng-container>\n    </nz-space>\n\n    <nz-space *ngIf=\"mode !== 'only_view' && mode !== 'edit' &&  mode !== 'add'\">\n      <ng-container *ngIf=\"data?.status === 'DRAFT'\">\n        <button *nzSpaceItem nz-button nzType=\"default\" (click)=\"handlerEdit($event)\">\n          <span>Sửa</span>\n        </button>\n      </ng-container>\n\n      <ng-container *ngIf=\"data?.status === 'DRAFT'\">\n        <button *nzSpaceItem nz-button [nzLoading]=\"isLoading\" [nzDanger]=\"true\" nzType=\"primary\"\n          (click)=\"handlerRemove($event)\">\n          <span>Xóa</span>\n        </button>\n      </ng-container>\n    </nz-space>\n  </nz-page-header-footer>\n</nz-page-header>\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  inject,\n  ChangeDetectorRef,\n  Input,\n  DestroyRef,\n  AfterViewInit,\n} from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  ValidationErrors,\n  ValidatorFn,\n} from '@angular/forms';\nimport {\n  FormlyFieldConfig,\n  FormlyFormOptions,\n  FormlyModule,\n} from '@ngx-formly/core';\nimport {\n  IComLibsServicesInventoryService,\n  IComLibsServicesProductService,\n} from '@icom/services/projects';\nimport {\n  Observable,\n  distinctUntilChanged,\n  lastValueFrom,\n  map,\n  startWith,\n} from 'rxjs';\nimport { AsyncPipe, CommonModule, JsonPipe, NgIf } from '@angular/common';\nimport { NzCardModule } from 'ng-zorro-antd/card';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzPageHeaderModule } from 'ng-zorro-antd/page-header';\nimport { NzSpaceModule } from 'ng-zorro-antd/space';\nimport { NzStepsModule } from 'ng-zorro-antd/steps';\nimport { NzTabsModule } from 'ng-zorro-antd/tabs';\nimport { NzTypographyModule } from 'ng-zorro-antd/typography';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { ISectionConfig } from '@icom/interfaces';\n\nimport { markFormGroupTouched } from '@icom/defines';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { cloneDeep } from 'lodash';\nimport { NzDescriptionsModule } from 'ng-zorro-antd/descriptions';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { IComMessageService, IcomLibsDynamicComponentService } from '@icom/services/common';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { IcomLibSetValueInListPipe } from 'libs/section/detail/src/pipes/get-value-in-list.pipe';\nimport { DropdownTableTypeComponent } from '@icom/components/formly';\nimport { DetailModalItemsComponent } from './modals/items/items.component';\n@Component({\n  selector: 'app-custom-form',\n  templateUrl: './detail.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    FormlyModule,\n    ReactiveFormsModule,\n    CommonModule,\n    NzTypographyModule,\n    NzPageHeaderModule,\n    NzSpaceModule,\n    NzTabsModule,\n    NzIconModule,\n    NzCardModule,\n    NgIf,\n    NzStepsModule,\n    NzFormModule,\n    NzButtonModule,\n    NzDescriptionsModule,\n    IcomLibSetValueInListPipe,\n    AsyncPipe,\n    JsonPipe\n  ],\n  styles: [\n    `\n      .test ::ng-deep formly-group {\n        display: flex;\n        flex-wrap: wrap;\n      }\n    `,\n  ],\n})\nexport class IComLibsSectionDetailComponent implements AfterViewInit {\n  protected form = new FormGroup({});\n  protected isLoading!: boolean;\n  protected options: FormlyFormOptions = {};\n  protected model: any | undefined;\n\n  protected route = inject(ActivatedRoute);\n  protected cdr = inject(ChangeDetectorRef);\n  protected modalService = inject(NzModalService);\n  protected router = inject(Router);\n  protected iComLibsServicesInventoryService = inject(\n    IComLibsServicesInventoryService\n  );\n  protected iComLibsServicesProductService = inject(\n    IComLibsServicesProductService\n  );\n  protected IComMessageService = inject(IComMessageService);\n  protected icomLibsDynamicComponentService = inject(\n    IcomLibsDynamicComponentService\n  );\n  protected inventoryService = inject(IComLibsServicesInventoryService);\n\n  private initialDataLoaded: boolean = false;\n  isFirstChange: boolean = true;\n  protected DropDownTableRef!: DropdownTableTypeComponent;\n\n  @Input() data: any | undefined;\n  @Input() mode: 'view' | 'edit' | 'only_view' | 'add';\n\n  protected destroyRef = inject(DestroyRef);\n\n  protected fields: FormlyFieldConfig[] = [];\n\n  constructor() {\n    this.mode = 'view';\n    this.route.queryParams\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(async (params) => {\n        if (params) {\n          this.mode = params['mode'];\n          if (!params.id) {\n            this.data = {\n              detail: []\n            };\n            this.model = cloneDeep(this.data);\n            this.setFields();\n            this.updateFieldReadonlyStatus();\n            this.options = {\n              formState: {\n                disabled: false,\n                required: false,\n                mainModel: this.model,\n              },\n            };\n            // this.cdr?.detectChanges();\n            return;\n          }\n          const id = (params as any)?.id || '';\n          const result = await lastValueFrom(this.iComLibsServicesInventoryService.detailTicket(id as string));\n          this.data = result?.data || {};\n          this.model = cloneDeep(this.data);\n          this.setFields();\n          this.updateFieldReadonlyStatus();\n          this.initialDataLoaded = true;\n          this.options = {\n            formState: {\n              disabled: false,\n              required: false,\n              mainModel: this.model,\n            },\n          };\n          this.cdr?.detectChanges();\n        }\n      });\n  }\n\n  ngAfterViewInit() {\n    setInterval(() => {\n      console.log(this.model);\n    }, 5000)\n    this.form.get('source_inventory_id')?.valueChanges.subscribe(value => {\n      this.form.get('target_inventory_id')?.updateValueAndValidity({\n        onlySelf: true,\n      });\n    });\n\n    this.form.get('target_inventory_id')?.valueChanges.subscribe(value => {\n      this.form.get('source_inventory_id')?.updateValueAndValidity({\n        onlySelf: true,\n      });\n    });\n  }\n\n  protected setFields() {\n    let column: any[] = [];\n    if (this.mode === 'edit' || this.mode === 'add') {\n      column = [\n        {\n          name: 'STT',\n          width: '5%',\n          field: 'index',\n          type: 'stt',\n        },\n        {\n          name: 'ID',\n          width: '20%',\n          field: 'product_id',\n          type: 'text',\n          ignoreParseNumber: true\n        },\n        {\n          name: 'Tên voucher',\n          width: '20%',\n          field: 'name',\n          type: 'text'\n        },\n        {\n          name: 'Kiểu voucher',\n          width: '20%',\n          field: 'gen_code_type',\n          type: 'text'\n        },\n        {\n          name: 'Tồn kho chuyển',\n          width: '10%',\n          field: 'quantity_source_inventory',\n          type: 'text',\n        },\n        {\n          name: 'Tồn kho nhận',\n          width: '10%',\n          field: 'quantity_target_inventory',\n          max: 999999999,\n          type: 'text',\n        },\n        {\n          name: 'Số lượng chuyển',\n          width: '10%',\n          field: 'quantity',\n          max: 5000,\n          min: 1,\n          type: 'input',\n          required: true,\n          inputType: 'number',\n          props: {\n            functionCheckReadonly: (dataRow: any) => {\n              if (this.mode === 'view') {\n                return true;\n              }\n              if (dataRow?.gen_code_type === 'GENCODE_TYPE_PRE_GENERATED') {\n                return false;\n              }\n              if (dataRow?.gen_code_type === 'GENCODE_TYPE_FROM_3RD_PARTY' && dataRow?.unlimit === false) {\n                return false;\n              }\n              return true;\n            }\n          }\n        },\n        {\n          name: 'Hành động',\n          width: '10%',\n          field: 'actions',\n          type: 'action',\n        }\n      ];\n    } else {\n      column = [\n\n        {\n          name: 'ID',\n          width: '24%',\n          field: 'product_id',\n          type: 'text',\n          ignoreParseNumber: true\n        },\n        {\n          name: 'Tên voucher',\n          width: '25%',\n          field: 'name',\n          type: 'text'\n        },\n        {\n          name: 'Kiểu voucher',\n          width: '25%',\n          field: 'gen_code_type',\n          type: 'text'\n        },\n        {\n          name: 'Số lượng chuyển',\n          width: '25%',\n          field: 'quantity',\n          type: 'text-link',\n          props: {\n            functionCheckReadonly: () => {\n              return true;\n            },\n            clickAction: (data: any) => {\n              if(!data?.items?.length) {\n                return;\n              }\n              const modal: any = this.modalService.create({\n                nzTitle: 'Danh sách item đã chuyển',\n                nzContent: DetailModalItemsComponent,\n                nzData: { data: data },\n                nzFooter: [\n                  {\n                    label: 'Đóng',\n                    onClick: () => modal.close()\n                  }\n                ]\n              });\n              \n            }\n          }\n        }\n      ];\n    }\n    this.fields = [\n      {\n        fieldGroupClassName: 'flex flex-col',\n        className: 'basis-1/2',\n        key: '',\n        wrappers: ['group'],\n        props: {\n          label: 'Thông tin chung',\n        },\n        expressions: {\n          'props.disabled': 'formState.disabled',\n        },\n        fieldGroup: [\n          {\n            key: 'code',\n            className: 'basis-4/12',\n            type: 'input-custom',\n            props: {\n              label: 'Mã',\n              maxLength: 8,\n              placeholder: 'Nhập mã',\n              readonly: true,\n            },\n            validators: {\n              validation: [\n                { name: 'noWhitespace', options: { errorPath: 'value' } },\n              ],\n            },\n          },\n          {\n            key: 'source_inventory_id',\n            type: 'select-custom',\n            props: {\n              label: 'Từ kho',\n              required: true,\n              readonly: true,\n              viewValue: 'name',\n              labelProp: 'name',\n              valueProp: 'id',\n              options: this.inventoryService.listInventoryFlashSale({ page: 1, limit: 99999 }).pipe(\n                map(result => {\n                  return result?.data?.items || [];\n                }\n                )),\n              placeholder: 'Từ kho'\n            },\n            validators: {\n              validation: [this.uniqueSelectionValidator('target_inventory_id')],\n            },\n          },\n          {\n            key: 'target_inventory_id',\n            type: 'select-custom',\n            props: {\n              label: 'Đến kho',\n              required: true,\n              readonly: true,\n              viewValue: 'name',\n              labelProp: 'name',\n              valueProp: 'id',\n              options: this.inventoryService.listInventoryFlashSale({ page: 1, limit: 99999 }).pipe(\n                map(result => {\n                  return result?.data?.items || [];\n                }\n                )),\n              placeholder: 'Đến kho',\n            },\n            validators: {\n              validation: [this.uniqueSelectionValidator('source_inventory_id')],\n            },\n          },\n        ],\n      },\n      {\n        fieldGroupClassName: 'flex flex-col mt-4',\n        className: 'basis-1/2 pl-4 mt-4',\n        key: '',\n        wrappers: ['group'],\n        expressions: {\n          'props.disabled': 'formState.disabled',\n        },\n        fieldGroup: [\n          {\n            key: 'status',\n            type: 'radio-custom',\n            defaultValue: 'COMPLETED',\n            props: {\n              label: 'Trạng thái',\n              readonly: true,\n              viewValue: 'value',\n              labelProp: 'value',\n              valueProp: 'id',\n              options: [\n                { value: 'Phiếu tạm', id: 'DRAFT' },\n                { value: 'Hoàn thành', id: 'COMPLETED' },\n              ],\n            },\n          },\n          {\n            key: 'description',\n            type: 'textarea-custom',\n            props: {\n              label: 'Ghi chú',\n              rows: 5,\n              placeholder: 'Nhập nội dung',\n              readonly: true,\n              maxLength: 500,\n            },\n          },\n          {\n            key: 'creator_info.full_name',\n            type: 'input-custom',\n            props: {\n              label: 'Người tạo',\n              readonly: true,\n              disabled: true\n            },\n            expressions: {\n              'props.disabled': 'formState.disabled',\n            },\n            hideExpression: (model: any, formState: any, field: any) => {\n              return this.mode !== 'view';\n            },\n          },\n          {\n            key: 'created_at',\n            type: 'date',\n            props: {\n              label: 'Thời gian tạo',\n              ShowTime: true,\n              required: false,\n              datepickerOptions: {\n                nzFormat: 'dd/MM/yyyy HH:mm',\n              },\n              readonly: true,\n              format: 'dd-MM-yyyy HH:mm',\n              placeholder: 'DD-MM-YYYY hh:mm',\n            },\n            hideExpression: (model: any, formState: any, field: any) => {\n              return this.mode !== 'view';\n            },\n          },\n          {\n            key: 'updater_info.full_name',\n            type: 'input-custom',\n            props: {\n              label: 'Người sửa',\n              readonly: true,\n              disabled: true\n            },\n            expressions: {\n              'props.disabled': 'formState.disabled',\n            },\n            hideExpression: (model: any, formState: any, field: any) => {\n              return this.mode !== 'view';\n            },\n          },\n          {\n            key: 'updated_at',\n            type: 'date',\n            props: {\n              label: 'Thời gian sửa',\n              ShowTime: true,\n              required: false,\n              datepickerOptions: {\n                nzFormat: 'dd/MM/yyyy HH:mm',\n              },\n              readonly: true,\n              format: 'dd-MM-yyyy HH:mm',\n              placeholder: 'DD-MM-YYYY hh:mm',\n            },\n            hideExpression: (model: any, formState: any, field: any) => {\n              return this.mode !== 'view';\n            },\n          },\n        ],\n      },\n      {\n        fieldGroupClassName: 'flex-col mt-4',\n        key: '',\n        wrappers: ['group'],\n        props: {\n\n        },\n        expressions: {\n          'props.disabled': 'formState.disabled',\n        },\n        className: 'w-full  mt-4',\n        fieldGroup: [\n          {\n            key: '',\n            fieldGroupClassName: 'flex-col',\n            fieldGroup: [\n              {\n                key: 'detail',\n                type: 'dropdown-table',\n                fieldGroupClassName: 'flex flex-col',\n                className: 'w-full',\n                wrappers: ['group'],\n                props: {\n                  label: 'Sản phẩm',\n                  import: false,\n                  customOption: true,\n                  keyGetValue: 'source_inventory_id',\n                  placeholder: 'Thêm sản phẩm theo mã, tên sản phẩm',\n                  readonly: true,\n                  listOptionDropdown: null,\n                  nzServerSearch: true,\n                  mergeApiDataToSelectedItem: null,\n                  listDataMapping: null,\n                  nzOptionHeightPx: 72,\n                  callBackThis: (thisComp: any) => {\n                    this.DropDownTableRef = thisComp;\n                  },\n                  specificValidate: (dataRow: any) => {\n                    if (dataRow?.gen_code_type === 'GENCODE_TYPE_AUTO_ONE_BY_ONE' || (dataRow?.gen_code_type === 'GENCODE_TYPE_FROM_3RD_PARTY' && dataRow?.unlimit === true)) {\n                      return true;\n                    }\n                    if (dataRow?.quantity_source_inventory >= dataRow.quantity) {\n                      return true;\n                    }\n                    this.IComMessageService.showAlertMessageError('Số lượng chuyển cần nhỏ hơn hoặc bằng Tồn kho có thể chuyển')\n                    return false;\n                  },\n                  columns: column,\n                  changeItems: (event: any[]) => {\n                    this.model.detail = event || [];\n                  }\n                },\n                hooks: {\n                  onInit: (field: FormlyFieldConfig) => {\n                    const source_inventory_idControl = this.form.get('source_inventory_id');\n                    if (source_inventory_idControl) {\n                      source_inventory_idControl.valueChanges.pipe(\n                        startWith(source_inventory_idControl.value),\n                        distinctUntilChanged(),\n                      ).subscribe((source_inventory_idValue: any) => {\n                        field.props && (field.props.listOptionDropdown = (page: number, filter?: any): Observable<any> => {\n                          return this.inventoryService.getListProductOfInventory(source_inventory_idValue, { page: page || 1, limit: 15, ...filter }).pipe(\n                            map(result => {\n                              return result?.data;\n                            })\n                          );\n                        })\n                        const params = {\n                          target_inventory_id: this.form.get('target_inventory_id')?.value,\n                          source_inventory_id: source_inventory_idValue,\n                        };\n                        field.props && (field.props.mergeApiDataToSelectedItem = (idSelected: number[]): Observable<any> => {\n                          return this.inventoryService.getQuantityProduct({ ...params, product_ids: idSelected.join(',') }).pipe(\n                            map(result => {\n                              return result?.data;\n                            })\n                          )\n                        })\n                        field = { ...field };\n                      });\n                    }\n\n                    const target_inventory_idControl = this.form.get('target_inventory_id');\n                    if (target_inventory_idControl) {\n                      target_inventory_idControl.valueChanges.pipe(\n                        startWith(target_inventory_idControl.value),\n                        distinctUntilChanged(),\n                      ).subscribe((target_inventory_idControl: any) => {\n                        const params = {\n                          source_inventory_id: this.form.get('source_inventory_id')?.value,\n                          target_inventory_id: target_inventory_idControl,\n                        };\n                        field.props && (field.props.mergeApiDataToSelectedItem = (idSelected: number[]): Observable<any> => {\n                          return this.inventoryService.getQuantityProduct({ ...params, product_ids: idSelected.join(',') }).pipe(\n                            map(result => {\n                              return result?.data;\n                            })\n                          )\n                        })\n                        field = { ...field };\n                      });\n                    }\n\n                    if (this.model?.detail?.length && this.model.source_inventory_id && this.model.target_inventory_id) {\n                      const ids: number[] = [];\n                      this.model?.detail.map((product: any) => (\n                        ids.push(product.product_id || product.id)\n                      ));\n                      const params = {\n                        source_inventory_id: this.model.source_inventory_id,\n                        target_inventory_id: this.model.target_inventory_id,\n                        product_ids: ids.join(',')\n                      }\n                      field.props && (field.props.listDataMapping = this.inventoryService.getQuantityProduct(params).pipe(\n                        map(result => {\n                          return result?.data;\n                        })\n                      ));\n                    }\n                  },\n                },\n              },\n            ],\n          },\n        ],\n      },\n    ];\n  }\n\n  productsNotEmptyValidator = (control: FormControl): ValidationErrors | null => {\n    const products = control.value;\n    if (!products || products.length === 0) {\n      // Trả về thông báo lỗi nếu không có sản phẩm nào\n      return { 'productsNotEmpty': 'Vui lòng chọn sản phẩm.' };\n    }\n    return null; // Không có lỗi\n  };\n\n\n  protected handlerCancel(e?: Event) {\n    e?.stopPropagation();\n    e?.preventDefault();\n    if (this.mode === 'view' || this.mode === 'only_view') {\n      this.router.navigateByUrl(`inventory/transfer`);\n      return;\n    }\n    this.modalService.confirm(\n      {\n        nzTitle: !this.model?.id\n          ? 'Bạn có muốn hủy thêm mới phiếu chuyển kho không?'\n          : 'Bạn có hủy bỏ thao tác ?',\n        nzOkText: 'Đồng ý',\n        nzOkType: 'primary',\n        nzMaskClosable: false,\n        nzClosable: true,\n        nzOnOk: () => this.router.navigateByUrl(`inventory/transfer`),\n        nzCancelText: 'Đóng',\n      },\n      'info'\n    );\n  }\n\n  protected handlerRemove(e: Event) {\n    e.stopPropagation();\n    this.modalService.confirm(\n      {\n        nzTitle: `Bạn có chắc chắn muốn xóa ${this.data?.name} ?`,\n        nzOkText: 'Đồng ý',\n        nzOkType: 'primary',\n        nzOkDanger: true,\n        nzMaskClosable: false,\n        nzClosable: false,\n        nzOnOk: this.processDeleteSection.bind(this, this.data),\n        nzCancelText: 'Hủy bỏ',\n      },\n      'error'\n    );\n  }\n\n  private processDeleteSection(row: ISectionConfig | undefined) {\n    return lastValueFrom(\n      this.iComLibsServicesInventoryService.deleteTicket(row?.id || '')\n    )\n      .then(() => {\n        this.IComMessageService.showAlertMessageDone('Thao tác thành công.');\n        this.router.navigateByUrl(`inventory/transfer`);\n      })\n      .catch((err) => {\n        this.IComMessageService.showAlertMessageError((err as HttpErrorResponse)?.error?.error_message || 'Thao tác thất bại');\n      });\n  }\n\n\n\n  private trimFormFields() {\n    const formValues = this.model as any;\n    Object.keys(formValues).forEach(key => {\n      if (typeof formValues[key] === 'string') {\n        formValues[key] = formValues[key].trim();\n      }\n    });\n  }\n\n  private getFilteredProductData() {\n    const products = this.model?.detail as any;\n    return products.map((product: any) => ({\n      product_id: product.product_id || product.id,\n      quantity: product.quantity,\n    }));\n  }\n\n\n  protected async handlerSave(e: Event) {\n    e.stopPropagation();\n    e.preventDefault();\n    let valid = true;\n    this.trimFormFields();\n\n    valid = this.DropDownTableRef.handlerSave();\n\n    if (this.form.invalid) {\n      markFormGroupTouched(this.form);\n\n      return;\n    }\n    if (!valid) {\n      return;\n    }\n\n    if (!this.model?.detail || !this.model?.detail?.length) {\n      this.IComMessageService.showAlertMessageError('Vui lòng chọn sản phẩm.');\n      return;\n    }\n\n    const filteredProducts = this.getFilteredProductData();\n    const requestData = {\n      ...this.model,\n      detail: filteredProducts\n    };\n    try {\n      this.isLoading = true;\n      if (this.data?.id) {\n        await lastValueFrom(this.iComLibsServicesInventoryService.updateTicket(requestData.id, requestData));\n      } else {\n        await lastValueFrom(this.iComLibsServicesInventoryService.createTicket(requestData));\n      }\n      this.IComMessageService.showAlertMessageDone(this.data?.id ? 'Sửa mới phiếu chuyển kho thành công.' : 'Tạo mới phiếu chuyển kho thành công.');\n      this.router.navigateByUrl(`inventory/transfer`);\n    } catch (err) {\n      console.log(err);\n      this.IComMessageService.showAlertMessageError(\n        (err as any)?.error?.error_message ||\n        (this.data?.id ? 'Sửa phiếu chuyển kho thất bại.' : 'Tạo mới phiếu chuyển kho thất bại.')\n      );\n    } finally {\n      this.isLoading = false;\n      this.cdr.detectChanges();\n    }\n  }\n  shouldRender: boolean = true;\n  forceRerender() {\n    this.shouldRender = false;\n    this.cdr?.detectChanges();\n    setTimeout(() => {\n      this.shouldRender = true;\n      this.cdr?.detectChanges();\n    });\n  }\n\n  protected handlerEdit(e: Event) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.mode = 'edit';\n    this.isFirstChange = true;\n    this.model = cloneDeep(this.data);\n    this.setFields();\n    this.updateFieldReadonlyStatus();\n    this.initialDataLoaded = true;\n    this.forceRerender();\n    this.options = {\n      formState: {\n        disabled: false,\n        required: false,\n        mainModel: this.model,\n      },\n    };\n  }\n\n  private updateFieldReadonlyStatus() {\n    let isReadonly = true;\n    if (this.mode === 'edit' || this.mode === 'add') {\n      isReadonly = false;\n    }\n    this.fields.forEach((field) => {\n      this.setReadonlyForField(field, isReadonly);\n    });\n  }\n\n  private setReadonlyForField(field: FormlyFieldConfig, readonly: boolean) {\n    if (field.fieldGroup) {\n      field.fieldGroup.forEach((subField) =>\n        this.setReadonlyForField(subField, readonly)\n      );\n    } else {\n      if (field.props) {\n        field.props.readonly = readonly;\n        field.props.disabled = readonly;\n      }\n    }\n  }\n\n  private uniqueSelectionValidator(otherControlName: string): ValidatorFn {\n    return (control): ValidationErrors | null => {\n      if (!control.parent) {\n        return null;\n      }\n      const otherControl = control?.parent?.get(otherControlName);\n      if (!otherControl) {\n        return null;\n      }\n      const areValuesEqual = control.value === otherControl.value;\n      return areValuesEqual ? { 'uniqueSelection': 'Kho' } : null;\n    };\n  }\n\n}\n"],"x_google_ignoreList":[]}